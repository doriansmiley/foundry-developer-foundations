{
  "version": 3,
  "sources": ["../node_modules/preact/src/constants.js", "../node_modules/preact/src/util.js", "../node_modules/preact/src/options.js", "../node_modules/preact/src/create-element.js", "../node_modules/preact/src/component.js", "../node_modules/preact/src/diff/props.js", "../node_modules/preact/src/create-context.js", "../node_modules/preact/src/diff/children.js", "../node_modules/preact/src/diff/index.js", "../node_modules/preact/src/render.js", "../node_modules/preact/src/clone-element.js", "../node_modules/preact/src/diff/catch-error.js", "../node_modules/preact/hooks/src/index.js", "../node_modules/preact/compat/src/util.js", "../node_modules/preact/compat/src/hooks.js", "../node_modules/preact/compat/src/PureComponent.js", "../node_modules/preact/compat/src/memo.js", "../node_modules/preact/compat/src/forwardRef.js", "../node_modules/preact/compat/src/Children.js", "../node_modules/preact/compat/src/suspense.js", "../node_modules/preact/compat/src/suspense-list.js", "../node_modules/preact/src/constants.js", "../node_modules/preact/compat/src/portals.js", "../node_modules/preact/compat/src/render.js", "../node_modules/preact/compat/src/index.js", "../node_modules/preact/jsx-runtime/src/utils.js", "../node_modules/preact/src/constants.js", "../node_modules/preact/jsx-runtime/src/index.js", "../webview/src/main.tsx", "../../../node_modules/@tanstack/query-core/src/subscribable.ts", "../../../node_modules/@tanstack/query-core/src/timeoutManager.ts", "../../../node_modules/@tanstack/query-core/src/utils.ts", "../../../node_modules/@tanstack/query-core/src/focusManager.ts", "../../../node_modules/@tanstack/query-core/src/thenable.ts", "../../../node_modules/@tanstack/query-core/src/notifyManager.ts", "../../../node_modules/@tanstack/query-core/src/onlineManager.ts", "../../../node_modules/@tanstack/query-core/src/retryer.ts", "../../../node_modules/@tanstack/query-core/src/removable.ts", "../../../node_modules/@tanstack/query-core/src/query.ts", "../../../node_modules/@tanstack/query-core/src/queryObserver.ts", "../../../node_modules/@tanstack/query-core/src/infiniteQueryBehavior.ts", "../../../node_modules/@tanstack/query-core/src/mutation.ts", "../../../node_modules/@tanstack/query-core/src/mutationCache.ts", "../../../node_modules/@tanstack/query-core/src/queryCache.ts", "../../../node_modules/@tanstack/query-core/src/queryClient.ts", "../../../node_modules/@tanstack/react-query/src/QueryClientProvider.tsx", "../../../node_modules/@tanstack/react-query/src/IsRestoringProvider.ts", "../../../node_modules/@tanstack/react-query/src/QueryErrorResetBoundary.tsx", "../../../node_modules/@tanstack/react-query/src/errorBoundaryUtils.ts", "../../../node_modules/@tanstack/react-query/src/suspense.ts", "../../../node_modules/@tanstack/react-query/src/useBaseQuery.ts", "../../../node_modules/@tanstack/react-query/src/useQuery.ts", "../webview/src/views/AppRoot.tsx", "../../../node_modules/preact/src/constants.js", "../../../node_modules/preact/src/util.js", "../../../node_modules/preact/src/options.js", "../../../node_modules/preact/src/create-element.js", "../../../node_modules/preact/src/component.js", "../../../node_modules/preact/src/diff/props.js", "../../../node_modules/preact/src/create-context.js", "../../../node_modules/preact/src/diff/children.js", "../../../node_modules/preact/src/diff/index.js", "../../../node_modules/preact/src/render.js", "../../../node_modules/preact/src/clone-element.js", "../../../node_modules/preact/src/diff/catch-error.js", "../../../node_modules/preact/hooks/src/index.js", "../../../node_modules/@preact/signals-core/src/index.ts", "../../../node_modules/@preact/signals/src/index.ts", "../webview/src/signals/store.ts", "../webview/src/views/MainRepoScreen.tsx", "../webview/src/lib/http.ts", "../webview/src/hooks/useThreadsQuery.ts", "../webview/src/lib/vscode.ts", "../node_modules/preact/jsx-runtime/src/utils.js", "../node_modules/preact/src/constants.js", "../node_modules/preact/jsx-runtime/src/index.js", "../webview/src/views/components/ThreadsList.tsx", "../webview/src/views/components/AnimatedEllipsis.tsx", "../webview/src/views/WorktreeScreen.tsx", "../webview/src/hooks/useMachineQuery.ts", "../webview/src/hooks/useGlobalSSE.ts", "../webview/src/lib/sse.ts", "../webview/src/lib/query.ts", "../webview/src/hooks/useMachineSSE.ts", "../webview/src/views/components/Loader.tsx", "../webview/src/views/BootChannel.tsx"],
  "sourcesContent": ["/** Normal hydration that attaches to a DOM tree but does not diff it. */\nexport const MODE_HYDRATE = 1 << 5;\n/** Signifies this VNode suspended on the previous render */\nexport const MODE_SUSPENDED = 1 << 7;\n/** Indicates that this node needs to be inserted while patching children */\nexport const INSERT_VNODE = 1 << 2;\n/** Indicates a VNode has been matched with another VNode in the diff */\nexport const MATCHED = 1 << 1;\n\n/** Reset all mode flags */\nexport const RESET_MODE = ~(MODE_HYDRATE | MODE_SUSPENDED);\n\nexport const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\nexport const XHTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\nexport const MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n\nexport const NULL = null;\nexport const UNDEFINED = undefined;\nexport const EMPTY_OBJ = /** @type {any} */ ({});\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL =\n\t/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n", "import { EMPTY_ARR } from './constants';\n\nexport const isArray = Array.isArray;\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-expect-error We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {import('./index').ContainerNode} node The node to remove\n */\nexport function removeNode(node) {\n\tif (node && node.parentNode) node.parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n", "import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n", "import { slice } from './util';\nimport options from './options';\nimport { NULL, UNDEFINED } from './constants';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component constructor for this\n * virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the\n * virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != NULL) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === UNDEFINED) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, NULL);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\t/** @type {import('./internal').VNode} */\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: NULL,\n\t\t_parent: NULL,\n\t\t_depth: 0,\n\t\t_dom: NULL,\n\t\t_component: NULL,\n\t\tconstructor: UNDEFINED,\n\t\t_original: original == NULL ? ++vnodeId : original,\n\t\t_index: -1,\n\t\t_flags: 0\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == NULL && options.vnode != NULL) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: NULL };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != NULL && vnode.constructor == UNDEFINED;\n", "import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\nimport { MODE_HYDRATE, NULL } from './constants';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function BaseComponent(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nBaseComponent.prototype.setState = function (update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != NULL && this._nextState != this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == NULL) return;\n\n\tif (this._vnode) {\n\t\tif (callback) {\n\t\t\tthis._stateCallbacks.push(callback);\n\t\t}\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nBaseComponent.prototype.forceUpdate = function (callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](https://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {ComponentChildren | void}\n */\nBaseComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == NULL) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._index + 1)\n\t\t\t: NULL;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != NULL && sibling._dom != NULL) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : NULL;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet oldVNode = component._vnode,\n\t\toldDom = oldVNode._dom,\n\t\tcommitQueue = [],\n\t\trefQueue = [];\n\n\tif (component._parentDom) {\n\t\tconst newVNode = assign({}, oldVNode);\n\t\tnewVNode._original = oldVNode._original + 1;\n\t\tif (options.vnode) options.vnode(newVNode);\n\n\t\tdiff(\n\t\t\tcomponent._parentDom,\n\t\t\tnewVNode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tcomponent._parentDom.namespaceURI,\n\t\t\toldVNode._flags & MODE_HYDRATE ? [oldDom] : NULL,\n\t\t\tcommitQueue,\n\t\t\toldDom == NULL ? getDomSibling(oldVNode) : oldDom,\n\t\t\t!!(oldVNode._flags & MODE_HYDRATE),\n\t\t\trefQueue\n\t\t);\n\n\t\tnewVNode._original = oldVNode._original;\n\t\tnewVNode._parent._children[newVNode._index] = newVNode;\n\t\tcommitRoot(commitQueue, newVNode, refQueue);\n\t\toldVNode._dom = oldVNode._parent = null;\n\n\t\tif (newVNode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(newVNode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != NULL && vnode._component != NULL) {\n\t\tvnode._dom = vnode._component.base = NULL;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != NULL && child._dom != NULL) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce != options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/**\n * @param {import('./internal').Component} a\n * @param {import('./internal').Component} b\n */\nconst depthSort = (a, b) => a._vnode._depth - b._vnode._depth;\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet c,\n\t\tl = 1;\n\n\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t// process() calls from getting scheduled while `queue` is still being consumed.\n\twhile (rerenderQueue.length) {\n\t\t// Keep the rerender queue sorted by (depth, insertion order). The queue\n\t\t// will initially be sorted on the first iteration only if it has more than 1 item.\n\t\t//\n\t\t// New items can be added to the queue e.g. when rerendering a provider, so we want to\n\t\t// keep the order from top to bottom with those new items so we can handle them in a\n\t\t// single pass\n\t\tif (rerenderQueue.length > l) {\n\t\t\trerenderQueue.sort(depthSort);\n\t\t}\n\n\t\tc = rerenderQueue.shift();\n\t\tl = rerenderQueue.length;\n\n\t\tif (c._dirty) {\n\t\t\trenderComponent(c);\n\t\t}\n\t}\n\tprocess._rerenderCount = 0;\n}\n\nprocess._rerenderCount = 0;\n", "import { IS_NON_DIMENSIONAL, NULL, SVG_NAMESPACE } from '../constants';\nimport options from '../options';\n\nfunction setStyle(style, key, value) {\n\tif (key[0] == '-') {\n\t\tstyle.setProperty(key, value == NULL ? '' : value);\n\t} else if (value == NULL) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\nconst CAPTURE_REGEX = /(PointerCapture)$|Capture$/i;\n\n// A logical clock to solve issues like https://github.com/preactjs/preact/issues/3927.\n// When the DOM performs an event it leaves micro-ticks in between bubbling up which means that\n// an event can trigger on a newly reated DOM-node while the event bubbles up.\n//\n// Originally inspired by Vue\n// (https://github.com/vuejs/core/blob/caeb8a68811a1b0f79/packages/runtime-dom/src/modules/events.ts#L90-L101),\n// but modified to use a logical clock instead of Date.now() in case event handlers get attached\n// and events get dispatched during the same millisecond.\n//\n// The clock is incremented after each new event dispatch. This allows 1 000 000 new events\n// per second for over 280 years before the value reaches Number.MAX_SAFE_INTEGER (2**53 - 1).\nlet eventClock = 0;\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {string} namespace Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, namespace) {\n\tlet useCapture;\n\n\to: if (name == 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] != oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] == 'o' && name[1] == 'n') {\n\t\tuseCapture = name != (name = name.replace(CAPTURE_REGEX, '$1'));\n\t\tconst lowerCaseName = name.toLowerCase();\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (lowerCaseName in dom || name == 'onFocusOut' || name == 'onFocusIn')\n\t\t\tname = lowerCaseName.slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tvalue._attached = eventClock;\n\t\t\t\tdom.addEventListener(\n\t\t\t\t\tname,\n\t\t\t\t\tuseCapture ? eventProxyCapture : eventProxy,\n\t\t\t\t\tuseCapture\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tvalue._attached = oldValue._attached;\n\t\t\t}\n\t\t} else {\n\t\t\tdom.removeEventListener(\n\t\t\t\tname,\n\t\t\t\tuseCapture ? eventProxyCapture : eventProxy,\n\t\t\t\tuseCapture\n\t\t\t);\n\t\t}\n\t} else {\n\t\tif (namespace == SVG_NAMESPACE) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname != 'width' &&\n\t\t\tname != 'height' &&\n\t\t\tname != 'href' &&\n\t\t\tname != 'list' &&\n\t\t\tname != 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname != 'tabIndex' &&\n\t\t\tname != 'download' &&\n\t\t\tname != 'rowSpan' &&\n\t\t\tname != 'colSpan' &&\n\t\t\tname != 'role' &&\n\t\t\tname != 'popover' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == NULL ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// aria- and data- attributes have no boolean representation.\n\t\t// A `false` value is different from the attribute not being\n\t\t// present, so we can't remove it. For non-boolean aria\n\t\t// attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost too many bytes. On top of\n\t\t// that other frameworks generally stringify `false`.\n\n\t\tif (typeof value == 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (value != NULL && (value !== false || name[4] == '-')) {\n\t\t\tdom.setAttribute(name, name == 'popover' && value == true ? '' : value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Create an event proxy function.\n * @param {boolean} useCapture Is the event handler for the capture phase.\n * @private\n */\nfunction createEventProxy(useCapture) {\n\t/**\n\t * Proxy an event to hooked event handlers\n\t * @param {import('../internal').PreactEvent} e The event object from the browser\n\t * @private\n\t */\n\treturn function (e) {\n\t\tif (this._listeners) {\n\t\t\tconst eventHandler = this._listeners[e.type + useCapture];\n\t\t\tif (e._dispatched == NULL) {\n\t\t\t\te._dispatched = eventClock++;\n\n\t\t\t\t// When `e._dispatched` is smaller than the time when the targeted event\n\t\t\t\t// handler was attached we know we have bubbled up to an element that was added\n\t\t\t\t// during patching the DOM.\n\t\t\t} else if (e._dispatched < eventHandler._attached) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn eventHandler(options.event ? options.event(e) : e);\n\t\t}\n\t};\n}\n\nconst eventProxy = createEventProxy(false);\nconst eventProxyCapture = createEventProxy(true);\n", "import { enqueueRender } from './component';\nimport { NULL } from './constants';\n\nexport let i = 0;\n\nexport function createContext(defaultValue) {\n\tfunction Context(props) {\n\t\tif (!this.getChildContext) {\n\t\t\t/** @type {Set<import('./internal').Component> | null} */\n\t\t\tlet subs = new Set();\n\t\t\tlet ctx = {};\n\t\t\tctx[Context._id] = this;\n\n\t\t\tthis.getChildContext = () => ctx;\n\n\t\t\tthis.componentWillUnmount = () => {\n\t\t\t\tsubs = NULL;\n\t\t\t};\n\n\t\t\tthis.shouldComponentUpdate = function (_props) {\n\t\t\t\t// @ts-expect-error even\n\t\t\t\tif (this.props.value != _props.value) {\n\t\t\t\t\tsubs.forEach(c => {\n\t\t\t\t\t\tc._force = true;\n\t\t\t\t\t\tenqueueRender(c);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.sub = c => {\n\t\t\t\tsubs.add(c);\n\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\tif (subs) {\n\t\t\t\t\t\tsubs.delete(c);\n\t\t\t\t\t}\n\t\t\t\t\tif (old) old.call(c);\n\t\t\t\t};\n\t\t\t};\n\t\t}\n\n\t\treturn props.children;\n\t}\n\n\tContext._id = '__cC' + i++;\n\tContext._defaultValue = defaultValue;\n\n\t/** @type {import('./internal').FunctionComponent} */\n\tContext.Consumer = (props, contextValue) => {\n\t\treturn props.children(contextValue);\n\t};\n\n\t// we could also get rid of _contextRef entirely\n\tContext.Provider =\n\t\tContext._contextRef =\n\t\tContext.Consumer.contextType =\n\t\t\tContext;\n\n\treturn Context;\n}\n", "import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport {\n\tEMPTY_OBJ,\n\tEMPTY_ARR,\n\tINSERT_VNODE,\n\tMATCHED,\n\tUNDEFINED,\n\tNULL\n} from '../constants';\nimport { isArray } from '../util';\nimport { getDomSibling } from '../component';\n\n/**\n * @typedef {import('../internal').ComponentChildren} ComponentChildren\n * @typedef {import('../internal').Component} Component\n * @typedef {import('../internal').PreactElement} PreactElement\n * @typedef {import('../internal').VNode} VNode\n */\n\n/**\n * Diff the children of a virtual node\n * @param {PreactElement} parentDom The DOM element whose children are being\n * diffed\n * @param {ComponentChildren[]} renderResult\n * @param {VNode} newParentVNode The new virtual node whose children should be\n * diff'ed against oldParentVNode\n * @param {VNode} oldParentVNode The old virtual node whose children should be\n * diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by\n * getChildContext\n * @param {string} namespace Current namespace of the DOM node (HTML, SVG, or MathML)\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {PreactElement} oldDom The current attached DOM element any new dom\n * elements should be placed around. Likely `null` on first render (except when\n * hydrating). Can be a sibling DOM element when diffing Fragments that have\n * siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tnamespace,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating,\n\trefQueue\n) {\n\tlet i,\n\t\t/** @type {VNode} */\n\t\toldVNode,\n\t\t/** @type {VNode} */\n\t\tchildVNode,\n\t\t/** @type {PreactElement} */\n\t\tnewDom,\n\t\t/** @type {PreactElement} */\n\t\tfirstChildDom;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\t/** @type {VNode[]} */\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet newChildrenLength = renderResult.length;\n\n\toldDom = constructNewChildrenArray(\n\t\tnewParentVNode,\n\t\trenderResult,\n\t\toldChildren,\n\t\toldDom,\n\t\tnewChildrenLength\n\t);\n\n\tfor (i = 0; i < newChildrenLength; i++) {\n\t\tchildVNode = newParentVNode._children[i];\n\t\tif (childVNode == NULL) continue;\n\n\t\t// At this point, constructNewChildrenArray has assigned _index to be the\n\t\t// matchingIndex for this VNode's oldVNode (or -1 if there is no oldVNode).\n\t\tif (childVNode._index == -1) {\n\t\t\toldVNode = EMPTY_OBJ;\n\t\t} else {\n\t\t\toldVNode = oldChildren[childVNode._index] || EMPTY_OBJ;\n\t\t}\n\n\t\t// Update childVNode._index to its final index\n\t\tchildVNode._index = i;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tlet result = diff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tnamespace,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating,\n\t\t\trefQueue\n\t\t);\n\n\t\t// Adjust DOM nodes\n\t\tnewDom = childVNode._dom;\n\t\tif (childVNode.ref && oldVNode.ref != childVNode.ref) {\n\t\t\tif (oldVNode.ref) {\n\t\t\t\tapplyRef(oldVNode.ref, NULL, childVNode);\n\t\t\t}\n\t\t\trefQueue.push(\n\t\t\t\tchildVNode.ref,\n\t\t\t\tchildVNode._component || newDom,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t}\n\n\t\tif (firstChildDom == NULL && newDom != NULL) {\n\t\t\tfirstChildDom = newDom;\n\t\t}\n\n\t\tlet shouldPlace = !!(childVNode._flags & INSERT_VNODE);\n\t\tif (shouldPlace || oldVNode._children === childVNode._children) {\n\t\t\toldDom = insert(childVNode, oldDom, parentDom, shouldPlace);\n\t\t} else if (typeof childVNode.type == 'function' && result !== UNDEFINED) {\n\t\t\toldDom = result;\n\t\t} else if (newDom) {\n\t\t\toldDom = newDom.nextSibling;\n\t\t}\n\n\t\t// Unset diffing flags\n\t\tchildVNode._flags &= ~(INSERT_VNODE | MATCHED);\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\treturn oldDom;\n}\n\n/**\n * @param {VNode} newParentVNode\n * @param {ComponentChildren[]} renderResult\n * @param {VNode[]} oldChildren\n */\nfunction constructNewChildrenArray(\n\tnewParentVNode,\n\trenderResult,\n\toldChildren,\n\toldDom,\n\tnewChildrenLength\n) {\n\t/** @type {number} */\n\tlet i;\n\t/** @type {VNode} */\n\tlet childVNode;\n\t/** @type {VNode} */\n\tlet oldVNode;\n\n\tlet oldChildrenLength = oldChildren.length,\n\t\tremainingOldChildren = oldChildrenLength;\n\n\tlet skew = 0;\n\n\tnewParentVNode._children = new Array(newChildrenLength);\n\tfor (i = 0; i < newChildrenLength; i++) {\n\t\t// @ts-expect-error We are reusing the childVNode variable to hold both the\n\t\t// pre and post normalized childVNode\n\t\tchildVNode = renderResult[i];\n\n\t\tif (\n\t\t\tchildVNode == NULL ||\n\t\t\ttypeof childVNode == 'boolean' ||\n\t\t\ttypeof childVNode == 'function'\n\t\t) {\n\t\t\tnewParentVNode._children[i] = NULL;\n\t\t\tcontinue;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint' ||\n\t\t\tchildVNode.constructor == String\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tNULL,\n\t\t\t\tchildVNode,\n\t\t\t\tNULL,\n\t\t\t\tNULL,\n\t\t\t\tNULL\n\t\t\t);\n\t\t} else if (isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tNULL,\n\t\t\t\tNULL,\n\t\t\t\tNULL\n\t\t\t);\n\t\t} else if (childVNode.constructor == UNDEFINED && childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tchildVNode.ref ? childVNode.ref : NULL,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\tconst skewedIndex = i + skew;\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Temporarily store the matchingIndex on the _index property so we can pull\n\t\t// out the oldVNode in diffChildren. We'll override this to the VNode's\n\t\t// final index after using this property to get the oldVNode\n\t\tconst matchingIndex = (childVNode._index = findMatchingIndex(\n\t\t\tchildVNode,\n\t\t\toldChildren,\n\t\t\tskewedIndex,\n\t\t\tremainingOldChildren\n\t\t));\n\n\t\toldVNode = NULL;\n\t\tif (matchingIndex != -1) {\n\t\t\toldVNode = oldChildren[matchingIndex];\n\t\t\tremainingOldChildren--;\n\t\t\tif (oldVNode) {\n\t\t\t\toldVNode._flags |= MATCHED;\n\t\t\t}\n\t\t}\n\n\t\t// Here, we define isMounting for the purposes of the skew diffing\n\t\t// algorithm. Nodes that are unsuspending are considered mounting and we detect\n\t\t// this by checking if oldVNode._original == null\n\t\tconst isMounting = oldVNode == NULL || oldVNode._original == NULL;\n\n\t\tif (isMounting) {\n\t\t\tif (matchingIndex == -1) {\n\t\t\t\t// When the array of children is growing we need to decrease the skew\n\t\t\t\t// as we are adding a new element to the array.\n\t\t\t\t// Example:\n\t\t\t\t// [1, 2, 3] --> [0, 1, 2, 3]\n\t\t\t\t// oldChildren   newChildren\n\t\t\t\t//\n\t\t\t\t// The new element is at index 0, so our skew is 0,\n\t\t\t\t// we need to decrease the skew as we are adding a new element.\n\t\t\t\t// The decrease will cause us to compare the element at position 1\n\t\t\t\t// with value 1 with the element at position 0 with value 0.\n\t\t\t\t//\n\t\t\t\t// A linear concept is applied when the array is shrinking,\n\t\t\t\t// if the length is unchanged we can assume that no skew\n\t\t\t\t// changes are needed.\n\t\t\t\tif (newChildrenLength > oldChildrenLength) {\n\t\t\t\t\tskew--;\n\t\t\t\t} else if (newChildrenLength < oldChildrenLength) {\n\t\t\t\t\tskew++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we are mounting a DOM VNode, mark it for insertion\n\t\t\tif (typeof childVNode.type != 'function') {\n\t\t\t\tchildVNode._flags |= INSERT_VNODE;\n\t\t\t}\n\t\t} else if (matchingIndex != skewedIndex) {\n\t\t\t// When we move elements around i.e. [0, 1, 2] --> [1, 0, 2]\n\t\t\t// --> we diff 1, we find it at position 1 while our skewed index is 0 and our skew is 0\n\t\t\t//     we set the skew to 1 as we found an offset.\n\t\t\t// --> we diff 0, we find it at position 0 while our skewed index is at 2 and our skew is 1\n\t\t\t//     this makes us increase the skew again.\n\t\t\t// --> we diff 2, we find it at position 2 while our skewed index is at 4 and our skew is 2\n\t\t\t//\n\t\t\t// this becomes an optimization question where currently we see a 1 element offset as an insertion\n\t\t\t// or deletion i.e. we optimize for [0, 1, 2] --> [9, 0, 1, 2]\n\t\t\t// while a more than 1 offset we see as a swap.\n\t\t\t// We could probably build heuristics for having an optimized course of action here as well, but\n\t\t\t// might go at the cost of some bytes.\n\t\t\t//\n\t\t\t// If we wanted to optimize for i.e. only swaps we'd just do the last two code-branches and have\n\t\t\t// only the first item be a re-scouting and all the others fall in their skewed counter-part.\n\t\t\t// We could also further optimize for swaps\n\t\t\tif (matchingIndex == skewedIndex - 1) {\n\t\t\t\tskew--;\n\t\t\t} else if (matchingIndex == skewedIndex + 1) {\n\t\t\t\tskew++;\n\t\t\t} else {\n\t\t\t\tif (matchingIndex > skewedIndex) {\n\t\t\t\t\tskew--;\n\t\t\t\t} else {\n\t\t\t\t\tskew++;\n\t\t\t\t}\n\n\t\t\t\t// Move this VNode's DOM if the original index (matchingIndex) doesn't\n\t\t\t\t// match the new skew index (i + new skew)\n\t\t\t\t// In the former two branches we know that it matches after skewing\n\t\t\t\tchildVNode._flags |= INSERT_VNODE;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove remaining oldChildren if there are any. Loop forwards so that as we\n\t// unmount DOM from the beginning of the oldChildren, we can adjust oldDom to\n\t// point to the next child, which needs to be the first DOM node that won't be\n\t// unmounted.\n\tif (remainingOldChildren) {\n\t\tfor (i = 0; i < oldChildrenLength; i++) {\n\t\t\toldVNode = oldChildren[i];\n\t\t\tif (oldVNode != NULL && (oldVNode._flags & MATCHED) == 0) {\n\t\t\t\tif (oldVNode._dom == oldDom) {\n\t\t\t\t\toldDom = getDomSibling(oldVNode);\n\t\t\t\t}\n\n\t\t\t\tunmount(oldVNode, oldVNode);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * @param {VNode} parentVNode\n * @param {PreactElement} oldDom\n * @param {PreactElement} parentDom\n * @param {boolean} shouldPlace\n * @returns {PreactElement}\n */\nfunction insert(parentVNode, oldDom, parentDom, shouldPlace) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\n\tif (typeof parentVNode.type == 'function') {\n\t\tlet children = parentVNode._children;\n\t\tfor (let i = 0; children && i < children.length; i++) {\n\t\t\tif (children[i]) {\n\t\t\t\t// If we enter this code path on sCU bailout, where we copy\n\t\t\t\t// oldVNode._children to newVNode._children, we need to update the old\n\t\t\t\t// children's _parent pointer to point to the newVNode (parentVNode\n\t\t\t\t// here).\n\t\t\t\tchildren[i]._parent = parentVNode;\n\t\t\t\toldDom = insert(children[i], oldDom, parentDom, shouldPlace);\n\t\t\t}\n\t\t}\n\n\t\treturn oldDom;\n\t} else if (parentVNode._dom != oldDom) {\n\t\tif (shouldPlace) {\n\t\t\tif (oldDom && parentVNode.type && !oldDom.parentNode) {\n\t\t\t\toldDom = getDomSibling(parentVNode);\n\t\t\t}\n\t\t\tparentDom.insertBefore(parentVNode._dom, oldDom || NULL);\n\t\t}\n\t\toldDom = parentVNode._dom;\n\t}\n\n\tdo {\n\t\toldDom = oldDom && oldDom.nextSibling;\n\t} while (oldDom != NULL && oldDom.nodeType == 8);\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {ComponentChildren} children The unflattened children of a virtual\n * node\n * @returns {VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == NULL || typeof children == 'boolean') {\n\t} else if (isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\n/**\n * @param {VNode} childVNode\n * @param {VNode[]} oldChildren\n * @param {number} skewedIndex\n * @param {number} remainingOldChildren\n * @returns {number}\n */\nfunction findMatchingIndex(\n\tchildVNode,\n\toldChildren,\n\tskewedIndex,\n\tremainingOldChildren\n) {\n\tconst key = childVNode.key;\n\tconst type = childVNode.type;\n\tlet oldVNode = oldChildren[skewedIndex];\n\tconst matched = oldVNode != NULL && (oldVNode._flags & MATCHED) == 0;\n\n\t// We only need to perform a search if there are more children\n\t// (remainingOldChildren) to search. However, if the oldVNode we just looked\n\t// at skewedIndex was not already used in this diff, then there must be at\n\t// least 1 other (so greater than 1) remainingOldChildren to attempt to match\n\t// against. So the following condition checks that ensuring\n\t// remainingOldChildren > 1 if the oldVNode is not already used/matched. Else\n\t// if the oldVNode was null or matched, then there could needs to be at least\n\t// 1 (aka `remainingOldChildren > 0`) children to find and compare against.\n\t//\n\t// If there is an unkeyed functional VNode, that isn't a built-in like our Fragment,\n\t// we should not search as we risk re-using state of an unrelated VNode. (reverted for now)\n\tlet shouldSearch =\n\t\t// (typeof type != 'function' || type === Fragment || key) &&\n\t\tremainingOldChildren > (matched ? 1 : 0);\n\n\tif (\n\t\t(oldVNode === NULL && childVNode.key == null) ||\n\t\t(matched && key == oldVNode.key && type == oldVNode.type)\n\t) {\n\t\treturn skewedIndex;\n\t} else if (shouldSearch) {\n\t\tlet x = skewedIndex - 1;\n\t\tlet y = skewedIndex + 1;\n\t\twhile (x >= 0 || y < oldChildren.length) {\n\t\t\tconst childIndex = x >= 0 ? x-- : y++;\n\t\t\toldVNode = oldChildren[childIndex];\n\t\t\tif (\n\t\t\t\toldVNode != NULL &&\n\t\t\t\t(oldVNode._flags & MATCHED) == 0 &&\n\t\t\t\tkey == oldVNode.key &&\n\t\t\t\ttype == oldVNode.type\n\t\t\t) {\n\t\t\t\treturn childIndex;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn -1;\n}\n", "import {\n\tEMPTY_OBJ,\n\tMATH_NAMESPACE,\n\tMODE_HYDRATE,\n\tMODE_SUSPENDED,\n\tNULL,\n\tRESET_MODE,\n\tSVG_NAMESPACE,\n\tUNDEFINED,\n\tXHTML_NAMESPACE\n} from '../constants';\nimport { BaseComponent, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { setProperty } from './props';\nimport { assign, isArray, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * @typedef {import('../internal').ComponentChildren} ComponentChildren\n * @typedef {import('../internal').Component} Component\n * @typedef {import('../internal').PreactElement} PreactElement\n * @typedef {import('../internal').VNode} VNode\n */\n\n/**\n * @template {any} T\n * @typedef {import('../internal').Ref<T>} Ref<T>\n */\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {PreactElement} parentDom The parent of the DOM element\n * @param {VNode} newVNode The new virtual node\n * @param {VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by\n * getChildContext\n * @param {string} namespace Current namespace of the DOM node (HTML, SVG, or MathML)\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {PreactElement} oldDom The current attached DOM element any new dom\n * elements should be placed around. Likely `null` on first render (except when\n * hydrating). Can be a sibling DOM element when diffing Fragments that have\n * siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tnamespace,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating,\n\trefQueue\n) {\n\t/** @type {any} */\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor != UNDEFINED) return NULL;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._flags & MODE_SUSPENDED) {\n\t\tisHydrating = !!(oldVNode._flags & MODE_HYDRATE);\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\touter: if (typeof newType == 'function') {\n\t\ttry {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\t\t\tconst isClassComponent =\n\t\t\t\t'prototype' in newType && newType.prototype.render;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif (isClassComponent) {\n\t\t\t\t\t// @ts-expect-error The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-expect-error Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new BaseComponent(\n\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (isClassComponent && c._nextState == NULL) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\n\t\t\tif (isClassComponent && newType.getDerivedStateFromProps != NULL) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\t\t\tc._vnode = newVNode;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tisClassComponent &&\n\t\t\t\t\tnewType.getDerivedStateFromProps == NULL &&\n\t\t\t\t\tc.componentWillMount != NULL\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (isClassComponent && c.componentDidMount != NULL) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tisClassComponent &&\n\t\t\t\t\tnewType.getDerivedStateFromProps == NULL &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != NULL\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != NULL &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original == oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original != oldVNode._original) {\n\t\t\t\t\t\t// When we are dealing with a bail because of sCU we have to update\n\t\t\t\t\t\t// the props, state and dirty-state.\n\t\t\t\t\t\t// when we are dealing with strict-equality we don't as the child could still\n\t\t\t\t\t\t// be dirtied see #3883\n\t\t\t\t\t\tc.props = newProps;\n\t\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t\tc._dirty = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.some(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\n\t\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t\t}\n\t\t\t\t\tc._stateCallbacks = [];\n\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != NULL) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (isClassComponent && c.componentDidUpdate != NULL) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc._parentDom = parentDom;\n\t\t\tc._force = false;\n\n\t\t\tlet renderHook = options._render,\n\t\t\t\tcount = 0;\n\t\t\tif (isClassComponent) {\n\t\t\t\tc.state = c._nextState;\n\t\t\t\tc._dirty = false;\n\n\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t}\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\t\t// Handle setState called in render, see #2553\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t} while (c._dirty && ++count < 25);\n\t\t\t}\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != NULL) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (isClassComponent && !isNew && c.getSnapshotBeforeUpdate != NULL) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != NULL && tmp.type === Fragment && tmp.key == NULL;\n\t\t\tlet renderResult = tmp;\n\n\t\t\tif (isTopLevelFragment) {\n\t\t\t\trenderResult = cloneNode(tmp.props.children);\n\t\t\t}\n\n\t\t\toldDom = diffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tisArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tnamespace,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating,\n\t\t\t\trefQueue\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._flags &= RESET_MODE;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = NULL;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tnewVNode._original = NULL;\n\t\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\t\tif (isHydrating || excessDomChildren != NULL) {\n\t\t\t\tif (e.then) {\n\t\t\t\t\tnewVNode._flags |= isHydrating\n\t\t\t\t\t\t? MODE_HYDRATE | MODE_SUSPENDED\n\t\t\t\t\t\t: MODE_SUSPENDED;\n\n\t\t\t\t\twhile (oldDom && oldDom.nodeType == 8 && oldDom.nextSibling) {\n\t\t\t\t\t\toldDom = oldDom.nextSibling;\n\t\t\t\t\t}\n\n\t\t\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = NULL;\n\t\t\t\t\tnewVNode._dom = oldDom;\n\t\t\t\t} else {\n\t\t\t\t\tfor (let i = excessDomChildren.length; i--; ) {\n\t\t\t\t\t\tremoveNode(excessDomChildren[i]);\n\t\t\t\t\t}\n\t\t\t\t\tmarkAsForce(newVNode);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\tif (!e.then) markAsForce(newVNode);\n\t\t\t}\n\t\t\toptions._catchError(e, newVNode, oldVNode);\n\t\t}\n\t} else if (\n\t\texcessDomChildren == NULL &&\n\t\tnewVNode._original == oldVNode._original\n\t) {\n\t\tnewVNode._children = oldVNode._children;\n\t\tnewVNode._dom = oldVNode._dom;\n\t} else {\n\t\toldDom = newVNode._dom = diffElementNodes(\n\t\t\toldVNode._dom,\n\t\t\tnewVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tnamespace,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\tisHydrating,\n\t\t\trefQueue\n\t\t);\n\t}\n\n\tif ((tmp = options.diffed)) tmp(newVNode);\n\n\treturn newVNode._flags & MODE_SUSPENDED ? undefined : oldDom;\n}\n\nfunction markAsForce(vnode) {\n\tif (vnode && vnode._component) vnode._component._force = true;\n\tif (vnode && vnode._children) vnode._children.forEach(markAsForce);\n}\n\n/**\n * @param {Array<Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {VNode} root\n */\nexport function commitRoot(commitQueue, root, refQueue) {\n\tfor (let i = 0; i < refQueue.length; i++) {\n\t\tapplyRef(refQueue[i], refQueue[++i], refQueue[++i]);\n\t}\n\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-expect-error Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-expect-error See above comment on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\nfunction cloneNode(node) {\n\tif (\n\t\ttypeof node != 'object' ||\n\t\tnode == NULL ||\n\t\t(node._depth && node._depth > 0)\n\t) {\n\t\treturn node;\n\t}\n\n\tif (isArray(node)) {\n\t\treturn node.map(cloneNode);\n\t}\n\n\treturn assign({}, node);\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {PreactElement} dom The DOM element representing the virtual nodes\n * being diffed\n * @param {VNode} newVNode The new virtual node\n * @param {VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {string} namespace Current namespace of the DOM node (HTML, SVG, or MathML)\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n * @returns {PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tnamespace,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating,\n\trefQueue\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = /** @type {string} */ (newVNode.type);\n\t/** @type {any} */\n\tlet i;\n\t/** @type {{ __html?: string }} */\n\tlet newHtml;\n\t/** @type {{ __html?: string }} */\n\tlet oldHtml;\n\t/** @type {ComponentChildren} */\n\tlet newChildren;\n\tlet value;\n\tlet inputValue;\n\tlet checked;\n\n\t// Tracks entering and exiting namespaces when descending through the tree.\n\tif (nodeType == 'svg') namespace = SVG_NAMESPACE;\n\telse if (nodeType == 'math') namespace = MATH_NAMESPACE;\n\telse if (!namespace) namespace = XHTML_NAMESPACE;\n\n\tif (excessDomChildren != NULL) {\n\t\tfor (i = 0; i < excessDomChildren.length; i++) {\n\t\t\tvalue = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tvalue &&\n\t\t\t\t'setAttribute' in value == !!nodeType &&\n\t\t\t\t(nodeType ? value.localName == nodeType : value.nodeType == 3)\n\t\t\t) {\n\t\t\t\tdom = value;\n\t\t\t\texcessDomChildren[i] = NULL;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == NULL) {\n\t\tif (nodeType == NULL) {\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tdom = document.createElementNS(\n\t\t\tnamespace,\n\t\t\tnodeType,\n\t\t\tnewProps.is && newProps\n\t\t);\n\n\t\t// we are creating a new node, so we can assume this is a new subtree (in\n\t\t// case we are hydrating), this deopts the hydrate\n\t\tif (isHydrating) {\n\t\t\tif (options._hydrationMismatch)\n\t\t\t\toptions._hydrationMismatch(newVNode, excessDomChildren);\n\t\t\tisHydrating = false;\n\t\t}\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = NULL;\n\t}\n\n\tif (nodeType == NULL) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data != newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\t// If we are in a situation where we are not hydrating but are using\n\t\t// existing DOM (e.g. replaceNode) we should read the existing DOM\n\t\t// attributes to diff them\n\t\tif (!isHydrating && excessDomChildren != NULL) {\n\t\t\toldProps = {};\n\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\tvalue = dom.attributes[i];\n\t\t\t\toldProps[value.name] = value.value;\n\t\t\t}\n\t\t}\n\n\t\tfor (i in oldProps) {\n\t\t\tvalue = oldProps[i];\n\t\t\tif (i == 'children') {\n\t\t\t} else if (i == 'dangerouslySetInnerHTML') {\n\t\t\t\toldHtml = value;\n\t\t\t} else if (!(i in newProps)) {\n\t\t\t\tif (\n\t\t\t\t\t(i == 'value' && 'defaultValue' in newProps) ||\n\t\t\t\t\t(i == 'checked' && 'defaultChecked' in newProps)\n\t\t\t\t) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tsetProperty(dom, i, NULL, value, namespace);\n\t\t\t}\n\t\t}\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tfor (i in newProps) {\n\t\t\tvalue = newProps[i];\n\t\t\tif (i == 'children') {\n\t\t\t\tnewChildren = value;\n\t\t\t} else if (i == 'dangerouslySetInnerHTML') {\n\t\t\t\tnewHtml = value;\n\t\t\t} else if (i == 'value') {\n\t\t\t\tinputValue = value;\n\t\t\t} else if (i == 'checked') {\n\t\t\t\tchecked = value;\n\t\t\t} else if (\n\t\t\t\t(!isHydrating || typeof value == 'function') &&\n\t\t\t\toldProps[i] !== value\n\t\t\t) {\n\t\t\t\tsetProperty(dom, i, value, oldProps[i], namespace);\n\t\t\t}\n\t\t}\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\tif (\n\t\t\t\t!isHydrating &&\n\t\t\t\t(!oldHtml ||\n\t\t\t\t\t(newHtml.__html != oldHtml.__html && newHtml.__html != dom.innerHTML))\n\t\t\t) {\n\t\t\t\tdom.innerHTML = newHtml.__html;\n\t\t\t}\n\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\tif (oldHtml) dom.innerHTML = '';\n\n\t\t\tdiffChildren(\n\t\t\t\t// @ts-expect-error\n\t\t\t\tnewVNode.type == 'template' ? dom.content : dom,\n\t\t\t\tisArray(newChildren) ? newChildren : [newChildren],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tnodeType == 'foreignObject' ? XHTML_NAMESPACE : namespace,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating,\n\t\t\t\trefQueue\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != NULL) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tremoveNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// As above, don't diff props during hydration\n\t\tif (!isHydrating) {\n\t\t\ti = 'value';\n\t\t\tif (nodeType == 'progress' && inputValue == NULL) {\n\t\t\t\tdom.removeAttribute('value');\n\t\t\t} else if (\n\t\t\t\tinputValue != UNDEFINED &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(inputValue !== dom[i] ||\n\t\t\t\t\t(nodeType == 'progress' && !inputValue) ||\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType == 'option' && inputValue != oldProps[i]))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, i, inputValue, oldProps[i], namespace);\n\t\t\t}\n\n\t\t\ti = 'checked';\n\t\t\tif (checked != UNDEFINED && checked != dom[i]) {\n\t\t\t\tsetProperty(dom, i, checked, oldProps[i], namespace);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {Ref<any> & { _unmount?: unknown }} ref\n * @param {any} value\n * @param {VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') {\n\t\t\tlet hasRefUnmount = typeof ref._unmount == 'function';\n\t\t\tif (hasRefUnmount) {\n\t\t\t\t// @ts-ignore TS doesn't like moving narrowing checks into variables\n\t\t\t\tref._unmount();\n\t\t\t}\n\n\t\t\tif (!hasRefUnmount || value != NULL) {\n\t\t\t\t// Store the cleanup function on the function\n\t\t\t\t// instance object itself to avoid shape\n\t\t\t\t// transitioning vnode\n\t\t\t\tref._unmount = ref(value);\n\t\t\t}\n\t\t} else ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {VNode} vnode The virtual node to unmount\n * @param {VNode} parentVNode The parent of the VNode that initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current == vnode._dom) {\n\t\t\tapplyRef(r, NULL, parentVNode);\n\t\t}\n\t}\n\n\tif ((r = vnode._component) != NULL) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = NULL;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(\n\t\t\t\t\tr[i],\n\t\t\t\t\tparentVNode,\n\t\t\t\t\tskipRemove || typeof vnode.type != 'function'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove) {\n\t\tremoveNode(vnode._dom);\n\t}\n\n\tvnode._component = vnode._parent = vnode._dom = UNDEFINED;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n", "import { EMPTY_OBJ, NULL } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\t// https://github.com/preactjs/preact/issues/3794\n\tif (parentDom == document) {\n\t\tparentDom = document.documentElement;\n\t}\n\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode == 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? NULL\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = ((!isHydrating && replaceNode) || parentDom)._children =\n\t\tcreateElement(Fragment, NULL, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [],\n\t\trefQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.namespaceURI,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t\t? NULL\n\t\t\t\t: parentDom.firstChild\n\t\t\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t\t\t: NULL,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t\t? oldVNode._dom\n\t\t\t\t: parentDom.firstChild,\n\t\tisHydrating,\n\t\trefQueue\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode, refQueue);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n", "import { assign, slice } from './util';\nimport { createVNode } from './create-element';\nimport { NULL, UNDEFINED } from './constants';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its\n * children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Any additional arguments will be used\n * as replacement children.\n * @returns {import('./internal').VNode}\n */\nexport function cloneElement(vnode, props, children) {\n\tlet normalizedProps = assign({}, vnode.props),\n\t\tkey,\n\t\tref,\n\t\ti;\n\n\tlet defaultProps;\n\n\tif (vnode.type && vnode.type.defaultProps) {\n\t\tdefaultProps = vnode.type.defaultProps;\n\t}\n\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse if (props[i] === UNDEFINED && defaultProps != UNDEFINED) {\n\t\t\tnormalizedProps[i] = defaultProps[i];\n\t\t} else {\n\t\t\tnormalizedProps[i] = props[i];\n\t\t}\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\treturn createVNode(\n\t\tvnode.type,\n\t\tnormalizedProps,\n\t\tkey || vnode.key,\n\t\tref || vnode.ref,\n\t\tNULL\n\t);\n}\n", "import { NULL } from '../constants';\n\n/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw the error that was caught (except\n * for unmounting when this parameter is the highest parent that was being\n * unmounted)\n * @param {import('../internal').VNode} [oldVNode]\n * @param {import('../internal').ErrorInfo} [errorInfo]\n */\nexport function _catchError(error, vnode, oldVNode, errorInfo) {\n\t/** @type {import('../internal').Component} */\n\tlet component,\n\t\t/** @type {import('../internal').ComponentType} */\n\t\tctor,\n\t\t/** @type {boolean} */\n\t\thandled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != NULL) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != NULL) {\n\t\t\t\t\tcomponent.componentDidCatch(error, errorInfo || {});\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n", "import { options as _options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {import('./internal').Component} */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\n// Cast to use internal Options type\nconst options = /** @type {import('./internal').Options} */ (_options);\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\nlet oldRoot = options._root;\n\n// We take the minimum timeout for requestAnimationFrame to ensure that\n// the callback is invoked after the next frame. 35ms is based on a 30hz\n// refresh rate, which is the minimum rate for a smooth user experience.\nconst RAF_TIMEOUT = 35;\nlet prevRaf;\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._root = (vnode, parentDom) => {\n\tif (vnode && parentDom._children && parentDom._children._mask) {\n\t\tvnode._mask = parentDom._children._mask;\n\t}\n\n\tif (oldRoot) oldRoot(vnode, parentDom);\n};\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\tif (previousComponent === currentComponent) {\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentComponent._renderCallbacks = [];\n\t\t\thooks._list.forEach(hookItem => {\n\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t}\n\t\t\t\thookItem._pendingArgs = hookItem._nextValue = undefined;\n\t\t\t});\n\t\t} else {\n\t\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentIndex = 0;\n\t\t}\n\t}\n\tpreviousComponent = currentComponent;\n};\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tif (c.__hooks._pendingEffects.length) afterPaint(afterPaintEffects.push(c));\n\t\tc.__hooks._list.forEach(hookItem => {\n\t\t\tif (hookItem._pendingArgs) {\n\t\t\t\thookItem._args = hookItem._pendingArgs;\n\t\t\t}\n\t\t\thookItem._pendingArgs = undefined;\n\t\t});\n\t}\n\tpreviousComponent = currentComponent = null;\n};\n\n// TODO: Improve typing of commitQueue parameter\n/** @type {(vnode: import('./internal').VNode, commitQueue: any) => void} */\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tc.__hooks = undefined;\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({});\n\t}\n\n\treturn hooks._list[index];\n}\n\n/**\n * @template {unknown} S\n * @param {import('./index').Dispatch<import('./index').StateUpdater<S>>} [initialState]\n * @returns {[S, (state: S) => void]}\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @template {unknown} S\n * @template {unknown} A\n * @param {import('./index').Reducer<S, A>} reducer\n * @param {import('./index').Dispatch<import('./index').StateUpdater<S>>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ S, (state: S) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst currentValue = hookState._nextValue\n\t\t\t\t\t? hookState._nextValue[0]\n\t\t\t\t\t: hookState._value[0];\n\t\t\t\tconst nextValue = hookState._reducer(currentValue, action);\n\n\t\t\t\tif (currentValue !== nextValue) {\n\t\t\t\t\thookState._nextValue = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\n\t\tif (!currentComponent._hasScuFromHooks) {\n\t\t\tcurrentComponent._hasScuFromHooks = true;\n\t\t\tlet prevScu = currentComponent.shouldComponentUpdate;\n\t\t\tconst prevCWU = currentComponent.componentWillUpdate;\n\n\t\t\t// If we're dealing with a forced update `shouldComponentUpdate` will\n\t\t\t// not be called. But we use that to update the hook values, so we\n\t\t\t// need to call it.\n\t\t\tcurrentComponent.componentWillUpdate = function (p, s, c) {\n\t\t\t\tif (this._force) {\n\t\t\t\t\tlet tmp = prevScu;\n\t\t\t\t\t// Clear to avoid other sCU hooks from being called\n\t\t\t\t\tprevScu = undefined;\n\t\t\t\t\tupdateHookState(p, s, c);\n\t\t\t\t\tprevScu = tmp;\n\t\t\t\t}\n\n\t\t\t\tif (prevCWU) prevCWU.call(this, p, s, c);\n\t\t\t};\n\n\t\t\t// This SCU has the purpose of bailing out after repeated updates\n\t\t\t// to stateful hooks.\n\t\t\t// we store the next value in _nextValue[0] and keep doing that for all\n\t\t\t// state setters, if we have next states and\n\t\t\t// all next states within a component end up being equal to their original state\n\t\t\t// we are safe to bail out for this specific component.\n\t\t\t/**\n\t\t\t *\n\t\t\t * @type {import('./internal').Component[\"shouldComponentUpdate\"]}\n\t\t\t */\n\t\t\t// @ts-ignore - We don't use TS to downtranspile\n\t\t\t// eslint-disable-next-line no-inner-declarations\n\t\t\tfunction updateHookState(p, s, c) {\n\t\t\t\tif (!hookState._component.__hooks) return true;\n\n\t\t\t\t/** @type {(x: import('./internal').HookState) => x is import('./internal').ReducerHookState} */\n\t\t\t\tconst isStateHook = x => !!x._component;\n\t\t\t\tconst stateHooks =\n\t\t\t\t\thookState._component.__hooks._list.filter(isStateHook);\n\n\t\t\t\tconst allHooksEmpty = stateHooks.every(x => !x._nextValue);\n\t\t\t\t// When we have no updated hooks in the component we invoke the previous SCU or\n\t\t\t\t// traverse the VDOM tree further.\n\t\t\t\tif (allHooksEmpty) {\n\t\t\t\t\treturn prevScu ? prevScu.call(this, p, s, c) : true;\n\t\t\t\t}\n\n\t\t\t\t// We check whether we have components with a nextValue set that\n\t\t\t\t// have values that aren't equal to one another this pushes\n\t\t\t\t// us to update further down the tree\n\t\t\t\tlet shouldUpdate = hookState._component.props !== p;\n\t\t\t\tstateHooks.forEach(hookItem => {\n\t\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\t\tconst currentValue = hookItem._value[0];\n\t\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t\t\thookItem._nextValue = undefined;\n\t\t\t\t\t\tif (currentValue !== hookItem._value[0]) shouldUpdate = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn prevScu\n\t\t\t\t\t? prevScu.call(this, p, s, c) || shouldUpdate\n\t\t\t\t\t: shouldUpdate;\n\t\t\t}\n\n\t\t\tcurrentComponent.shouldComponentUpdate = updateHookState;\n\t\t}\n\t}\n\n\treturn hookState._nextValue || hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {unknown[]} args\n * @returns {void}\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {unknown[]} args\n * @returns {void}\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\n/** @type {(initialValue: unknown) => unknown} */\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {unknown[]} args\n * @returns {void}\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') {\n\t\t\t\tconst result = ref(createHandle());\n\t\t\t\treturn () => {\n\t\t\t\t\tref(null);\n\t\t\t\t\tif (result && typeof result == 'function') result();\n\t\t\t\t};\n\t\t\t} else if (ref) {\n\t\t\t\tref.current = createHandle();\n\t\t\t\treturn () => (ref.current = null);\n\t\t\t}\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @template {unknown} T\n * @param {() => T} factory\n * @param {unknown[]} args\n * @returns {T}\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState<T>} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._value = factory();\n\t\tstate._args = args;\n\t\tstate._factory = factory;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {unknown[]} args\n * @returns {() => void}\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(\n\t\t\tformatter ? formatter(value) : /** @type {any}*/ (value)\n\t\t);\n\t}\n}\n\n/**\n * @param {(error: unknown, errorInfo: import('preact').ErrorInfo) => void} cb\n * @returns {[unknown, () => void]}\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = (err, errorInfo) => {\n\t\t\tif (state._value) state._value(err, errorInfo);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\n/** @type {() => string} */\nexport function useId() {\n\t/** @type {import('./internal').IdHookState} */\n\tconst state = getHookState(currentIndex++, 11);\n\tif (!state._value) {\n\t\t// Grab either the root node or the nearest async boundary node.\n\t\t/** @type {import('./internal').VNode} */\n\t\tlet root = currentComponent._vnode;\n\t\twhile (root !== null && !root._mask && root._parent !== null) {\n\t\t\troot = root._parent;\n\t\t}\n\n\t\tlet mask = root._mask || (root._mask = [0, 0]);\n\t\tstate._value = 'P' + mask[0] + '-' + mask[1]++;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom || !component.__hooks) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n * @returns {void}\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').HookState} hook\n * @returns {void}\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n * @returns {void}\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {unknown[]} oldArgs\n * @param {unknown[]} newArgs\n * @returns {boolean}\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\n/**\n * @template Arg\n * @param {Arg} arg\n * @param {(arg: Arg) => any} f\n * @returns {any}\n */\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n", "/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Check if two objects have a different shape\n * @param {object} a\n * @param {object} b\n * @returns {boolean}\n */\nexport function shallowDiffers(a, b) {\n\tfor (let i in a) if (i !== '__source' && !(i in b)) return true;\n\tfor (let i in b) if (i !== '__source' && a[i] !== b[i]) return true;\n\treturn false;\n}\n\n/**\n * Check if two values are the same value\n * @param {*} x\n * @param {*} y\n * @returns {boolean}\n */\nexport function is(x, y) {\n\treturn (x === y && (x !== 0 || 1 / x === 1 / y)) || (x !== x && y !== y);\n}\n", "import { useState, useLayoutEffect, useEffect } from 'preact/hooks';\nimport { is } from './util';\n\n/**\n * This is taken from https://github.com/facebook/react/blob/main/packages/use-sync-external-store/src/useSyncExternalStoreShimClient.js#L84\n * on a high level this cuts out the warnings, ... and attempts a smaller implementation\n * @typedef {{ _value: any; _getSnapshot: () => any }} Store\n */\nexport function useSyncExternalStore(subscribe, getSnapshot) {\n\tconst value = getSnapshot();\n\n\t/**\n\t * @typedef {{ _instance: Store }} StoreRef\n\t * @type {[StoreRef, (store: StoreRef) => void]}\n\t */\n\tconst [{ _instance }, forceUpdate] = useState({\n\t\t_instance: { _value: value, _getSnapshot: getSnapshot }\n\t});\n\n\tuseLayoutEffect(() => {\n\t\t_instance._value = value;\n\t\t_instance._getSnapshot = getSnapshot;\n\n\t\tif (didSnapshotChange(_instance)) {\n\t\t\tforceUpdate({ _instance });\n\t\t}\n\t}, [subscribe, value, getSnapshot]);\n\n\tuseEffect(() => {\n\t\tif (didSnapshotChange(_instance)) {\n\t\t\tforceUpdate({ _instance });\n\t\t}\n\n\t\treturn subscribe(() => {\n\t\t\tif (didSnapshotChange(_instance)) {\n\t\t\t\tforceUpdate({ _instance });\n\t\t\t}\n\t\t});\n\t}, [subscribe]);\n\n\treturn value;\n}\n\n/** @type {(inst: Store) => boolean} */\nfunction didSnapshotChange(inst) {\n\tconst latestGetSnapshot = inst._getSnapshot;\n\tconst prevValue = inst._value;\n\ttry {\n\t\tconst nextValue = latestGetSnapshot();\n\t\treturn !is(prevValue, nextValue);\n\t} catch (error) {\n\t\treturn true;\n\t}\n}\n\nexport function startTransition(cb) {\n\tcb();\n}\n\nexport function useDeferredValue(val) {\n\treturn val;\n}\n\nexport function useTransition() {\n\treturn [false, startTransition];\n}\n\n// TODO: in theory this should be done after a VNode is diffed as we want to insert\n// styles/... before it attaches\nexport const useInsertionEffect = useLayoutEffect;\n", "import { Component } from 'preact';\nimport { shallowDiffers } from './util';\n\n/**\n * Component class with a predefined `shouldComponentUpdate` implementation\n */\nexport function PureComponent(p, c) {\n\tthis.props = p;\n\tthis.context = c;\n}\nPureComponent.prototype = new Component();\n// Some third-party libraries check if this property is present\nPureComponent.prototype.isPureReactComponent = true;\nPureComponent.prototype.shouldComponentUpdate = function (props, state) {\n\treturn shallowDiffers(this.props, props) || shallowDiffers(this.state, state);\n};\n", "import { createElement } from 'preact';\nimport { shallowDiffers } from './util';\n\n/**\n * Memoize a component, so that it only updates when the props actually have\n * changed. This was previously known as `React.pure`.\n * @param {import('./internal').FunctionComponent} c functional component\n * @param {(prev: object, next: object) => boolean} [comparer] Custom equality function\n * @returns {import('./internal').FunctionComponent}\n */\nexport function memo(c, comparer) {\n\tfunction shouldUpdate(nextProps) {\n\t\tlet ref = this.props.ref;\n\t\tlet updateRef = ref == nextProps.ref;\n\t\tif (!updateRef && ref) {\n\t\t\tref.call ? ref(null) : (ref.current = null);\n\t\t}\n\n\t\tif (!comparer) {\n\t\t\treturn shallowDiffers(this.props, nextProps);\n\t\t}\n\n\t\treturn !comparer(this.props, nextProps) || !updateRef;\n\t}\n\n\tfunction Memoed(props) {\n\t\tthis.shouldComponentUpdate = shouldUpdate;\n\t\treturn createElement(c, props);\n\t}\n\tMemoed.displayName = 'Memo(' + (c.displayName || c.name) + ')';\n\tMemoed.prototype.isReactComponent = true;\n\tMemoed._forwarded = true;\n\tMemoed.type = c;\n\treturn Memoed;\n}\n", "import { options } from 'preact';\nimport { assign } from './util';\n\nlet oldDiffHook = options._diff;\noptions._diff = vnode => {\n\tif (vnode.type && vnode.type._forwarded && vnode.ref) {\n\t\tvnode.props.ref = vnode.ref;\n\t\tvnode.ref = null;\n\t}\n\tif (oldDiffHook) oldDiffHook(vnode);\n};\n\nexport const REACT_FORWARD_SYMBOL =\n\t(typeof Symbol != 'undefined' &&\n\t\tSymbol.for &&\n\t\tSymbol.for('react.forward_ref')) ||\n\t0xf47;\n\n/**\n * Pass ref down to a child. This is mainly used in libraries with HOCs that\n * wrap components. Using `forwardRef` there is an easy way to get a reference\n * of the wrapped component instead of one of the wrapper itself.\n * @param {import('./index').ForwardFn} fn\n * @returns {import('./internal').FunctionComponent}\n */\nexport function forwardRef(fn) {\n\tfunction Forwarded(props) {\n\t\tlet clone = assign({}, props);\n\t\tdelete clone.ref;\n\t\treturn fn(clone, props.ref || null);\n\t}\n\n\t// mobx-react checks for this being present\n\tForwarded.$$typeof = REACT_FORWARD_SYMBOL;\n\t// mobx-react heavily relies on implementation details.\n\t// It expects an object here with a `render` property,\n\t// and prototype.render will fail. Without this\n\t// mobx-react throws.\n\tForwarded.render = fn;\n\n\tForwarded.prototype.isReactComponent = Forwarded._forwarded = true;\n\tForwarded.displayName = 'ForwardRef(' + (fn.displayName || fn.name) + ')';\n\treturn Forwarded;\n}\n", "import { toChildArray } from 'preact';\n\nconst mapFn = (children, fn) => {\n\tif (children == null) return null;\n\treturn toChildArray(toChildArray(children).map(fn));\n};\n\n// This API is completely unnecessary for Preact, so it's basically passthrough.\nexport const Children = {\n\tmap: mapFn,\n\tforEach: mapFn,\n\tcount(children) {\n\t\treturn children ? toChildArray(children).length : 0;\n\t},\n\tonly(children) {\n\t\tconst normalized = toChildArray(children);\n\t\tif (normalized.length !== 1) throw 'Children.only';\n\t\treturn normalized[0];\n\t},\n\ttoArray: toChildArray\n};\n", "import { Component, createElement, options, Fragment } from 'preact';\nimport { MODE_HYDRATE } from '../../src/constants';\nimport { assign } from './util';\n\nconst oldCatchError = options._catchError;\noptions._catchError = function (error, newVNode, oldVNode, errorInfo) {\n\tif (error.then) {\n\t\t/** @type {import('./internal').Component} */\n\t\tlet component;\n\t\tlet vnode = newVNode;\n\n\t\tfor (; (vnode = vnode._parent); ) {\n\t\t\tif ((component = vnode._component) && component._childDidSuspend) {\n\t\t\t\tif (newVNode._dom == null) {\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t}\n\t\t\t\t// Don't call oldCatchError if we found a Suspense\n\t\t\t\treturn component._childDidSuspend(error, newVNode);\n\t\t\t}\n\t\t}\n\t}\n\toldCatchError(error, newVNode, oldVNode, errorInfo);\n};\n\nconst oldUnmount = options.unmount;\noptions.unmount = function (vnode) {\n\t/** @type {import('./internal').Component} */\n\tconst component = vnode._component;\n\tif (component && component._onResolve) {\n\t\tcomponent._onResolve();\n\t}\n\n\t// if the component is still hydrating\n\t// most likely it is because the component is suspended\n\t// we set the vnode.type as `null` so that it is not a typeof function\n\t// so the unmount will remove the vnode._dom\n\tif (component && vnode._flags & MODE_HYDRATE) {\n\t\tvnode.type = null;\n\t}\n\n\tif (oldUnmount) oldUnmount(vnode);\n};\n\nfunction detachedClone(vnode, detachedParent, parentDom) {\n\tif (vnode) {\n\t\tif (vnode._component && vnode._component.__hooks) {\n\t\t\tvnode._component.__hooks._list.forEach(effect => {\n\t\t\t\tif (typeof effect._cleanup == 'function') effect._cleanup();\n\t\t\t});\n\n\t\t\tvnode._component.__hooks = null;\n\t\t}\n\n\t\tvnode = assign({}, vnode);\n\t\tif (vnode._component != null) {\n\t\t\tif (vnode._component._parentDom === parentDom) {\n\t\t\t\tvnode._component._parentDom = detachedParent;\n\t\t\t}\n\n\t\t\tvnode._component._force = true;\n\n\t\t\tvnode._component = null;\n\t\t}\n\n\t\tvnode._children =\n\t\t\tvnode._children &&\n\t\t\tvnode._children.map(child =>\n\t\t\t\tdetachedClone(child, detachedParent, parentDom)\n\t\t\t);\n\t}\n\n\treturn vnode;\n}\n\nfunction removeOriginal(vnode, detachedParent, originalParent) {\n\tif (vnode && originalParent) {\n\t\tvnode._original = null;\n\t\tvnode._children =\n\t\t\tvnode._children &&\n\t\t\tvnode._children.map(child =>\n\t\t\t\tremoveOriginal(child, detachedParent, originalParent)\n\t\t\t);\n\n\t\tif (vnode._component) {\n\t\t\tif (vnode._component._parentDom === detachedParent) {\n\t\t\t\tif (vnode._dom) {\n\t\t\t\t\toriginalParent.appendChild(vnode._dom);\n\t\t\t\t}\n\t\t\t\tvnode._component._force = true;\n\t\t\t\tvnode._component._parentDom = originalParent;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn vnode;\n}\n\n// having custom inheritance instead of a class here saves a lot of bytes\nexport function Suspense() {\n\t// we do not call super here to golf some bytes...\n\tthis._pendingSuspensionCount = 0;\n\tthis._suspenders = null;\n\tthis._detachOnNextRender = null;\n}\n\n// Things we do here to save some bytes but are not proper JS inheritance:\n// - call `new Component()` as the prototype\n// - do not set `Suspense.prototype.constructor` to `Suspense`\nSuspense.prototype = new Component();\n\n/**\n * @this {import('./internal').SuspenseComponent}\n * @param {Promise} promise The thrown promise\n * @param {import('./internal').VNode<any, any>} suspendingVNode The suspending component\n */\nSuspense.prototype._childDidSuspend = function (promise, suspendingVNode) {\n\tconst suspendingComponent = suspendingVNode._component;\n\n\t/** @type {import('./internal').SuspenseComponent} */\n\tconst c = this;\n\n\tif (c._suspenders == null) {\n\t\tc._suspenders = [];\n\t}\n\tc._suspenders.push(suspendingComponent);\n\n\tconst resolve = suspended(c._vnode);\n\n\tlet resolved = false;\n\tconst onResolved = () => {\n\t\tif (resolved) return;\n\n\t\tresolved = true;\n\t\tsuspendingComponent._onResolve = null;\n\n\t\tif (resolve) {\n\t\t\tresolve(onSuspensionComplete);\n\t\t} else {\n\t\t\tonSuspensionComplete();\n\t\t}\n\t};\n\n\tsuspendingComponent._onResolve = onResolved;\n\n\tconst onSuspensionComplete = () => {\n\t\tif (!--c._pendingSuspensionCount) {\n\t\t\t// If the suspension was during hydration we don't need to restore the\n\t\t\t// suspended children into the _children array\n\t\t\tif (c.state._suspended) {\n\t\t\t\tconst suspendedVNode = c.state._suspended;\n\t\t\t\tc._vnode._children[0] = removeOriginal(\n\t\t\t\t\tsuspendedVNode,\n\t\t\t\t\tsuspendedVNode._component._parentDom,\n\t\t\t\t\tsuspendedVNode._component._originalParentDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tc.setState({ _suspended: (c._detachOnNextRender = null) });\n\n\t\t\tlet suspended;\n\t\t\twhile ((suspended = c._suspenders.pop())) {\n\t\t\t\tsuspended.forceUpdate();\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * We do not set `suspended: true` during hydration because we want the actual markup\n\t * to remain on screen and hydrate it when the suspense actually gets resolved.\n\t * While in non-hydration cases the usual fallback -> component flow would occour.\n\t */\n\tif (\n\t\t!c._pendingSuspensionCount++ &&\n\t\t!(suspendingVNode._flags & MODE_HYDRATE)\n\t) {\n\t\tc.setState({ _suspended: (c._detachOnNextRender = c._vnode._children[0]) });\n\t}\n\tpromise.then(onResolved, onResolved);\n};\n\nSuspense.prototype.componentWillUnmount = function () {\n\tthis._suspenders = [];\n};\n\n/**\n * @this {import('./internal').SuspenseComponent}\n * @param {import('./internal').SuspenseComponent[\"props\"]} props\n * @param {import('./internal').SuspenseState} state\n */\nSuspense.prototype.render = function (props, state) {\n\tif (this._detachOnNextRender) {\n\t\t// When the Suspense's _vnode was created by a call to createVNode\n\t\t// (i.e. due to a setState further up in the tree)\n\t\t// it's _children prop is null, in this case we \"forget\" about the parked vnodes to detach\n\t\tif (this._vnode._children) {\n\t\t\tconst detachedParent = document.createElement('div');\n\t\t\tconst detachedComponent = this._vnode._children[0]._component;\n\t\t\tthis._vnode._children[0] = detachedClone(\n\t\t\t\tthis._detachOnNextRender,\n\t\t\t\tdetachedParent,\n\t\t\t\t(detachedComponent._originalParentDom = detachedComponent._parentDom)\n\t\t\t);\n\t\t}\n\n\t\tthis._detachOnNextRender = null;\n\t}\n\n\t// Wrap fallback tree in a VNode that prevents itself from being marked as aborting mid-hydration:\n\t/** @type {import('./internal').VNode} */\n\tconst fallback =\n\t\tstate._suspended && createElement(Fragment, null, props.fallback);\n\tif (fallback) fallback._flags &= ~MODE_HYDRATE;\n\n\treturn [\n\t\tcreateElement(Fragment, null, state._suspended ? null : props.children),\n\t\tfallback\n\t];\n};\n\n/**\n * Checks and calls the parent component's _suspended method, passing in the\n * suspended vnode. This is a way for a parent (e.g. SuspenseList) to get notified\n * that one of its children/descendants suspended.\n *\n * The parent MAY return a callback. The callback will get called when the\n * suspension resolves, notifying the parent of the fact.\n * Moreover, the callback gets function `unsuspend` as a parameter. The resolved\n * child descendant will not actually get unsuspended until `unsuspend` gets called.\n * This is a way for the parent to delay unsuspending.\n *\n * If the parent does not return a callback then the resolved vnode\n * gets unsuspended immediately when it resolves.\n *\n * @param {import('./internal').VNode} vnode\n * @returns {((unsuspend: () => void) => void)?}\n */\nexport function suspended(vnode) {\n\t/** @type {import('./internal').Component} */\n\tlet component = vnode._parent._component;\n\treturn component && component._suspended && component._suspended(vnode);\n}\n\nexport function lazy(loader) {\n\tlet prom;\n\tlet component;\n\tlet error;\n\n\tfunction Lazy(props) {\n\t\tif (!prom) {\n\t\t\tprom = loader();\n\t\t\tprom.then(\n\t\t\t\texports => {\n\t\t\t\t\tcomponent = exports.default || exports;\n\t\t\t\t},\n\t\t\t\te => {\n\t\t\t\t\terror = e;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\n\t\tif (!component) {\n\t\t\tthrow prom;\n\t\t}\n\n\t\treturn createElement(component, props);\n\t}\n\n\tLazy.displayName = 'Lazy';\n\tLazy._forwarded = true;\n\treturn Lazy;\n}\n", "import { Component, toChildArray } from 'preact';\nimport { suspended } from './suspense.js';\n\n// Indexes to linked list nodes (nodes are stored as arrays to save bytes).\nconst SUSPENDED_COUNT = 0;\nconst RESOLVED_COUNT = 1;\nconst NEXT_NODE = 2;\n\n// Having custom inheritance instead of a class here saves a lot of bytes.\nexport function SuspenseList() {\n\tthis._next = null;\n\tthis._map = null;\n}\n\n// Mark one of child's earlier suspensions as resolved.\n// Some pending callbacks may become callable due to this\n// (e.g. the last suspended descendant gets resolved when\n// revealOrder === 'together'). Process those callbacks as well.\nconst resolve = (list, child, node) => {\n\tif (++node[RESOLVED_COUNT] === node[SUSPENDED_COUNT]) {\n\t\t// The number a child (or any of its descendants) has been suspended\n\t\t// matches the number of times it's been resolved. Therefore we\n\t\t// mark the child as completely resolved by deleting it from ._map.\n\t\t// This is used to figure out when *all* children have been completely\n\t\t// resolved when revealOrder is 'together'.\n\t\tlist._map.delete(child);\n\t}\n\n\t// If revealOrder is falsy then we can do an early exit, as the\n\t// callbacks won't get queued in the node anyway.\n\t// If revealOrder is 'together' then also do an early exit\n\t// if all suspended descendants have not yet been resolved.\n\tif (\n\t\t!list.props.revealOrder ||\n\t\t(list.props.revealOrder[0] === 't' && list._map.size)\n\t) {\n\t\treturn;\n\t}\n\n\t// Walk the currently suspended children in order, calling their\n\t// stored callbacks on the way. Stop if we encounter a child that\n\t// has not been completely resolved yet.\n\tnode = list._next;\n\twhile (node) {\n\t\twhile (node.length > 3) {\n\t\t\tnode.pop()();\n\t\t}\n\t\tif (node[RESOLVED_COUNT] < node[SUSPENDED_COUNT]) {\n\t\t\tbreak;\n\t\t}\n\t\tlist._next = node = node[NEXT_NODE];\n\t}\n};\n\n// Things we do here to save some bytes but are not proper JS inheritance:\n// - call `new Component()` as the prototype\n// - do not set `Suspense.prototype.constructor` to `Suspense`\nSuspenseList.prototype = new Component();\n\nSuspenseList.prototype._suspended = function (child) {\n\tconst list = this;\n\tconst delegated = suspended(list._vnode);\n\n\tlet node = list._map.get(child);\n\tnode[SUSPENDED_COUNT]++;\n\n\treturn unsuspend => {\n\t\tconst wrappedUnsuspend = () => {\n\t\t\tif (!list.props.revealOrder) {\n\t\t\t\t// Special case the undefined (falsy) revealOrder, as there\n\t\t\t\t// is no need to coordinate a specific order or unsuspends.\n\t\t\t\tunsuspend();\n\t\t\t} else {\n\t\t\t\tnode.push(unsuspend);\n\t\t\t\tresolve(list, child, node);\n\t\t\t}\n\t\t};\n\t\tif (delegated) {\n\t\t\tdelegated(wrappedUnsuspend);\n\t\t} else {\n\t\t\twrappedUnsuspend();\n\t\t}\n\t};\n};\n\nSuspenseList.prototype.render = function (props) {\n\tthis._next = null;\n\tthis._map = new Map();\n\n\tconst children = toChildArray(props.children);\n\tif (props.revealOrder && props.revealOrder[0] === 'b') {\n\t\t// If order === 'backwards' (or, well, anything starting with a 'b')\n\t\t// then flip the child list around so that the last child will be\n\t\t// the first in the linked list.\n\t\tchildren.reverse();\n\t}\n\t// Build the linked list. Iterate through the children in reverse order\n\t// so that `_next` points to the first linked list node to be resolved.\n\tfor (let i = children.length; i--; ) {\n\t\t// Create a new linked list node as an array of form:\n\t\t// \t[suspended_count, resolved_count, next_node]\n\t\t// where suspended_count and resolved_count are numeric counters for\n\t\t// keeping track how many times a node has been suspended and resolved.\n\t\t//\n\t\t// Note that suspended_count starts from 1 instead of 0, so we can block\n\t\t// processing callbacks until componentDidMount has been called. In a sense\n\t\t// node is suspended at least until componentDidMount gets called!\n\t\t//\n\t\t// Pending callbacks are added to the end of the node:\n\t\t// \t[suspended_count, resolved_count, next_node, callback_0, callback_1, ...]\n\t\tthis._map.set(children[i], (this._next = [1, 0, this._next]));\n\t}\n\treturn props.children;\n};\n\nSuspenseList.prototype.componentDidUpdate =\n\tSuspenseList.prototype.componentDidMount = function () {\n\t\t// Iterate through all children after mounting for two reasons:\n\t\t// 1. As each node[SUSPENDED_COUNT] starts from 1, this iteration increases\n\t\t//    each node[RELEASED_COUNT] by 1, therefore balancing the counters.\n\t\t//    The nodes can now be completely consumed from the linked list.\n\t\t// 2. Handle nodes that might have gotten resolved between render and\n\t\t//    componentDidMount.\n\t\tthis._map.forEach((node, child) => {\n\t\t\tresolve(this, child, node);\n\t\t});\n\t};\n", "/** Normal hydration that attaches to a DOM tree but does not diff it. */\nexport const MODE_HYDRATE = 1 << 5;\n/** Signifies this VNode suspended on the previous render */\nexport const MODE_SUSPENDED = 1 << 7;\n/** Indicates that this node needs to be inserted while patching children */\nexport const INSERT_VNODE = 1 << 2;\n/** Indicates a VNode has been matched with another VNode in the diff */\nexport const MATCHED = 1 << 1;\n\n/** Reset all mode flags */\nexport const RESET_MODE = ~(MODE_HYDRATE | MODE_SUSPENDED);\n\nexport const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\nexport const XHTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\nexport const MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n\nexport const NULL = null;\nexport const UNDEFINED = undefined;\nexport const EMPTY_OBJ = /** @type {any} */ ({});\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL =\n\t/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n", "import { createElement, render } from 'preact';\n\n/**\n * @param {import('../../src/index').RenderableProps<{ context: any }>} props\n */\nfunction ContextProvider(props) {\n\tthis.getChildContext = () => props.context;\n\treturn props.children;\n}\n\n/**\n * Portal component\n * @this {import('./internal').Component}\n * @param {object | null | undefined} props\n *\n * TODO: use createRoot() instead of fake root\n */\nfunction Portal(props) {\n\tconst _this = this;\n\tlet container = props._container;\n\n\t_this.componentWillUnmount = function () {\n\t\trender(null, _this._temp);\n\t\t_this._temp = null;\n\t\t_this._container = null;\n\t};\n\n\t// When we change container we should clear our old container and\n\t// indicate a new mount.\n\tif (_this._container && _this._container !== container) {\n\t\t_this.componentWillUnmount();\n\t}\n\n\tif (!_this._temp) {\n\t\t// Ensure the element has a mask for useId invocations\n\t\tlet root = _this._vnode;\n\t\twhile (root !== null && !root._mask && root._parent !== null) {\n\t\t\troot = root._parent;\n\t\t}\n\n\t\t_this._container = container;\n\n\t\t// Create a fake DOM parent node that manages a subset of `container`'s children:\n\t\t_this._temp = {\n\t\t\tnodeType: 1,\n\t\t\tparentNode: container,\n\t\t\tchildNodes: [],\n\t\t\t_children: { _mask: root._mask },\n\t\t\tcontains: () => true,\n\t\t\tinsertBefore(child, before) {\n\t\t\t\tthis.childNodes.push(child);\n\t\t\t\t_this._container.insertBefore(child, before);\n\t\t\t},\n\t\t\tremoveChild(child) {\n\t\t\t\tthis.childNodes.splice(this.childNodes.indexOf(child) >>> 1, 1);\n\t\t\t\t_this._container.removeChild(child);\n\t\t\t}\n\t\t};\n\t}\n\n\t// Render our wrapping element into temp.\n\trender(\n\t\tcreateElement(ContextProvider, { context: _this.context }, props._vnode),\n\t\t_this._temp\n\t);\n}\n\n/**\n * Create a `Portal` to continue rendering the vnode tree at a different DOM node\n * @param {import('./internal').VNode} vnode The vnode to render\n * @param {import('./internal').PreactElement} container The DOM node to continue rendering in to.\n */\nexport function createPortal(vnode, container) {\n\tconst el = createElement(Portal, { _vnode: vnode, _container: container });\n\tel.containerInfo = container;\n\treturn el;\n}\n", "import {\n\trender as preactRender,\n\thydrate as preactHydrate,\n\toptions,\n\ttoChildArray,\n\tComponent\n} from 'preact';\nimport {\n\tuseCallback,\n\tuseContext,\n\tuseDebugValue,\n\tuseEffect,\n\tuseId,\n\tuseImperativeHandle,\n\tuseLayoutEffect,\n\tuseMemo,\n\tuseReducer,\n\tuseRef,\n\tuseState\n} from 'preact/hooks';\nimport {\n\tuseDeferredValue,\n\tuseInsertionEffect,\n\tuseSyncExternalStore,\n\tuseTransition\n} from './index';\n\nexport const REACT_ELEMENT_TYPE =\n\t(typeof Symbol != 'undefined' && Symbol.for && Symbol.for('react.element')) ||\n\t0xeac7;\n\nconst CAMEL_PROPS =\n\t/^(?:accent|alignment|arabic|baseline|cap|clip(?!PathU)|color|dominant|fill|flood|font|glyph(?!R)|horiz|image(!S)|letter|lighting|marker(?!H|W|U)|overline|paint|pointer|shape|stop|strikethrough|stroke|text(?!L)|transform|underline|unicode|units|v|vector|vert|word|writing|x(?!C))[A-Z]/;\nconst ON_ANI = /^on(Ani|Tra|Tou|BeforeInp|Compo)/;\nconst CAMEL_REPLACE = /[A-Z0-9]/g;\nconst IS_DOM = typeof document !== 'undefined';\n\n// Input types for which onchange should not be converted to oninput.\n// type=\"file|checkbox|radio\", plus \"range\" in IE11.\n// (IE11 doesn't support Symbol, which we use here to turn `rad` into `ra` which matches \"range\")\nconst onChangeInputType = type =>\n\t(typeof Symbol != 'undefined' && typeof Symbol() == 'symbol'\n\t\t? /fil|che|rad/\n\t\t: /fil|che|ra/\n\t).test(type);\n\n// Some libraries like `react-virtualized` explicitly check for this.\nComponent.prototype.isReactComponent = {};\n\n// `UNSAFE_*` lifecycle hooks\n// Preact only ever invokes the unprefixed methods.\n// Here we provide a base \"fallback\" implementation that calls any defined UNSAFE_ prefixed method.\n// - If a component defines its own `componentDidMount()` (including via defineProperty), use that.\n// - If a component defines `UNSAFE_componentDidMount()`, `componentDidMount` is the alias getter/setter.\n// - If anything assigns to an `UNSAFE_*` property, the assignment is forwarded to the unprefixed property.\n// See https://github.com/preactjs/preact/issues/1941\n[\n\t'componentWillMount',\n\t'componentWillReceiveProps',\n\t'componentWillUpdate'\n].forEach(key => {\n\tObject.defineProperty(Component.prototype, key, {\n\t\tconfigurable: true,\n\t\tget() {\n\t\t\treturn this['UNSAFE_' + key];\n\t\t},\n\t\tset(v) {\n\t\t\tObject.defineProperty(this, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\twritable: true,\n\t\t\t\tvalue: v\n\t\t\t});\n\t\t}\n\t});\n});\n\n/**\n * Proxy render() since React returns a Component reference.\n * @param {import('./internal').VNode} vnode VNode tree to render\n * @param {import('./internal').PreactElement} parent DOM node to render vnode tree into\n * @param {() => void} [callback] Optional callback that will be called after rendering\n * @returns {import('./internal').Component | null} The root component reference or null\n */\nexport function render(vnode, parent, callback) {\n\t// React destroys any existing DOM nodes, see #1727\n\t// ...but only on the first render, see #1828\n\tif (parent._children == null) {\n\t\tparent.textContent = '';\n\t}\n\n\tpreactRender(vnode, parent);\n\tif (typeof callback == 'function') callback();\n\n\treturn vnode ? vnode._component : null;\n}\n\nexport function hydrate(vnode, parent, callback) {\n\tpreactHydrate(vnode, parent);\n\tif (typeof callback == 'function') callback();\n\n\treturn vnode ? vnode._component : null;\n}\n\nlet oldEventHook = options.event;\noptions.event = e => {\n\tif (oldEventHook) e = oldEventHook(e);\n\n\te.persist = empty;\n\te.isPropagationStopped = isPropagationStopped;\n\te.isDefaultPrevented = isDefaultPrevented;\n\treturn (e.nativeEvent = e);\n};\n\nfunction empty() {}\n\nfunction isPropagationStopped() {\n\treturn this.cancelBubble;\n}\n\nfunction isDefaultPrevented() {\n\treturn this.defaultPrevented;\n}\n\nconst classNameDescriptorNonEnumberable = {\n\tenumerable: false,\n\tconfigurable: true,\n\tget() {\n\t\treturn this.class;\n\t}\n};\n\nfunction handleDomVNode(vnode) {\n\tlet props = vnode.props,\n\t\ttype = vnode.type,\n\t\tnormalizedProps = {};\n\n\tlet isNonDashedType = type.indexOf('-') === -1;\n\tfor (let i in props) {\n\t\tlet value = props[i];\n\n\t\tif (\n\t\t\t(i === 'value' && 'defaultValue' in props && value == null) ||\n\t\t\t// Emulate React's behavior of not rendering the contents of noscript tags on the client.\n\t\t\t(IS_DOM && i === 'children' && type === 'noscript') ||\n\t\t\ti === 'class' ||\n\t\t\ti === 'className'\n\t\t) {\n\t\t\t// Skip applying value if it is null/undefined and we already set\n\t\t\t// a default value\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet lowerCased = i.toLowerCase();\n\t\tif (i === 'defaultValue' && 'value' in props && props.value == null) {\n\t\t\t// `defaultValue` is treated as a fallback `value` when a value prop is present but null/undefined.\n\t\t\t// `defaultValue` for Elements with no value prop is the same as the DOM defaultValue property.\n\t\t\ti = 'value';\n\t\t} else if (i === 'download' && value === true) {\n\t\t\t// Calling `setAttribute` with a truthy value will lead to it being\n\t\t\t// passed as a stringified value, e.g. `download=\"true\"`. React\n\t\t\t// converts it to an empty string instead, otherwise the attribute\n\t\t\t// value will be used as the file name and the file will be called\n\t\t\t// \"true\" upon downloading it.\n\t\t\tvalue = '';\n\t\t} else if (lowerCased === 'translate' && value === 'no') {\n\t\t\tvalue = false;\n\t\t} else if (lowerCased[0] === 'o' && lowerCased[1] === 'n') {\n\t\t\tif (lowerCased === 'ondoubleclick') {\n\t\t\t\ti = 'ondblclick';\n\t\t\t} else if (\n\t\t\t\tlowerCased === 'onchange' &&\n\t\t\t\t(type === 'input' || type === 'textarea') &&\n\t\t\t\t!onChangeInputType(props.type)\n\t\t\t) {\n\t\t\t\tlowerCased = i = 'oninput';\n\t\t\t} else if (lowerCased === 'onfocus') {\n\t\t\t\ti = 'onfocusin';\n\t\t\t} else if (lowerCased === 'onblur') {\n\t\t\t\ti = 'onfocusout';\n\t\t\t} else if (ON_ANI.test(i)) {\n\t\t\t\ti = lowerCased;\n\t\t\t}\n\t\t} else if (isNonDashedType && CAMEL_PROPS.test(i)) {\n\t\t\ti = i.replace(CAMEL_REPLACE, '-$&').toLowerCase();\n\t\t} else if (value === null) {\n\t\t\tvalue = undefined;\n\t\t}\n\n\t\t// Add support for onInput and onChange, see #3561\n\t\t// if we have an oninput prop already change it to oninputCapture\n\t\tif (lowerCased === 'oninput') {\n\t\t\ti = lowerCased;\n\t\t\tif (normalizedProps[i]) {\n\t\t\t\ti = 'oninputCapture';\n\t\t\t}\n\t\t}\n\n\t\tnormalizedProps[i] = value;\n\t}\n\n\t// Add support for array select values: <select multiple value={[]} />\n\tif (\n\t\ttype == 'select' &&\n\t\tnormalizedProps.multiple &&\n\t\tArray.isArray(normalizedProps.value)\n\t) {\n\t\t// forEach() always returns undefined, which we abuse here to unset the value prop.\n\t\tnormalizedProps.value = toChildArray(props.children).forEach(child => {\n\t\t\tchild.props.selected =\n\t\t\t\tnormalizedProps.value.indexOf(child.props.value) != -1;\n\t\t});\n\t}\n\n\t// Adding support for defaultValue in select tag\n\tif (type == 'select' && normalizedProps.defaultValue != null) {\n\t\tnormalizedProps.value = toChildArray(props.children).forEach(child => {\n\t\t\tif (normalizedProps.multiple) {\n\t\t\t\tchild.props.selected =\n\t\t\t\t\tnormalizedProps.defaultValue.indexOf(child.props.value) != -1;\n\t\t\t} else {\n\t\t\t\tchild.props.selected =\n\t\t\t\t\tnormalizedProps.defaultValue == child.props.value;\n\t\t\t}\n\t\t});\n\t}\n\n\tif (props.class && !props.className) {\n\t\tnormalizedProps.class = props.class;\n\t\tObject.defineProperty(\n\t\t\tnormalizedProps,\n\t\t\t'className',\n\t\t\tclassNameDescriptorNonEnumberable\n\t\t);\n\t} else if (props.className && !props.class) {\n\t\tnormalizedProps.class = normalizedProps.className = props.className;\n\t} else if (props.class && props.className) {\n\t\tnormalizedProps.class = normalizedProps.className = props.className;\n\t}\n\n\tvnode.props = normalizedProps;\n}\n\nlet oldVNodeHook = options.vnode;\noptions.vnode = vnode => {\n\t// only normalize props on Element nodes\n\tif (typeof vnode.type === 'string') {\n\t\thandleDomVNode(vnode);\n\t}\n\n\tvnode.$$typeof = REACT_ELEMENT_TYPE;\n\n\tif (oldVNodeHook) oldVNodeHook(vnode);\n};\n\n// Only needed for react-relay\nlet currentComponent;\nconst oldBeforeRender = options._render;\noptions._render = function (vnode) {\n\tif (oldBeforeRender) {\n\t\toldBeforeRender(vnode);\n\t}\n\tcurrentComponent = vnode._component;\n};\n\nconst oldDiffed = options.diffed;\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions.diffed = function (vnode) {\n\tif (oldDiffed) {\n\t\toldDiffed(vnode);\n\t}\n\n\tconst props = vnode.props;\n\tconst dom = vnode._dom;\n\n\tif (\n\t\tdom != null &&\n\t\tvnode.type === 'textarea' &&\n\t\t'value' in props &&\n\t\tprops.value !== dom.value\n\t) {\n\t\tdom.value = props.value == null ? '' : props.value;\n\t}\n\n\tcurrentComponent = null;\n};\n\n// This is a very very private internal function for React it\n// is used to sort-of do runtime dependency injection.\nexport const __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = {\n\tReactCurrentDispatcher: {\n\t\tcurrent: {\n\t\t\treadContext(context) {\n\t\t\t\treturn currentComponent._globalContext[context._id].props.value;\n\t\t\t},\n\t\t\tuseCallback,\n\t\t\tuseContext,\n\t\t\tuseDebugValue,\n\t\t\tuseDeferredValue,\n\t\t\tuseEffect,\n\t\t\tuseId,\n\t\t\tuseImperativeHandle,\n\t\t\tuseInsertionEffect,\n\t\t\tuseLayoutEffect,\n\t\t\tuseMemo,\n\t\t\t// useMutableSource, // experimental-only and replaced by uSES, likely not worth supporting\n\t\t\tuseReducer,\n\t\t\tuseRef,\n\t\t\tuseState,\n\t\t\tuseSyncExternalStore,\n\t\t\tuseTransition\n\t\t}\n\t}\n};\n", "import {\n\tcreateElement,\n\trender as preactRender,\n\tcloneElement as preactCloneElement,\n\tcreateRef,\n\tComponent,\n\tcreateContext,\n\tFragment\n} from 'preact';\nimport {\n\tuseState,\n\tuseId,\n\tuseReducer,\n\tuseEffect,\n\tuseLayoutEffect,\n\tuseRef,\n\tuseImperativeHandle,\n\tuseMemo,\n\tuseCallback,\n\tuseContext,\n\tuseDebugValue\n} from 'preact/hooks';\nimport {\n\tuseInsertionEffect,\n\tstartTransition,\n\tuseDeferredValue,\n\tuseSyncExternalStore,\n\tuseTransition\n} from './hooks';\nimport { PureComponent } from './PureComponent';\nimport { memo } from './memo';\nimport { forwardRef } from './forwardRef';\nimport { Children } from './Children';\nimport { Suspense, lazy } from './suspense';\nimport { SuspenseList } from './suspense-list';\nimport { createPortal } from './portals';\nimport {\n\thydrate,\n\trender,\n\tREACT_ELEMENT_TYPE,\n\t__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED\n} from './render';\n\nconst version = '18.3.1'; // trick libraries to think we are react\n\n/**\n * Legacy version of createElement.\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component constructor\n */\nfunction createFactory(type) {\n\treturn createElement.bind(null, type);\n}\n\n/**\n * Check if the passed element is a valid (p)react node.\n * @param {*} element The element to check\n * @returns {boolean}\n */\nfunction isValidElement(element) {\n\treturn !!element && element.$$typeof === REACT_ELEMENT_TYPE;\n}\n\n/**\n * Check if the passed element is a Fragment node.\n * @param {*} element The element to check\n * @returns {boolean}\n */\nfunction isFragment(element) {\n\treturn isValidElement(element) && element.type === Fragment;\n}\n\n/**\n * Check if the passed element is a Memo node.\n * @param {*} element The element to check\n * @returns {boolean}\n */\nfunction isMemo(element) {\n\treturn (\n\t\t!!element &&\n\t\t!!element.displayName &&\n\t\t(typeof element.displayName === 'string' ||\n\t\t\telement.displayName instanceof String) &&\n\t\telement.displayName.startsWith('Memo(')\n\t);\n}\n\n/**\n * Wrap `cloneElement` to abort if the passed element is not a valid element and apply\n * all vnode normalizations.\n * @param {import('./internal').VNode} element The vnode to clone\n * @param {object} props Props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Optional component children\n */\nfunction cloneElement(element) {\n\tif (!isValidElement(element)) return element;\n\treturn preactCloneElement.apply(null, arguments);\n}\n\n/**\n * Remove a component tree from the DOM, including state and event handlers.\n * @param {import('./internal').PreactElement} container\n * @returns {boolean}\n */\nfunction unmountComponentAtNode(container) {\n\tif (container._children) {\n\t\tpreactRender(null, container);\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n/**\n * Get the matching DOM node for a component\n * @param {import('./internal').Component} component\n * @returns {import('./internal').PreactElement | null}\n */\nfunction findDOMNode(component) {\n\treturn (\n\t\t(component &&\n\t\t\t(component.base || (component.nodeType === 1 && component))) ||\n\t\tnull\n\t);\n}\n\n/**\n * Deprecated way to control batched rendering inside the reconciler, but we\n * already schedule in batches inside our rendering code\n * @template Arg\n * @param {(arg: Arg) => void} callback function that triggers the updated\n * @param {Arg} [arg] Optional argument that can be passed to the callback\n */\n// eslint-disable-next-line camelcase\nconst unstable_batchedUpdates = (callback, arg) => callback(arg);\n\n/**\n * In React, `flushSync` flushes the entire tree and forces a rerender. It's\n * implmented here as a no-op.\n * @template Arg\n * @template Result\n * @param {(arg: Arg) => Result} callback function that runs before the flush\n * @param {Arg} [arg] Optional argument that can be passed to the callback\n * @returns\n */\nconst flushSync = (callback, arg) => callback(arg);\n\n/**\n * Strict Mode is not implemented in Preact, so we provide a stand-in for it\n * that just renders its children without imposing any restrictions.\n */\nconst StrictMode = Fragment;\n\n// compat to react-is\nexport const isElement = isValidElement;\n\nexport * from 'preact/hooks';\nexport {\n\tversion,\n\tChildren,\n\trender,\n\thydrate,\n\tunmountComponentAtNode,\n\tcreatePortal,\n\tcreateElement,\n\tcreateContext,\n\tcreateFactory,\n\tcloneElement,\n\tcreateRef,\n\tFragment,\n\tisValidElement,\n\tisFragment,\n\tisMemo,\n\tfindDOMNode,\n\tComponent,\n\tPureComponent,\n\tmemo,\n\tforwardRef,\n\tflushSync,\n\tuseInsertionEffect,\n\tstartTransition,\n\tuseDeferredValue,\n\tuseSyncExternalStore,\n\tuseTransition,\n\t// eslint-disable-next-line camelcase\n\tunstable_batchedUpdates,\n\tStrictMode,\n\tSuspense,\n\tSuspenseList,\n\tlazy,\n\t__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED\n};\n\n// React copies the named exports to the default one.\nexport default {\n\tuseState,\n\tuseId,\n\tuseReducer,\n\tuseEffect,\n\tuseLayoutEffect,\n\tuseInsertionEffect,\n\tuseTransition,\n\tuseDeferredValue,\n\tuseSyncExternalStore,\n\tstartTransition,\n\tuseRef,\n\tuseImperativeHandle,\n\tuseMemo,\n\tuseCallback,\n\tuseContext,\n\tuseDebugValue,\n\tversion,\n\tChildren,\n\trender,\n\thydrate,\n\tunmountComponentAtNode,\n\tcreatePortal,\n\tcreateElement,\n\tcreateContext,\n\tcreateFactory,\n\tcloneElement,\n\tcreateRef,\n\tFragment,\n\tisValidElement,\n\tisElement,\n\tisFragment,\n\tisMemo,\n\tfindDOMNode,\n\tComponent,\n\tPureComponent,\n\tmemo,\n\tforwardRef,\n\tflushSync,\n\tunstable_batchedUpdates,\n\tStrictMode,\n\tSuspense,\n\tSuspenseList,\n\tlazy,\n\t__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED\n};\n", "const ENCODED_ENTITIES = /[\"&<]/;\n\n/** @param {string} str */\nexport function encodeEntities(str) {\n\t// Skip all work for strings with no entities needing encoding:\n\tif (str.length === 0 || ENCODED_ENTITIES.test(str) === false) return str;\n\n\tlet last = 0,\n\t\ti = 0,\n\t\tout = '',\n\t\tch = '';\n\n\t// Seek forward in str until the next entity char:\n\tfor (; i < str.length; i++) {\n\t\tswitch (str.charCodeAt(i)) {\n\t\t\tcase 34:\n\t\t\t\tch = '&quot;';\n\t\t\t\tbreak;\n\t\t\tcase 38:\n\t\t\t\tch = '&amp;';\n\t\t\t\tbreak;\n\t\t\tcase 60:\n\t\t\t\tch = '&lt;';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\t\t// Append skipped/buffered characters and the encoded entity:\n\t\tif (i !== last) out += str.slice(last, i);\n\t\tout += ch;\n\t\t// Start the next seek/buffer after the entity's offset:\n\t\tlast = i + 1;\n\t}\n\tif (i !== last) out += str.slice(last, i);\n\treturn out;\n}\n", "/** Normal hydration that attaches to a DOM tree but does not diff it. */\nexport const MODE_HYDRATE = 1 << 5;\n/** Signifies this VNode suspended on the previous render */\nexport const MODE_SUSPENDED = 1 << 7;\n/** Indicates that this node needs to be inserted while patching children */\nexport const INSERT_VNODE = 1 << 2;\n/** Indicates a VNode has been matched with another VNode in the diff */\nexport const MATCHED = 1 << 1;\n\n/** Reset all mode flags */\nexport const RESET_MODE = ~(MODE_HYDRATE | MODE_SUSPENDED);\n\nexport const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\nexport const XHTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\nexport const MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n\nexport const NULL = null;\nexport const UNDEFINED = undefined;\nexport const EMPTY_OBJ = /** @type {any} */ ({});\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL =\n\t/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n", "import { options, Fragment } from 'preact';\nimport { encodeEntities } from './utils';\nimport { IS_NON_DIMENSIONAL } from '../../src/constants';\n\nlet vnodeId = 0;\n\nconst isArray = Array.isArray;\n\n/**\n * @fileoverview\n * This file exports various methods that implement Babel's \"automatic\" JSX runtime API:\n * - jsx(type, props, key)\n * - jsxs(type, props, key)\n * - jsxDEV(type, props, key, __source, __self)\n *\n * The implementation of createVNode here is optimized for performance.\n * Benchmarks: https://esbench.com/bench/5f6b54a0b4632100a7dcd2b3\n */\n\n/**\n * JSX.Element factory used by Babel's {runtime:\"automatic\"} JSX transform\n * @param {VNode['type']} type\n * @param {VNode['props']} props\n * @param {VNode['key']} [key]\n * @param {unknown} [isStaticChildren]\n * @param {unknown} [__source]\n * @param {unknown} [__self]\n */\nfunction createVNode(type, props, key, isStaticChildren, __source, __self) {\n\tif (!props) props = {};\n\t// We'll want to preserve `ref` in props to get rid of the need for\n\t// forwardRef components in the future, but that should happen via\n\t// a separate PR.\n\tlet normalizedProps = props,\n\t\tref,\n\t\ti;\n\n\tif ('ref' in normalizedProps) {\n\t\tnormalizedProps = {};\n\t\tfor (i in props) {\n\t\t\tif (i == 'ref') {\n\t\t\t\tref = props[i];\n\t\t\t} else {\n\t\t\t\tnormalizedProps[i] = props[i];\n\t\t\t}\n\t\t}\n\t}\n\n\t/** @type {VNode & { __source: any; __self: any }} */\n\tconst vnode = {\n\t\ttype,\n\t\tprops: normalizedProps,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t_component: null,\n\t\tconstructor: undefined,\n\t\t_original: --vnodeId,\n\t\t_index: -1,\n\t\t_flags: 0,\n\t\t__source,\n\t\t__self\n\t};\n\n\t// If a Component VNode, check for and apply defaultProps.\n\t// Note: `type` is often a String, and can be `undefined` in development.\n\tif (typeof type === 'function' && (ref = type.defaultProps)) {\n\t\tfor (i in ref)\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = ref[i];\n\t\t\t}\n\t}\n\n\tif (options.vnode) options.vnode(vnode);\n\treturn vnode;\n}\n\n/**\n * Create a template vnode. This function is not expected to be\n * used directly, but rather through a precompile JSX transform\n * @param {string[]} templates\n * @param  {Array<string | null | VNode>} exprs\n * @returns {VNode}\n */\nfunction jsxTemplate(templates, ...exprs) {\n\tconst vnode = createVNode(Fragment, { tpl: templates, exprs });\n\t// Bypass render to string top level Fragment optimization\n\tvnode.key = vnode._vnode;\n\treturn vnode;\n}\n\nconst JS_TO_CSS = {};\nconst CSS_REGEX = /[A-Z]/g;\n\n/**\n * Unwrap potential signals.\n * @param {*} value\n * @returns {*}\n */\nfunction normalizeAttrValue(value) {\n\treturn value !== null &&\n\t\ttypeof value === 'object' &&\n\t\ttypeof value.valueOf === 'function'\n\t\t? value.valueOf()\n\t\t: value;\n}\n\n/**\n * Serialize an HTML attribute to a string. This function is not\n * expected to be used directly, but rather through a precompile\n * JSX transform\n * @param {string} name The attribute name\n * @param {*} value The attribute value\n * @returns {string}\n */\nfunction jsxAttr(name, value) {\n\tif (options.attr) {\n\t\tconst result = options.attr(name, value);\n\t\tif (typeof result === 'string') return result;\n\t}\n\n\tvalue = normalizeAttrValue(value);\n\n\tif (name === 'ref' || name === 'key') return '';\n\tif (name === 'style' && typeof value === 'object') {\n\t\tlet str = '';\n\t\tfor (let prop in value) {\n\t\t\tlet val = value[prop];\n\t\t\tif (val != null && val !== '') {\n\t\t\t\tconst name =\n\t\t\t\t\tprop[0] == '-'\n\t\t\t\t\t\t? prop\n\t\t\t\t\t\t: JS_TO_CSS[prop] ||\n\t\t\t\t\t\t\t(JS_TO_CSS[prop] = prop.replace(CSS_REGEX, '-$&').toLowerCase());\n\n\t\t\t\tlet suffix = ';';\n\t\t\t\tif (\n\t\t\t\t\ttypeof val === 'number' &&\n\t\t\t\t\t// Exclude custom-attributes\n\t\t\t\t\t!name.startsWith('--') &&\n\t\t\t\t\t!IS_NON_DIMENSIONAL.test(name)\n\t\t\t\t) {\n\t\t\t\t\tsuffix = 'px;';\n\t\t\t\t}\n\t\t\t\tstr = str + name + ':' + val + suffix;\n\t\t\t}\n\t\t}\n\t\treturn name + '=\"' + encodeEntities(str) + '\"';\n\t}\n\n\tif (\n\t\tvalue == null ||\n\t\tvalue === false ||\n\t\ttypeof value === 'function' ||\n\t\ttypeof value === 'object'\n\t) {\n\t\treturn '';\n\t} else if (value === true) return name;\n\n\treturn name + '=\"' + encodeEntities('' + value) + '\"';\n}\n\n/**\n * Escape a dynamic child passed to `jsxTemplate`. This function\n * is not expected to be used directly, but rather through a\n * precompile JSX transform\n * @param {*} value\n * @returns {string | null | VNode | Array<string | null | VNode>}\n */\nfunction jsxEscape(value) {\n\tif (\n\t\tvalue == null ||\n\t\ttypeof value === 'boolean' ||\n\t\ttypeof value === 'function'\n\t) {\n\t\treturn null;\n\t}\n\n\tif (typeof value === 'object') {\n\t\t// Check for VNode\n\t\tif (value.constructor === undefined) return value;\n\n\t\tif (isArray(value)) {\n\t\t\tfor (let i = 0; i < value.length; i++) {\n\t\t\t\tvalue[i] = jsxEscape(value[i]);\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\t}\n\n\treturn encodeEntities('' + value);\n}\n\nexport {\n\tcreateVNode as jsx,\n\tcreateVNode as jsxs,\n\tcreateVNode as jsxDEV,\n\tFragment,\n\t// precompiled JSX transform\n\tjsxTemplate,\n\tjsxAttr,\n\tjsxEscape\n};\n", "import { render } from 'preact';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { AppRoot } from './views/AppRoot';\nimport { BootChannel } from './views/BootChannel';\n\n// Create a single QueryClient for the webview lifetime\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: false,\n      retry: 2,\n    },\n    mutations: {\n      retry: 0,\n    },\n  },\n});\n\nfunction Root() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <div>\n        <BootChannel />\n        <AppRoot />\n      </div>\n    </QueryClientProvider>\n  );\n}\n\nrender(<Root />, document.getElementById('root')!);\n", "export class Subscribable<TListener extends Function> {\n  protected listeners = new Set<TListener>()\n\n  constructor() {\n    this.subscribe = this.subscribe.bind(this)\n  }\n\n  subscribe(listener: TListener): () => void {\n    this.listeners.add(listener)\n\n    this.onSubscribe()\n\n    return () => {\n      this.listeners.delete(listener)\n      this.onUnsubscribe()\n    }\n  }\n\n  hasListeners(): boolean {\n    return this.listeners.size > 0\n  }\n\n  protected onSubscribe(): void {\n    // Do nothing\n  }\n\n  protected onUnsubscribe(): void {\n    // Do nothing\n  }\n}\n", "/**\n * {@link TimeoutManager} does not support passing arguments to the callback.\n *\n * `(_: void)` is the argument type inferred by TypeScript's default typings for\n * `setTimeout(cb, number)`.\n * If we don't accept a single void argument, then\n * `new Promise(resolve => timeoutManager.setTimeout(resolve, N))` is a type error.\n */\nexport type TimeoutCallback = (_: void) => void\n\n/**\n * Wrapping `setTimeout` is awkward from a typing perspective because platform\n * typings may extend the return type of `setTimeout`. For example, NodeJS\n * typings add `NodeJS.Timeout`; but a non-default `timeoutManager` may not be\n * able to return such a type.\n */\nexport type ManagedTimerId = number | { [Symbol.toPrimitive]: () => number }\n\n/**\n * Backend for timer functions.\n */\nexport type TimeoutProvider<TTimerId extends ManagedTimerId = ManagedTimerId> =\n  {\n    readonly setTimeout: (callback: TimeoutCallback, delay: number) => TTimerId\n    readonly clearTimeout: (timeoutId: TTimerId | undefined) => void\n\n    readonly setInterval: (callback: TimeoutCallback, delay: number) => TTimerId\n    readonly clearInterval: (intervalId: TTimerId | undefined) => void\n  }\n\nexport const defaultTimeoutProvider: TimeoutProvider<\n  ReturnType<typeof setTimeout>\n> = {\n  // We need the wrapper function syntax below instead of direct references to\n  // global setTimeout etc.\n  //\n  // BAD: `setTimeout: setTimeout`\n  // GOOD: `setTimeout: (cb, delay) => setTimeout(cb, delay)`\n  //\n  // If we use direct references here, then anything that wants to spy on or\n  // replace the global setTimeout (like tests) won't work since we'll already\n  // have a hard reference to the original implementation at the time when this\n  // file was imported.\n  setTimeout: (callback, delay) => setTimeout(callback, delay),\n  clearTimeout: (timeoutId) => clearTimeout(timeoutId),\n\n  setInterval: (callback, delay) => setInterval(callback, delay),\n  clearInterval: (intervalId) => clearInterval(intervalId),\n}\n\n/**\n * Allows customization of how timeouts are created.\n *\n * @tanstack/query-core makes liberal use of timeouts to implement `staleTime`\n * and `gcTime`. The default TimeoutManager provider uses the platform's global\n * `setTimeout` implementation, which is known to have scalability issues with\n * thousands of timeouts on the event loop.\n *\n * If you hit this limitation, consider providing a custom TimeoutProvider that\n * coalesces timeouts.\n */\nexport class TimeoutManager implements Omit<TimeoutProvider, 'name'> {\n  // We cannot have TimeoutManager<T> as we must instantiate it with a concrete\n  // type at app boot; and if we leave that type, then any new timer provider\n  // would need to support ReturnType<typeof setTimeout>, which is infeasible.\n  //\n  // We settle for type safety for the TimeoutProvider type, and accept that\n  // this class is unsafe internally to allow for extension.\n  #provider: TimeoutProvider<any> = defaultTimeoutProvider\n  #providerCalled = false\n\n  setTimeoutProvider<TTimerId extends ManagedTimerId>(\n    provider: TimeoutProvider<TTimerId>,\n  ): void {\n    if (process.env.NODE_ENV !== 'production') {\n      if (this.#providerCalled && provider !== this.#provider) {\n        // After changing providers, `clearTimeout` will not work as expected for\n        // timeouts from the previous provider.\n        //\n        // Since they may allocate the same timeout ID, clearTimeout may cancel an\n        // arbitrary different timeout, or unexpected no-op.\n        //\n        // We could protect against this by mixing the timeout ID bits\n        // deterministically with some per-provider bits.\n        //\n        // We could internally queue `setTimeout` calls to `TimeoutManager` until\n        // some API call to set the initial provider.\n        console.error(\n          `[timeoutManager]: Switching provider after calls to previous provider might result in unexpected behavior.`,\n          { previous: this.#provider, provider },\n        )\n      }\n    }\n\n    this.#provider = provider\n    if (process.env.NODE_ENV !== 'production') {\n      this.#providerCalled = false\n    }\n  }\n\n  setTimeout(callback: TimeoutCallback, delay: number): ManagedTimerId {\n    if (process.env.NODE_ENV !== 'production') {\n      this.#providerCalled = true\n    }\n    return this.#provider.setTimeout(callback, delay)\n  }\n\n  clearTimeout(timeoutId: ManagedTimerId | undefined): void {\n    this.#provider.clearTimeout(timeoutId)\n  }\n\n  setInterval(callback: TimeoutCallback, delay: number): ManagedTimerId {\n    if (process.env.NODE_ENV !== 'production') {\n      this.#providerCalled = true\n    }\n    return this.#provider.setInterval(callback, delay)\n  }\n\n  clearInterval(intervalId: ManagedTimerId | undefined): void {\n    this.#provider.clearInterval(intervalId)\n  }\n}\n\nexport const timeoutManager = new TimeoutManager()\n\n/**\n * In many cases code wants to delay to the next event loop tick; this is not\n * mediated by {@link timeoutManager}.\n *\n * This function is provided to make auditing the `tanstack/query-core` for\n * incorrect use of system `setTimeout` easier.\n */\nexport function systemSetTimeoutZero(callback: TimeoutCallback): void {\n  setTimeout(callback, 0)\n}\n", "import { timeoutManager } from './timeoutManager'\nimport type {\n  DefaultError,\n  Enabled,\n  FetchStatus,\n  MutationKey,\n  MutationStatus,\n  QueryFunction,\n  QueryKey,\n  QueryOptions,\n  StaleTime,\n  StaleTimeFunction,\n} from './types'\nimport type { Mutation } from './mutation'\nimport type { FetchOptions, Query } from './query'\n\n// TYPES\n\nexport interface QueryFilters<TQueryKey extends QueryKey = QueryKey> {\n  /**\n   * Filter to active queries, inactive queries or all queries\n   */\n  type?: QueryTypeFilter\n  /**\n   * Match query key exactly\n   */\n  exact?: boolean\n  /**\n   * Include queries matching this predicate function\n   */\n  predicate?: (query: Query) => boolean\n  /**\n   * Include queries matching this query key\n   */\n  queryKey?: TQueryKey\n  /**\n   * Include or exclude stale queries\n   */\n  stale?: boolean\n  /**\n   * Include queries matching their fetchStatus\n   */\n  fetchStatus?: FetchStatus\n}\n\nexport interface MutationFilters<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = unknown,\n  TOnMutateResult = unknown,\n> {\n  /**\n   * Match mutation key exactly\n   */\n  exact?: boolean\n  /**\n   * Include mutations matching this predicate function\n   */\n  predicate?: (\n    mutation: Mutation<TData, TError, TVariables, TOnMutateResult>,\n  ) => boolean\n  /**\n   * Include mutations matching this mutation key\n   */\n  mutationKey?: MutationKey\n  /**\n   * Filter by mutation status\n   */\n  status?: MutationStatus\n}\n\nexport type Updater<TInput, TOutput> = TOutput | ((input: TInput) => TOutput)\n\nexport type QueryTypeFilter = 'all' | 'active' | 'inactive'\n\n// UTILS\n\nexport const isServer = typeof window === 'undefined' || 'Deno' in globalThis\n\nexport function noop(): void\nexport function noop(): undefined\nexport function noop() {}\n\nexport function functionalUpdate<TInput, TOutput>(\n  updater: Updater<TInput, TOutput>,\n  input: TInput,\n): TOutput {\n  return typeof updater === 'function'\n    ? (updater as (_: TInput) => TOutput)(input)\n    : updater\n}\n\nexport function isValidTimeout(value: unknown): value is number {\n  return typeof value === 'number' && value >= 0 && value !== Infinity\n}\n\nexport function timeUntilStale(updatedAt: number, staleTime?: number): number {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0)\n}\n\nexport function resolveStaleTime<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  staleTime:\n    | undefined\n    | StaleTimeFunction<TQueryFnData, TError, TData, TQueryKey>,\n  query: Query<TQueryFnData, TError, TData, TQueryKey>,\n): StaleTime | undefined {\n  return typeof staleTime === 'function' ? staleTime(query) : staleTime\n}\n\nexport function resolveEnabled<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  enabled: undefined | Enabled<TQueryFnData, TError, TData, TQueryKey>,\n  query: Query<TQueryFnData, TError, TData, TQueryKey>,\n): boolean | undefined {\n  return typeof enabled === 'function' ? enabled(query) : enabled\n}\n\nexport function matchQuery(\n  filters: QueryFilters,\n  query: Query<any, any, any, any>,\n): boolean {\n  const {\n    type = 'all',\n    exact,\n    fetchStatus,\n    predicate,\n    queryKey,\n    stale,\n  } = filters\n\n  if (queryKey) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false\n    }\n  }\n\n  if (type !== 'all') {\n    const isActive = query.isActive()\n    if (type === 'active' && !isActive) {\n      return false\n    }\n    if (type === 'inactive' && isActive) {\n      return false\n    }\n  }\n\n  if (typeof stale === 'boolean' && query.isStale() !== stale) {\n    return false\n  }\n\n  if (fetchStatus && fetchStatus !== query.state.fetchStatus) {\n    return false\n  }\n\n  if (predicate && !predicate(query)) {\n    return false\n  }\n\n  return true\n}\n\nexport function matchMutation(\n  filters: MutationFilters,\n  mutation: Mutation<any, any>,\n): boolean {\n  const { exact, status, predicate, mutationKey } = filters\n  if (mutationKey) {\n    if (!mutation.options.mutationKey) {\n      return false\n    }\n    if (exact) {\n      if (hashKey(mutation.options.mutationKey) !== hashKey(mutationKey)) {\n        return false\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false\n    }\n  }\n\n  if (status && mutation.state.status !== status) {\n    return false\n  }\n\n  if (predicate && !predicate(mutation)) {\n    return false\n  }\n\n  return true\n}\n\nexport function hashQueryKeyByOptions<TQueryKey extends QueryKey = QueryKey>(\n  queryKey: TQueryKey,\n  options?: Pick<QueryOptions<any, any, any, any>, 'queryKeyHashFn'>,\n): string {\n  const hashFn = options?.queryKeyHashFn || hashKey\n  return hashFn(queryKey)\n}\n\n/**\n * Default query & mutation keys hash function.\n * Hashes the value into a stable hash.\n */\nexport function hashKey(queryKey: QueryKey | MutationKey): string {\n  return JSON.stringify(queryKey, (_, val) =>\n    isPlainObject(val)\n      ? Object.keys(val)\n          .sort()\n          .reduce((result, key) => {\n            result[key] = val[key]\n            return result\n          }, {} as any)\n      : val,\n  )\n}\n\n/**\n * Checks if key `b` partially matches with key `a`.\n */\nexport function partialMatchKey(a: QueryKey, b: QueryKey): boolean\nexport function partialMatchKey(a: any, b: any): boolean {\n  if (a === b) {\n    return true\n  }\n\n  if (typeof a !== typeof b) {\n    return false\n  }\n\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    return Object.keys(b).every((key) => partialMatchKey(a[key], b[key]))\n  }\n\n  return false\n}\n\nconst hasOwn = Object.prototype.hasOwnProperty\n\n/**\n * This function returns `a` if `b` is deeply equal.\n * If not, it will replace any deeply equal children of `b` with those of `a`.\n * This can be used for structural sharing between JSON values for example.\n */\nexport function replaceEqualDeep<T>(a: unknown, b: T): T\nexport function replaceEqualDeep(a: any, b: any): any {\n  if (a === b) {\n    return a\n  }\n\n  const array = isPlainArray(a) && isPlainArray(b)\n\n  if (!array && !(isPlainObject(a) && isPlainObject(b))) return b\n\n  const aItems = array ? a : Object.keys(a)\n  const aSize = aItems.length\n  const bItems = array ? b : Object.keys(b)\n  const bSize = bItems.length\n  const copy: any = array ? new Array(bSize) : {}\n\n  let equalItems = 0\n\n  for (let i = 0; i < bSize; i++) {\n    const key: any = array ? i : bItems[i]\n    const aItem = a[key]\n    const bItem = b[key]\n\n    if (aItem === bItem) {\n      copy[key] = aItem\n      if (array ? i < aSize : hasOwn.call(a, key)) equalItems++\n      continue\n    }\n\n    if (\n      aItem === null ||\n      bItem === null ||\n      typeof aItem !== 'object' ||\n      typeof bItem !== 'object'\n    ) {\n      copy[key] = bItem\n      continue\n    }\n\n    const v = replaceEqualDeep(aItem, bItem)\n    copy[key] = v\n    if (v === aItem) equalItems++\n  }\n\n  return aSize === bSize && equalItems === aSize ? a : copy\n}\n\n/**\n * Shallow compare objects.\n */\nexport function shallowEqualObjects<T extends Record<string, any>>(\n  a: T,\n  b: T | undefined,\n): boolean {\n  if (!b || Object.keys(a).length !== Object.keys(b).length) {\n    return false\n  }\n\n  for (const key in a) {\n    if (a[key] !== b[key]) {\n      return false\n    }\n  }\n\n  return true\n}\n\nexport function isPlainArray(value: unknown): value is Array<unknown> {\n  return Array.isArray(value) && value.length === Object.keys(value).length\n}\n\n// Copied from: https://github.com/jonschlinkert/is-plain-object\nexport function isPlainObject(o: any): o is Record<PropertyKey, unknown> {\n  if (!hasObjectPrototype(o)) {\n    return false\n  }\n\n  // If has no constructor\n  const ctor = o.constructor\n  if (ctor === undefined) {\n    return true\n  }\n\n  // If has modified prototype\n  const prot = ctor.prototype\n  if (!hasObjectPrototype(prot)) {\n    return false\n  }\n\n  // If constructor does not have an Object-specific method\n  if (!prot.hasOwnProperty('isPrototypeOf')) {\n    return false\n  }\n\n  // Handles Objects created by Object.create(<arbitrary prototype>)\n  if (Object.getPrototypeOf(o) !== Object.prototype) {\n    return false\n  }\n\n  // Most likely a plain Object\n  return true\n}\n\nfunction hasObjectPrototype(o: any): boolean {\n  return Object.prototype.toString.call(o) === '[object Object]'\n}\n\nexport function sleep(timeout: number): Promise<void> {\n  return new Promise((resolve) => {\n    timeoutManager.setTimeout(resolve, timeout)\n  })\n}\n\nexport function replaceData<\n  TData,\n  TOptions extends QueryOptions<any, any, any, any>,\n>(prevData: TData | undefined, data: TData, options: TOptions): TData {\n  if (typeof options.structuralSharing === 'function') {\n    return options.structuralSharing(prevData, data) as TData\n  } else if (options.structuralSharing !== false) {\n    if (process.env.NODE_ENV !== 'production') {\n      try {\n        return replaceEqualDeep(prevData, data)\n      } catch (error) {\n        console.error(\n          `Structural sharing requires data to be JSON serializable. To fix this, turn off structuralSharing or return JSON-serializable data from your queryFn. [${options.queryHash}]: ${error}`,\n        )\n\n        // Prevent the replaceEqualDeep from being called again down below.\n        throw error\n      }\n    }\n    // Structurally share data between prev and new data if needed\n    return replaceEqualDeep(prevData, data)\n  }\n  return data\n}\n\nexport function keepPreviousData<T>(\n  previousData: T | undefined,\n): T | undefined {\n  return previousData\n}\n\nexport function addToEnd<T>(items: Array<T>, item: T, max = 0): Array<T> {\n  const newItems = [...items, item]\n  return max && newItems.length > max ? newItems.slice(1) : newItems\n}\n\nexport function addToStart<T>(items: Array<T>, item: T, max = 0): Array<T> {\n  const newItems = [item, ...items]\n  return max && newItems.length > max ? newItems.slice(0, -1) : newItems\n}\n\nexport const skipToken = Symbol()\nexport type SkipToken = typeof skipToken\n\nexport function ensureQueryFn<\n  TQueryFnData = unknown,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: {\n    queryFn?: QueryFunction<TQueryFnData, TQueryKey> | SkipToken\n    queryHash?: string\n  },\n  fetchOptions?: FetchOptions<TQueryFnData>,\n): QueryFunction<TQueryFnData, TQueryKey> {\n  if (process.env.NODE_ENV !== 'production') {\n    if (options.queryFn === skipToken) {\n      console.error(\n        `Attempted to invoke queryFn when set to skipToken. This is likely a configuration error. Query hash: '${options.queryHash}'`,\n      )\n    }\n  }\n\n  // if we attempt to retry a fetch that was triggered from an initialPromise\n  // when we don't have a queryFn yet, we can't retry, so we just return the already rejected initialPromise\n  // if an observer has already mounted, we will be able to retry with that queryFn\n  if (!options.queryFn && fetchOptions?.initialPromise) {\n    return () => fetchOptions.initialPromise!\n  }\n\n  if (!options.queryFn || options.queryFn === skipToken) {\n    return () =>\n      Promise.reject(new Error(`Missing queryFn: '${options.queryHash}'`))\n  }\n\n  return options.queryFn\n}\n\nexport function shouldThrowError<T extends (...args: Array<any>) => boolean>(\n  throwOnError: boolean | T | undefined,\n  params: Parameters<T>,\n): boolean {\n  // Allow throwOnError function to override throwing behavior on a per-error basis\n  if (typeof throwOnError === 'function') {\n    return throwOnError(...params)\n  }\n\n  return !!throwOnError\n}\n", "import { Subscribable } from './subscribable'\nimport { isServer } from './utils'\n\ntype Listener = (focused: boolean) => void\n\ntype SetupFn = (\n  setFocused: (focused?: boolean) => void,\n) => (() => void) | undefined\n\nexport class FocusManager extends Subscribable<Listener> {\n  #focused?: boolean\n  #cleanup?: () => void\n\n  #setup: SetupFn\n\n  constructor() {\n    super()\n    this.#setup = (onFocus) => {\n      // addEventListener does not exist in React Native, but window does\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!isServer && window.addEventListener) {\n        const listener = () => onFocus()\n        // Listen to visibilitychange\n        window.addEventListener('visibilitychange', listener, false)\n\n        return () => {\n          // Be sure to unsubscribe if a new handler is set\n          window.removeEventListener('visibilitychange', listener)\n        }\n      }\n      return\n    }\n  }\n\n  protected onSubscribe(): void {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup)\n    }\n  }\n\n  protected onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.()\n      this.#cleanup = undefined\n    }\n  }\n\n  setEventListener(setup: SetupFn): void {\n    this.#setup = setup\n    this.#cleanup?.()\n    this.#cleanup = setup((focused) => {\n      if (typeof focused === 'boolean') {\n        this.setFocused(focused)\n      } else {\n        this.onFocus()\n      }\n    })\n  }\n\n  setFocused(focused?: boolean): void {\n    const changed = this.#focused !== focused\n    if (changed) {\n      this.#focused = focused\n      this.onFocus()\n    }\n  }\n\n  onFocus(): void {\n    const isFocused = this.isFocused()\n    this.listeners.forEach((listener) => {\n      listener(isFocused)\n    })\n  }\n\n  isFocused(): boolean {\n    if (typeof this.#focused === 'boolean') {\n      return this.#focused\n    }\n\n    // document global can be unavailable in react native\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    return globalThis.document?.visibilityState !== 'hidden'\n  }\n}\n\nexport const focusManager = new FocusManager()\n", "/**\n * Thenable types which matches React's types for promises\n *\n * React seemingly uses `.status`, `.value` and `.reason` properties on a promises to optimistically unwrap data from promises\n *\n * @see https://github.com/facebook/react/blob/main/packages/shared/ReactTypes.js#L112-L138\n * @see https://github.com/facebook/react/blob/4f604941569d2e8947ce1460a0b2997e835f37b9/packages/react-debug-tools/src/ReactDebugHooks.js#L224-L227\n */\n\nimport { noop } from './utils'\n\ninterface Fulfilled<T> {\n  status: 'fulfilled'\n  value: T\n}\ninterface Rejected {\n  status: 'rejected'\n  reason: unknown\n}\ninterface Pending<T> {\n  status: 'pending'\n\n  /**\n   * Resolve the promise with a value.\n   * Will remove the `resolve` and `reject` properties from the promise.\n   */\n  resolve: (value: T) => void\n  /**\n   * Reject the promise with a reason.\n   * Will remove the `resolve` and `reject` properties from the promise.\n   */\n  reject: (reason: unknown) => void\n}\n\nexport type FulfilledThenable<T> = Promise<T> & Fulfilled<T>\nexport type RejectedThenable<T> = Promise<T> & Rejected\nexport type PendingThenable<T> = Promise<T> & Pending<T>\n\nexport type Thenable<T> =\n  | FulfilledThenable<T>\n  | RejectedThenable<T>\n  | PendingThenable<T>\n\nexport function pendingThenable<T>(): PendingThenable<T> {\n  let resolve: Pending<T>['resolve']\n  let reject: Pending<T>['reject']\n  // this could use `Promise.withResolvers()` in the future\n  const thenable = new Promise((_resolve, _reject) => {\n    resolve = _resolve\n    reject = _reject\n  }) as PendingThenable<T>\n\n  thenable.status = 'pending'\n  thenable.catch(() => {\n    // prevent unhandled rejection errors\n  })\n\n  function finalize(data: Fulfilled<T> | Rejected) {\n    Object.assign(thenable, data)\n\n    // clear pending props props to avoid calling them twice\n    delete (thenable as Partial<PendingThenable<T>>).resolve\n    delete (thenable as Partial<PendingThenable<T>>).reject\n  }\n\n  thenable.resolve = (value) => {\n    finalize({\n      status: 'fulfilled',\n      value,\n    })\n\n    resolve(value)\n  }\n  thenable.reject = (reason) => {\n    finalize({\n      status: 'rejected',\n      reason,\n    })\n\n    reject(reason)\n  }\n\n  return thenable\n}\n\n/**\n * This function takes a Promise-like input and detects whether the data\n * is synchronously available or not.\n *\n * It does not inspect .status, .value or .reason properties of the promise,\n * as those are not always available, and the .status of React's promises\n * should not be considered part of the public API.\n */\nexport function tryResolveSync(promise: Promise<unknown> | Thenable<unknown>) {\n  let data: unknown\n\n  promise\n    .then((result) => {\n      data = result\n      return result\n    }, noop)\n    // .catch can be unavailable on certain kinds of thenable's\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    ?.catch(noop)\n\n  if (data !== undefined) {\n    return { data }\n  }\n\n  return undefined\n}\n", "// TYPES\n\nimport { systemSetTimeoutZero } from './timeoutManager'\n\ntype NotifyCallback = () => void\n\ntype NotifyFunction = (callback: () => void) => void\n\ntype BatchNotifyFunction = (callback: () => void) => void\n\ntype BatchCallsCallback<T extends Array<unknown>> = (...args: T) => void\n\ntype ScheduleFunction = (callback: () => void) => void\n\nexport const defaultScheduler: ScheduleFunction = systemSetTimeoutZero\n\nexport function createNotifyManager() {\n  let queue: Array<NotifyCallback> = []\n  let transactions = 0\n  let notifyFn: NotifyFunction = (callback) => {\n    callback()\n  }\n  let batchNotifyFn: BatchNotifyFunction = (callback: () => void) => {\n    callback()\n  }\n  let scheduleFn = defaultScheduler\n\n  const schedule = (callback: NotifyCallback): void => {\n    if (transactions) {\n      queue.push(callback)\n    } else {\n      scheduleFn(() => {\n        notifyFn(callback)\n      })\n    }\n  }\n  const flush = (): void => {\n    const originalQueue = queue\n    queue = []\n    if (originalQueue.length) {\n      scheduleFn(() => {\n        batchNotifyFn(() => {\n          originalQueue.forEach((callback) => {\n            notifyFn(callback)\n          })\n        })\n      })\n    }\n  }\n\n  return {\n    batch: <T>(callback: () => T): T => {\n      let result\n      transactions++\n      try {\n        result = callback()\n      } finally {\n        transactions--\n        if (!transactions) {\n          flush()\n        }\n      }\n      return result\n    },\n    /**\n     * All calls to the wrapped function will be batched.\n     */\n    batchCalls: <T extends Array<unknown>>(\n      callback: BatchCallsCallback<T>,\n    ): BatchCallsCallback<T> => {\n      return (...args) => {\n        schedule(() => {\n          callback(...args)\n        })\n      }\n    },\n    schedule,\n    /**\n     * Use this method to set a custom notify function.\n     * This can be used to for example wrap notifications with `React.act` while running tests.\n     */\n    setNotifyFunction: (fn: NotifyFunction) => {\n      notifyFn = fn\n    },\n    /**\n     * Use this method to set a custom function to batch notifications together into a single tick.\n     * By default React Query will use the batch function provided by ReactDOM or React Native.\n     */\n    setBatchNotifyFunction: (fn: BatchNotifyFunction) => {\n      batchNotifyFn = fn\n    },\n    setScheduler: (fn: ScheduleFunction) => {\n      scheduleFn = fn\n    },\n  } as const\n}\n\n// SINGLETON\nexport const notifyManager = createNotifyManager()\n", "import { Subscribable } from './subscribable'\nimport { isServer } from './utils'\n\ntype Listener = (online: boolean) => void\ntype SetupFn = (setOnline: Listener) => (() => void) | undefined\n\nexport class OnlineManager extends Subscribable<Listener> {\n  #online = true\n  #cleanup?: () => void\n\n  #setup: SetupFn\n\n  constructor() {\n    super()\n    this.#setup = (onOnline) => {\n      // addEventListener does not exist in React Native, but window does\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!isServer && window.addEventListener) {\n        const onlineListener = () => onOnline(true)\n        const offlineListener = () => onOnline(false)\n        // Listen to online\n        window.addEventListener('online', onlineListener, false)\n        window.addEventListener('offline', offlineListener, false)\n\n        return () => {\n          // Be sure to unsubscribe if a new handler is set\n          window.removeEventListener('online', onlineListener)\n          window.removeEventListener('offline', offlineListener)\n        }\n      }\n\n      return\n    }\n  }\n\n  protected onSubscribe(): void {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup)\n    }\n  }\n\n  protected onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.()\n      this.#cleanup = undefined\n    }\n  }\n\n  setEventListener(setup: SetupFn): void {\n    this.#setup = setup\n    this.#cleanup?.()\n    this.#cleanup = setup(this.setOnline.bind(this))\n  }\n\n  setOnline(online: boolean): void {\n    const changed = this.#online !== online\n\n    if (changed) {\n      this.#online = online\n      this.listeners.forEach((listener) => {\n        listener(online)\n      })\n    }\n  }\n\n  isOnline(): boolean {\n    return this.#online\n  }\n}\n\nexport const onlineManager = new OnlineManager()\n", "import { focusManager } from './focusManager'\nimport { onlineManager } from './onlineManager'\nimport { pendingThenable } from './thenable'\nimport { isServer, sleep } from './utils'\nimport type { Thenable } from './thenable'\nimport type { CancelOptions, DefaultError, NetworkMode } from './types'\n\n// TYPES\n\ninterface RetryerConfig<TData = unknown, TError = DefaultError> {\n  fn: () => TData | Promise<TData>\n  initialPromise?: Promise<TData>\n  onCancel?: (error: TError) => void\n  onFail?: (failureCount: number, error: TError) => void\n  onPause?: () => void\n  onContinue?: () => void\n  retry?: RetryValue<TError>\n  retryDelay?: RetryDelayValue<TError>\n  networkMode: NetworkMode | undefined\n  canRun: () => boolean\n}\n\nexport interface Retryer<TData = unknown> {\n  promise: Promise<TData>\n  cancel: (cancelOptions?: CancelOptions) => void\n  continue: () => Promise<unknown>\n  cancelRetry: () => void\n  continueRetry: () => void\n  canStart: () => boolean\n  start: () => Promise<TData>\n  status: () => 'pending' | 'resolved' | 'rejected'\n}\n\nexport type RetryValue<TError> = boolean | number | ShouldRetryFunction<TError>\n\ntype ShouldRetryFunction<TError = DefaultError> = (\n  failureCount: number,\n  error: TError,\n) => boolean\n\nexport type RetryDelayValue<TError> = number | RetryDelayFunction<TError>\n\ntype RetryDelayFunction<TError = DefaultError> = (\n  failureCount: number,\n  error: TError,\n) => number\n\nfunction defaultRetryDelay(failureCount: number) {\n  return Math.min(1000 * 2 ** failureCount, 30000)\n}\n\nexport function canFetch(networkMode: NetworkMode | undefined): boolean {\n  return (networkMode ?? 'online') === 'online'\n    ? onlineManager.isOnline()\n    : true\n}\n\nexport class CancelledError extends Error {\n  revert?: boolean\n  silent?: boolean\n  constructor(options?: CancelOptions) {\n    super('CancelledError')\n    this.revert = options?.revert\n    this.silent = options?.silent\n  }\n}\n\n/**\n * @deprecated Use instanceof `CancelledError` instead.\n */\nexport function isCancelledError(value: any): value is CancelledError {\n  return value instanceof CancelledError\n}\n\nexport function createRetryer<TData = unknown, TError = DefaultError>(\n  config: RetryerConfig<TData, TError>,\n): Retryer<TData> {\n  let isRetryCancelled = false\n  let failureCount = 0\n  let continueFn: ((value?: unknown) => void) | undefined\n\n  const thenable = pendingThenable<TData>()\n\n  const isResolved = () =>\n    (thenable.status as Thenable<TData>['status']) !== 'pending'\n\n  const cancel = (cancelOptions?: CancelOptions): void => {\n    if (!isResolved()) {\n      const error = new CancelledError(cancelOptions) as TError\n      reject(error)\n\n      config.onCancel?.(error)\n    }\n  }\n  const cancelRetry = () => {\n    isRetryCancelled = true\n  }\n\n  const continueRetry = () => {\n    isRetryCancelled = false\n  }\n\n  const canContinue = () =>\n    focusManager.isFocused() &&\n    (config.networkMode === 'always' || onlineManager.isOnline()) &&\n    config.canRun()\n\n  const canStart = () => canFetch(config.networkMode) && config.canRun()\n\n  const resolve = (value: any) => {\n    if (!isResolved()) {\n      continueFn?.()\n      thenable.resolve(value)\n    }\n  }\n\n  const reject = (value: any) => {\n    if (!isResolved()) {\n      continueFn?.()\n      thenable.reject(value)\n    }\n  }\n\n  const pause = () => {\n    return new Promise((continueResolve) => {\n      continueFn = (value) => {\n        if (isResolved() || canContinue()) {\n          continueResolve(value)\n        }\n      }\n      config.onPause?.()\n    }).then(() => {\n      continueFn = undefined\n      if (!isResolved()) {\n        config.onContinue?.()\n      }\n    })\n  }\n\n  // Create loop function\n  const run = () => {\n    // Do nothing if already resolved\n    if (isResolved()) {\n      return\n    }\n\n    let promiseOrValue: any\n\n    // we can re-use config.initialPromise on the first call of run()\n    const initialPromise =\n      failureCount === 0 ? config.initialPromise : undefined\n\n    // Execute query\n    try {\n      promiseOrValue = initialPromise ?? config.fn()\n    } catch (error) {\n      promiseOrValue = Promise.reject(error)\n    }\n\n    Promise.resolve(promiseOrValue)\n      .then(resolve)\n      .catch((error) => {\n        // Stop if the fetch is already resolved\n        if (isResolved()) {\n          return\n        }\n\n        // Do we need to retry the request?\n        const retry = config.retry ?? (isServer ? 0 : 3)\n        const retryDelay = config.retryDelay ?? defaultRetryDelay\n        const delay =\n          typeof retryDelay === 'function'\n            ? retryDelay(failureCount, error)\n            : retryDelay\n        const shouldRetry =\n          retry === true ||\n          (typeof retry === 'number' && failureCount < retry) ||\n          (typeof retry === 'function' && retry(failureCount, error))\n\n        if (isRetryCancelled || !shouldRetry) {\n          // We are done if the query does not need to be retried\n          reject(error)\n          return\n        }\n\n        failureCount++\n\n        // Notify on fail\n        config.onFail?.(failureCount, error)\n\n        // Delay\n        sleep(delay)\n          // Pause if the document is not visible or when the device is offline\n          .then(() => {\n            return canContinue() ? undefined : pause()\n          })\n          .then(() => {\n            if (isRetryCancelled) {\n              reject(error)\n            } else {\n              run()\n            }\n          })\n      })\n  }\n\n  return {\n    promise: thenable,\n    status: () => thenable.status,\n    cancel,\n    continue: () => {\n      continueFn?.()\n      return thenable\n    },\n    cancelRetry,\n    continueRetry,\n    canStart,\n    start: () => {\n      // Start loop\n      if (canStart()) {\n        run()\n      } else {\n        pause().then(run)\n      }\n      return thenable\n    },\n  }\n}\n", "import { timeoutManager } from './timeoutManager'\nimport { isServer, isValidTimeout } from './utils'\nimport type { ManagedTimerId } from './timeoutManager'\n\nexport abstract class Removable {\n  gcTime!: number\n  #gcTimeout?: ManagedTimerId\n\n  destroy(): void {\n    this.clearGcTimeout()\n  }\n\n  protected scheduleGc(): void {\n    this.clearGcTimeout()\n\n    if (isValidTimeout(this.gcTime)) {\n      this.#gcTimeout = timeoutManager.setTimeout(() => {\n        this.optionalRemove()\n      }, this.gcTime)\n    }\n  }\n\n  protected updateGcTime(newGcTime: number | undefined): void {\n    // Default to 5 minutes (Infinity for server-side) if no gcTime is set\n    this.gcTime = Math.max(\n      this.gcTime || 0,\n      newGcTime ?? (isServer ? Infinity : 5 * 60 * 1000),\n    )\n  }\n\n  protected clearGcTimeout() {\n    if (this.#gcTimeout) {\n      timeoutManager.clearTimeout(this.#gcTimeout)\n      this.#gcTimeout = undefined\n    }\n  }\n\n  protected abstract optionalRemove(): void\n}\n", "import {\n  ensureQueryFn,\n  noop,\n  replaceData,\n  resolveEnabled,\n  resolveStaleTime,\n  skipToken,\n  timeUntilStale,\n} from './utils'\nimport { notifyManager } from './notifyManager'\nimport { CancelledError, canFetch, createRetryer } from './retryer'\nimport { Removable } from './removable'\nimport type { QueryCache } from './queryCache'\nimport type { QueryClient } from './queryClient'\nimport type {\n  CancelOptions,\n  DefaultError,\n  FetchStatus,\n  InitialDataFunction,\n  OmitKeyof,\n  QueryFunctionContext,\n  QueryKey,\n  QueryMeta,\n  QueryOptions,\n  QueryStatus,\n  SetDataOptions,\n  StaleTime,\n} from './types'\nimport type { QueryObserver } from './queryObserver'\nimport type { Retryer } from './retryer'\n\n// TYPES\n\ninterface QueryConfig<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryKey extends QueryKey = QueryKey,\n> {\n  client: QueryClient\n  queryKey: TQueryKey\n  queryHash: string\n  options?: QueryOptions<TQueryFnData, TError, TData, TQueryKey>\n  defaultOptions?: QueryOptions<TQueryFnData, TError, TData, TQueryKey>\n  state?: QueryState<TData, TError>\n}\n\nexport interface QueryState<TData = unknown, TError = DefaultError> {\n  data: TData | undefined\n  dataUpdateCount: number\n  dataUpdatedAt: number\n  error: TError | null\n  errorUpdateCount: number\n  errorUpdatedAt: number\n  fetchFailureCount: number\n  fetchFailureReason: TError | null\n  fetchMeta: FetchMeta | null\n  isInvalidated: boolean\n  status: QueryStatus\n  fetchStatus: FetchStatus\n}\n\nexport interface FetchContext<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryKey extends QueryKey = QueryKey,\n> {\n  fetchFn: () => unknown | Promise<unknown>\n  fetchOptions?: FetchOptions\n  signal: AbortSignal\n  options: QueryOptions<TQueryFnData, TError, TData, any>\n  client: QueryClient\n  queryKey: TQueryKey\n  state: QueryState<TData, TError>\n}\n\nexport interface QueryBehavior<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n> {\n  onFetch: (\n    context: FetchContext<TQueryFnData, TError, TData, TQueryKey>,\n    query: Query,\n  ) => void\n}\n\nexport type FetchDirection = 'forward' | 'backward'\n\nexport interface FetchMeta {\n  fetchMore?: { direction: FetchDirection }\n}\n\nexport interface FetchOptions<TData = unknown> {\n  cancelRefetch?: boolean\n  meta?: FetchMeta\n  initialPromise?: Promise<TData>\n}\n\ninterface FailedAction<TError> {\n  type: 'failed'\n  failureCount: number\n  error: TError\n}\n\ninterface FetchAction {\n  type: 'fetch'\n  meta?: FetchMeta\n}\n\ninterface SuccessAction<TData> {\n  data: TData | undefined\n  type: 'success'\n  dataUpdatedAt?: number\n  manual?: boolean\n}\n\ninterface ErrorAction<TError> {\n  type: 'error'\n  error: TError\n}\n\ninterface InvalidateAction {\n  type: 'invalidate'\n}\n\ninterface PauseAction {\n  type: 'pause'\n}\n\ninterface ContinueAction {\n  type: 'continue'\n}\n\ninterface SetStateAction<TData, TError> {\n  type: 'setState'\n  state: Partial<QueryState<TData, TError>>\n  setStateOptions?: SetStateOptions\n}\n\nexport type Action<TData, TError> =\n  | ContinueAction\n  | ErrorAction<TError>\n  | FailedAction<TError>\n  | FetchAction\n  | InvalidateAction\n  | PauseAction\n  | SetStateAction<TData, TError>\n  | SuccessAction<TData>\n\nexport interface SetStateOptions {\n  meta?: any\n}\n\n// CLASS\n\nexport class Query<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n> extends Removable {\n  queryKey: TQueryKey\n  queryHash: string\n  options!: QueryOptions<TQueryFnData, TError, TData, TQueryKey>\n  state: QueryState<TData, TError>\n\n  #initialState: QueryState<TData, TError>\n  #revertState?: QueryState<TData, TError>\n  #cache: QueryCache\n  #client: QueryClient\n  #retryer?: Retryer<TData>\n  observers: Array<QueryObserver<any, any, any, any, any>>\n  #defaultOptions?: QueryOptions<TQueryFnData, TError, TData, TQueryKey>\n  #abortSignalConsumed: boolean\n\n  constructor(config: QueryConfig<TQueryFnData, TError, TData, TQueryKey>) {\n    super()\n\n    this.#abortSignalConsumed = false\n    this.#defaultOptions = config.defaultOptions\n    this.setOptions(config.options)\n    this.observers = []\n    this.#client = config.client\n    this.#cache = this.#client.getQueryCache()\n    this.queryKey = config.queryKey\n    this.queryHash = config.queryHash\n    this.#initialState = getDefaultState(this.options)\n    this.state = config.state ?? this.#initialState\n    this.scheduleGc()\n  }\n  get meta(): QueryMeta | undefined {\n    return this.options.meta\n  }\n\n  get promise(): Promise<TData> | undefined {\n    return this.#retryer?.promise\n  }\n\n  setOptions(\n    options?: QueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): void {\n    this.options = { ...this.#defaultOptions, ...options }\n\n    this.updateGcTime(this.options.gcTime)\n\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    if (this.state && this.state.data === undefined) {\n      const defaultState = getDefaultState(this.options)\n      if (defaultState.data !== undefined) {\n        this.setData(defaultState.data, {\n          updatedAt: defaultState.dataUpdatedAt,\n          manual: true,\n        })\n        this.#initialState = defaultState\n      }\n    }\n  }\n\n  protected optionalRemove() {\n    if (!this.observers.length && this.state.fetchStatus === 'idle') {\n      this.#cache.remove(this)\n    }\n  }\n\n  setData(\n    newData: TData,\n    options?: SetDataOptions & { manual: boolean },\n  ): TData {\n    const data = replaceData(this.state.data, newData, this.options)\n\n    // Set data and mark it as cached\n    this.#dispatch({\n      data,\n      type: 'success',\n      dataUpdatedAt: options?.updatedAt,\n      manual: options?.manual,\n    })\n\n    return data\n  }\n\n  setState(\n    state: Partial<QueryState<TData, TError>>,\n    setStateOptions?: SetStateOptions,\n  ): void {\n    this.#dispatch({ type: 'setState', state, setStateOptions })\n  }\n\n  cancel(options?: CancelOptions): Promise<void> {\n    const promise = this.#retryer?.promise\n    this.#retryer?.cancel(options)\n    return promise ? promise.then(noop).catch(noop) : Promise.resolve()\n  }\n\n  destroy(): void {\n    super.destroy()\n\n    this.cancel({ silent: true })\n  }\n\n  reset(): void {\n    this.destroy()\n    this.setState(this.#initialState)\n  }\n\n  isActive(): boolean {\n    return this.observers.some(\n      (observer) => resolveEnabled(observer.options.enabled, this) !== false,\n    )\n  }\n\n  isDisabled(): boolean {\n    if (this.getObserversCount() > 0) {\n      return !this.isActive()\n    }\n    // if a query has no observers, it should still be considered disabled if it never attempted a fetch\n    return (\n      this.options.queryFn === skipToken ||\n      this.state.dataUpdateCount + this.state.errorUpdateCount === 0\n    )\n  }\n\n  isStatic(): boolean {\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) =>\n          resolveStaleTime(observer.options.staleTime, this) === 'static',\n      )\n    }\n\n    return false\n  }\n\n  isStale(): boolean {\n    // check observers first, their `isStale` has the source of truth\n    // calculated with `isStaleByTime` and it takes `enabled` into account\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) => observer.getCurrentResult().isStale,\n      )\n    }\n\n    return this.state.data === undefined || this.state.isInvalidated\n  }\n\n  isStaleByTime(staleTime: StaleTime = 0): boolean {\n    // no data is always stale\n    if (this.state.data === undefined) {\n      return true\n    }\n    // static is never stale\n    if (staleTime === 'static') {\n      return false\n    }\n    // if the query is invalidated, it is stale\n    if (this.state.isInvalidated) {\n      return true\n    }\n\n    return !timeUntilStale(this.state.dataUpdatedAt, staleTime)\n  }\n\n  onFocus(): void {\n    const observer = this.observers.find((x) => x.shouldFetchOnWindowFocus())\n\n    observer?.refetch({ cancelRefetch: false })\n\n    // Continue fetch if currently paused\n    this.#retryer?.continue()\n  }\n\n  onOnline(): void {\n    const observer = this.observers.find((x) => x.shouldFetchOnReconnect())\n\n    observer?.refetch({ cancelRefetch: false })\n\n    // Continue fetch if currently paused\n    this.#retryer?.continue()\n  }\n\n  addObserver(observer: QueryObserver<any, any, any, any, any>): void {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer)\n\n      // Stop the query from being garbage collected\n      this.clearGcTimeout()\n\n      this.#cache.notify({ type: 'observerAdded', query: this, observer })\n    }\n  }\n\n  removeObserver(observer: QueryObserver<any, any, any, any, any>): void {\n    if (this.observers.includes(observer)) {\n      this.observers = this.observers.filter((x) => x !== observer)\n\n      if (!this.observers.length) {\n        // If the transport layer does not support cancellation\n        // we'll let the query continue so the result can be cached\n        if (this.#retryer) {\n          if (this.#abortSignalConsumed) {\n            this.#retryer.cancel({ revert: true })\n          } else {\n            this.#retryer.cancelRetry()\n          }\n        }\n\n        this.scheduleGc()\n      }\n\n      this.#cache.notify({ type: 'observerRemoved', query: this, observer })\n    }\n  }\n\n  getObserversCount(): number {\n    return this.observers.length\n  }\n\n  invalidate(): void {\n    if (!this.state.isInvalidated) {\n      this.#dispatch({ type: 'invalidate' })\n    }\n  }\n\n  async fetch(\n    options?: QueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    fetchOptions?: FetchOptions<TQueryFnData>,\n  ): Promise<TData> {\n    if (\n      this.state.fetchStatus !== 'idle' &&\n      // If the promise in the retyer is already rejected, we have to definitely\n      // re-start the fetch; there is a chance that the query is still in a\n      // pending state when that happens\n      this.#retryer?.status() !== 'rejected'\n    ) {\n      if (this.state.data !== undefined && fetchOptions?.cancelRefetch) {\n        // Silently cancel current fetch if the user wants to cancel refetch\n        this.cancel({ silent: true })\n      } else if (this.#retryer) {\n        // make sure that retries that were potentially cancelled due to unmounts can continue\n        this.#retryer.continueRetry()\n        // Return current promise if we are already fetching\n        return this.#retryer.promise\n      }\n    }\n\n    // Update config if passed, otherwise the config from the last execution is used\n    if (options) {\n      this.setOptions(options)\n    }\n\n    // Use the options from the first observer with a query function if no function is found.\n    // This can happen when the query is hydrated or created with setQueryData.\n    if (!this.options.queryFn) {\n      const observer = this.observers.find((x) => x.options.queryFn)\n      if (observer) {\n        this.setOptions(observer.options)\n      }\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!Array.isArray(this.options.queryKey)) {\n        console.error(\n          `As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']`,\n        )\n      }\n    }\n\n    const abortController = new AbortController()\n\n    // Adds an enumerable signal property to the object that\n    // which sets abortSignalConsumed to true when the signal\n    // is read.\n    const addSignalProperty = (object: unknown) => {\n      Object.defineProperty(object, 'signal', {\n        enumerable: true,\n        get: () => {\n          this.#abortSignalConsumed = true\n          return abortController.signal\n        },\n      })\n    }\n\n    // Create fetch function\n    const fetchFn = () => {\n      const queryFn = ensureQueryFn(this.options, fetchOptions)\n\n      // Create query function context\n      const createQueryFnContext = (): QueryFunctionContext<TQueryKey> => {\n        const queryFnContext: OmitKeyof<\n          QueryFunctionContext<TQueryKey>,\n          'signal'\n        > = {\n          client: this.#client,\n          queryKey: this.queryKey,\n          meta: this.meta,\n        }\n        addSignalProperty(queryFnContext)\n        return queryFnContext as QueryFunctionContext<TQueryKey>\n      }\n\n      const queryFnContext = createQueryFnContext()\n\n      this.#abortSignalConsumed = false\n      if (this.options.persister) {\n        return this.options.persister(\n          queryFn,\n          queryFnContext,\n          this as unknown as Query,\n        )\n      }\n\n      return queryFn(queryFnContext)\n    }\n\n    // Trigger behavior hook\n    const createFetchContext = (): FetchContext<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryKey\n    > => {\n      const context: OmitKeyof<\n        FetchContext<TQueryFnData, TError, TData, TQueryKey>,\n        'signal'\n      > = {\n        fetchOptions,\n        options: this.options,\n        queryKey: this.queryKey,\n        client: this.#client,\n        state: this.state,\n        fetchFn,\n      }\n\n      addSignalProperty(context)\n      return context as FetchContext<TQueryFnData, TError, TData, TQueryKey>\n    }\n\n    const context = createFetchContext()\n\n    this.options.behavior?.onFetch(context, this as unknown as Query)\n\n    // Store state in case the current fetch needs to be reverted\n    this.#revertState = this.state\n\n    // Set to fetching state if not already in it\n    if (\n      this.state.fetchStatus === 'idle' ||\n      this.state.fetchMeta !== context.fetchOptions?.meta\n    ) {\n      this.#dispatch({ type: 'fetch', meta: context.fetchOptions?.meta })\n    }\n\n    // Try to fetch the data\n    this.#retryer = createRetryer({\n      initialPromise: fetchOptions?.initialPromise as\n        | Promise<TData>\n        | undefined,\n      fn: context.fetchFn as () => Promise<TData>,\n      onCancel: (error) => {\n        if (error instanceof CancelledError && error.revert) {\n          this.setState({\n            ...this.#revertState,\n            fetchStatus: 'idle' as const,\n          })\n        }\n        abortController.abort()\n      },\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: 'failed', failureCount, error })\n      },\n      onPause: () => {\n        this.#dispatch({ type: 'pause' })\n      },\n      onContinue: () => {\n        this.#dispatch({ type: 'continue' })\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay,\n      networkMode: context.options.networkMode,\n      canRun: () => true,\n    })\n\n    try {\n      const data = await this.#retryer.start()\n      // this is more of a runtime guard\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (data === undefined) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.error(\n            `Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: ${this.queryHash}`,\n          )\n        }\n        throw new Error(`${this.queryHash} data is undefined`)\n      }\n\n      this.setData(data)\n\n      // Notify cache callback\n      this.#cache.config.onSuccess?.(data, this as Query<any, any, any, any>)\n      this.#cache.config.onSettled?.(\n        data,\n        this.state.error as any,\n        this as Query<any, any, any, any>,\n      )\n      return data\n    } catch (error) {\n      if (error instanceof CancelledError) {\n        if (error.silent) {\n          // silent cancellation implies a new fetch is going to be started,\n          // so we piggyback onto that promise\n          return this.#retryer.promise\n        } else if (error.revert) {\n          // transform error into reverted state data\n          // if the initial fetch was cancelled, we have no data, so we have\n          // to get reject with a CancelledError\n          if (this.state.data === undefined) {\n            throw error\n          }\n          return this.state.data\n        }\n      }\n      this.#dispatch({\n        type: 'error',\n        error: error as TError,\n      })\n\n      // Notify cache callback\n      this.#cache.config.onError?.(\n        error as any,\n        this as Query<any, any, any, any>,\n      )\n      this.#cache.config.onSettled?.(\n        this.state.data,\n        error as any,\n        this as Query<any, any, any, any>,\n      )\n\n      throw error // rethrow the error for further handling\n    } finally {\n      // Schedule query gc after fetching\n      this.scheduleGc()\n    }\n  }\n\n  #dispatch(action: Action<TData, TError>): void {\n    const reducer = (\n      state: QueryState<TData, TError>,\n    ): QueryState<TData, TError> => {\n      switch (action.type) {\n        case 'failed':\n          return {\n            ...state,\n            fetchFailureCount: action.failureCount,\n            fetchFailureReason: action.error,\n          }\n        case 'pause':\n          return {\n            ...state,\n            fetchStatus: 'paused',\n          }\n        case 'continue':\n          return {\n            ...state,\n            fetchStatus: 'fetching',\n          }\n        case 'fetch':\n          return {\n            ...state,\n            ...fetchState(state.data, this.options),\n            fetchMeta: action.meta ?? null,\n          }\n        case 'success':\n          const newState = {\n            ...state,\n            data: action.data,\n            dataUpdateCount: state.dataUpdateCount + 1,\n            dataUpdatedAt: action.dataUpdatedAt ?? Date.now(),\n            error: null,\n            isInvalidated: false,\n            status: 'success' as const,\n            ...(!action.manual && {\n              fetchStatus: 'idle' as const,\n              fetchFailureCount: 0,\n              fetchFailureReason: null,\n            }),\n          }\n          // If fetching ends successfully, we don't need revertState as a fallback anymore.\n          // For manual updates, capture the state to revert to it in case of a cancellation.\n          this.#revertState = action.manual ? newState : undefined\n\n          return newState\n        case 'error':\n          const error = action.error\n          return {\n            ...state,\n            error,\n            errorUpdateCount: state.errorUpdateCount + 1,\n            errorUpdatedAt: Date.now(),\n            fetchFailureCount: state.fetchFailureCount + 1,\n            fetchFailureReason: error,\n            fetchStatus: 'idle',\n            status: 'error',\n          }\n        case 'invalidate':\n          return {\n            ...state,\n            isInvalidated: true,\n          }\n        case 'setState':\n          return {\n            ...state,\n            ...action.state,\n          }\n      }\n    }\n\n    this.state = reducer(this.state)\n\n    notifyManager.batch(() => {\n      this.observers.forEach((observer) => {\n        observer.onQueryUpdate()\n      })\n\n      this.#cache.notify({ query: this, type: 'updated', action })\n    })\n  }\n}\n\nexport function fetchState<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryKey extends QueryKey,\n>(\n  data: TData | undefined,\n  options: QueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n) {\n  return {\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchStatus: canFetch(options.networkMode) ? 'fetching' : 'paused',\n    ...(data === undefined &&\n      ({\n        error: null,\n        status: 'pending',\n      } as const)),\n  } as const\n}\n\nfunction getDefaultState<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryKey extends QueryKey,\n>(\n  options: QueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n): QueryState<TData, TError> {\n  const data =\n    typeof options.initialData === 'function'\n      ? (options.initialData as InitialDataFunction<TData>)()\n      : options.initialData\n\n  const hasData = data !== undefined\n\n  const initialDataUpdatedAt = hasData\n    ? typeof options.initialDataUpdatedAt === 'function'\n      ? (options.initialDataUpdatedAt as () => number | undefined)()\n      : options.initialDataUpdatedAt\n    : 0\n\n  return {\n    data,\n    dataUpdateCount: 0,\n    dataUpdatedAt: hasData ? (initialDataUpdatedAt ?? Date.now()) : 0,\n    error: null,\n    errorUpdateCount: 0,\n    errorUpdatedAt: 0,\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchMeta: null,\n    isInvalidated: false,\n    status: hasData ? 'success' : 'pending',\n    fetchStatus: 'idle',\n  }\n}\n", "import { focusManager } from './focusManager'\nimport { notifyManager } from './notifyManager'\nimport { fetchState } from './query'\nimport { Subscribable } from './subscribable'\nimport { pendingThenable } from './thenable'\nimport {\n  isServer,\n  isValidTimeout,\n  noop,\n  replaceData,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  timeUntilStale,\n} from './utils'\nimport { timeoutManager } from './timeoutManager'\nimport type { ManagedTimerId } from './timeoutManager'\nimport type { FetchOptions, Query, QueryState } from './query'\nimport type { QueryClient } from './queryClient'\nimport type { PendingThenable, Thenable } from './thenable'\nimport type {\n  DefaultError,\n  DefaultedQueryObserverOptions,\n  PlaceholderDataFunction,\n  QueryKey,\n  QueryObserverBaseResult,\n  QueryObserverOptions,\n  QueryObserverResult,\n  QueryOptions,\n  RefetchOptions,\n} from './types'\n\ntype QueryObserverListener<TData, TError> = (\n  result: QueryObserverResult<TData, TError>,\n) => void\n\ninterface ObserverFetchOptions extends FetchOptions {\n  throwOnError?: boolean\n}\n\nexport class QueryObserver<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n> extends Subscribable<QueryObserverListener<TData, TError>> {\n  #client: QueryClient\n  #currentQuery: Query<TQueryFnData, TError, TQueryData, TQueryKey> = undefined!\n  #currentQueryInitialState: QueryState<TQueryData, TError> = undefined!\n  #currentResult: QueryObserverResult<TData, TError> = undefined!\n  #currentResultState?: QueryState<TQueryData, TError>\n  #currentResultOptions?: QueryObserverOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  >\n  #currentThenable: Thenable<TData>\n  #selectError: TError | null\n  #selectFn?: (data: TQueryData) => TData\n  #selectResult?: TData\n  // This property keeps track of the last query with defined data.\n  // It will be used to pass the previous data and query to the placeholder function between renders.\n  #lastQueryWithDefinedData?: Query<TQueryFnData, TError, TQueryData, TQueryKey>\n  #staleTimeoutId?: ManagedTimerId\n  #refetchIntervalId?: ManagedTimerId\n  #currentRefetchInterval?: number | false\n  #trackedProps = new Set<keyof QueryObserverResult>()\n\n  constructor(\n    client: QueryClient,\n    public options: QueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ) {\n    super()\n\n    this.#client = client\n    this.#selectError = null\n    this.#currentThenable = pendingThenable()\n\n    this.bindMethods()\n    this.setOptions(options)\n  }\n\n  protected bindMethods(): void {\n    this.refetch = this.refetch.bind(this)\n  }\n\n  protected onSubscribe(): void {\n    if (this.listeners.size === 1) {\n      this.#currentQuery.addObserver(this)\n\n      if (shouldFetchOnMount(this.#currentQuery, this.options)) {\n        this.#executeFetch()\n      } else {\n        this.updateResult()\n      }\n\n      this.#updateTimers()\n    }\n  }\n\n  protected onUnsubscribe(): void {\n    if (!this.hasListeners()) {\n      this.destroy()\n    }\n  }\n\n  shouldFetchOnReconnect(): boolean {\n    return shouldFetchOn(\n      this.#currentQuery,\n      this.options,\n      this.options.refetchOnReconnect,\n    )\n  }\n\n  shouldFetchOnWindowFocus(): boolean {\n    return shouldFetchOn(\n      this.#currentQuery,\n      this.options,\n      this.options.refetchOnWindowFocus,\n    )\n  }\n\n  destroy(): void {\n    this.listeners = new Set()\n    this.#clearStaleTimeout()\n    this.#clearRefetchInterval()\n    this.#currentQuery.removeObserver(this)\n  }\n\n  setOptions(\n    options: QueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ): void {\n    const prevOptions = this.options\n    const prevQuery = this.#currentQuery\n\n    this.options = this.#client.defaultQueryOptions(options)\n\n    if (\n      this.options.enabled !== undefined &&\n      typeof this.options.enabled !== 'boolean' &&\n      typeof this.options.enabled !== 'function' &&\n      typeof resolveEnabled(this.options.enabled, this.#currentQuery) !==\n        'boolean'\n    ) {\n      throw new Error(\n        'Expected enabled to be a boolean or a callback that returns a boolean',\n      )\n    }\n\n    this.#updateQuery()\n    this.#currentQuery.setOptions(this.options)\n\n    if (\n      prevOptions._defaulted &&\n      !shallowEqualObjects(this.options, prevOptions)\n    ) {\n      this.#client.getQueryCache().notify({\n        type: 'observerOptionsUpdated',\n        query: this.#currentQuery,\n        observer: this,\n      })\n    }\n\n    const mounted = this.hasListeners()\n\n    // Fetch if there are subscribers\n    if (\n      mounted &&\n      shouldFetchOptionally(\n        this.#currentQuery,\n        prevQuery,\n        this.options,\n        prevOptions,\n      )\n    ) {\n      this.#executeFetch()\n    }\n\n    // Update result\n    this.updateResult()\n\n    // Update stale interval if needed\n    if (\n      mounted &&\n      (this.#currentQuery !== prevQuery ||\n        resolveEnabled(this.options.enabled, this.#currentQuery) !==\n          resolveEnabled(prevOptions.enabled, this.#currentQuery) ||\n        resolveStaleTime(this.options.staleTime, this.#currentQuery) !==\n          resolveStaleTime(prevOptions.staleTime, this.#currentQuery))\n    ) {\n      this.#updateStaleTimeout()\n    }\n\n    const nextRefetchInterval = this.#computeRefetchInterval()\n\n    // Update refetch interval if needed\n    if (\n      mounted &&\n      (this.#currentQuery !== prevQuery ||\n        resolveEnabled(this.options.enabled, this.#currentQuery) !==\n          resolveEnabled(prevOptions.enabled, this.#currentQuery) ||\n        nextRefetchInterval !== this.#currentRefetchInterval)\n    ) {\n      this.#updateRefetchInterval(nextRefetchInterval)\n    }\n  }\n\n  getOptimisticResult(\n    options: DefaultedQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ): QueryObserverResult<TData, TError> {\n    const query = this.#client.getQueryCache().build(this.#client, options)\n\n    const result = this.createResult(query, options)\n\n    if (shouldAssignObserverCurrentProperties(this, result)) {\n      // this assigns the optimistic result to the current Observer\n      // because if the query function changes, useQuery will be performing\n      // an effect where it would fetch again.\n      // When the fetch finishes, we perform a deep data cloning in order\n      // to reuse objects references. This deep data clone is performed against\n      // the `observer.currentResult.data` property\n      // When QueryKey changes, we refresh the query and get new `optimistic`\n      // result, while we leave the `observer.currentResult`, so when new data\n      // arrives, it finds the old `observer.currentResult` which is related\n      // to the old QueryKey. Which means that currentResult and selectData are\n      // out of sync already.\n      // To solve this, we move the cursor of the currentResult every time\n      // an observer reads an optimistic value.\n\n      // When keeping the previous data, the result doesn't change until new\n      // data arrives.\n      this.#currentResult = result\n      this.#currentResultOptions = this.options\n      this.#currentResultState = this.#currentQuery.state\n    }\n    return result\n  }\n\n  getCurrentResult(): QueryObserverResult<TData, TError> {\n    return this.#currentResult\n  }\n\n  trackResult(\n    result: QueryObserverResult<TData, TError>,\n    onPropTracked?: (key: keyof QueryObserverResult) => void,\n  ): QueryObserverResult<TData, TError> {\n    return new Proxy(result, {\n      get: (target, key) => {\n        this.trackProp(key as keyof QueryObserverResult)\n        onPropTracked?.(key as keyof QueryObserverResult)\n        if (\n          key === 'promise' &&\n          !this.options.experimental_prefetchInRender &&\n          this.#currentThenable.status === 'pending'\n        ) {\n          this.#currentThenable.reject(\n            new Error(\n              'experimental_prefetchInRender feature flag is not enabled',\n            ),\n          )\n        }\n        return Reflect.get(target, key)\n      },\n    })\n  }\n\n  trackProp(key: keyof QueryObserverResult) {\n    this.#trackedProps.add(key)\n  }\n\n  getCurrentQuery(): Query<TQueryFnData, TError, TQueryData, TQueryKey> {\n    return this.#currentQuery\n  }\n\n  refetch({ ...options }: RefetchOptions = {}): Promise<\n    QueryObserverResult<TData, TError>\n  > {\n    return this.fetch({\n      ...options,\n    })\n  }\n\n  fetchOptimistic(\n    options: QueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ): Promise<QueryObserverResult<TData, TError>> {\n    const defaultedOptions = this.#client.defaultQueryOptions(options)\n\n    const query = this.#client\n      .getQueryCache()\n      .build(this.#client, defaultedOptions)\n\n    return query.fetch().then(() => this.createResult(query, defaultedOptions))\n  }\n\n  protected fetch(\n    fetchOptions: ObserverFetchOptions,\n  ): Promise<QueryObserverResult<TData, TError>> {\n    return this.#executeFetch({\n      ...fetchOptions,\n      cancelRefetch: fetchOptions.cancelRefetch ?? true,\n    }).then(() => {\n      this.updateResult()\n      return this.#currentResult\n    })\n  }\n\n  #executeFetch(\n    fetchOptions?: Omit<ObserverFetchOptions, 'initialPromise'>,\n  ): Promise<TQueryData | undefined> {\n    // Make sure we reference the latest query as the current one might have been removed\n    this.#updateQuery()\n\n    // Fetch\n    let promise: Promise<TQueryData | undefined> = this.#currentQuery.fetch(\n      this.options as QueryOptions<TQueryFnData, TError, TQueryData, TQueryKey>,\n      fetchOptions,\n    )\n\n    if (!fetchOptions?.throwOnError) {\n      promise = promise.catch(noop)\n    }\n\n    return promise\n  }\n\n  #updateStaleTimeout(): void {\n    this.#clearStaleTimeout()\n    const staleTime = resolveStaleTime(\n      this.options.staleTime,\n      this.#currentQuery,\n    )\n\n    if (isServer || this.#currentResult.isStale || !isValidTimeout(staleTime)) {\n      return\n    }\n\n    const time = timeUntilStale(this.#currentResult.dataUpdatedAt, staleTime)\n\n    // The timeout is sometimes triggered 1 ms before the stale time expiration.\n    // To mitigate this issue we always add 1 ms to the timeout.\n    const timeout = time + 1\n\n    this.#staleTimeoutId = timeoutManager.setTimeout(() => {\n      if (!this.#currentResult.isStale) {\n        this.updateResult()\n      }\n    }, timeout)\n  }\n\n  #computeRefetchInterval() {\n    return (\n      (typeof this.options.refetchInterval === 'function'\n        ? this.options.refetchInterval(this.#currentQuery)\n        : this.options.refetchInterval) ?? false\n    )\n  }\n\n  #updateRefetchInterval(nextInterval: number | false): void {\n    this.#clearRefetchInterval()\n\n    this.#currentRefetchInterval = nextInterval\n\n    if (\n      isServer ||\n      resolveEnabled(this.options.enabled, this.#currentQuery) === false ||\n      !isValidTimeout(this.#currentRefetchInterval) ||\n      this.#currentRefetchInterval === 0\n    ) {\n      return\n    }\n\n    this.#refetchIntervalId = timeoutManager.setInterval(() => {\n      if (\n        this.options.refetchIntervalInBackground ||\n        focusManager.isFocused()\n      ) {\n        this.#executeFetch()\n      }\n    }, this.#currentRefetchInterval)\n  }\n\n  #updateTimers(): void {\n    this.#updateStaleTimeout()\n    this.#updateRefetchInterval(this.#computeRefetchInterval())\n  }\n\n  #clearStaleTimeout(): void {\n    if (this.#staleTimeoutId) {\n      timeoutManager.clearTimeout(this.#staleTimeoutId)\n      this.#staleTimeoutId = undefined\n    }\n  }\n\n  #clearRefetchInterval(): void {\n    if (this.#refetchIntervalId) {\n      timeoutManager.clearInterval(this.#refetchIntervalId)\n      this.#refetchIntervalId = undefined\n    }\n  }\n\n  protected createResult(\n    query: Query<TQueryFnData, TError, TQueryData, TQueryKey>,\n    options: QueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >,\n  ): QueryObserverResult<TData, TError> {\n    const prevQuery = this.#currentQuery\n    const prevOptions = this.options\n    const prevResult = this.#currentResult as\n      | QueryObserverResult<TData, TError>\n      | undefined\n    const prevResultState = this.#currentResultState\n    const prevResultOptions = this.#currentResultOptions\n    const queryChange = query !== prevQuery\n    const queryInitialState = queryChange\n      ? query.state\n      : this.#currentQueryInitialState\n\n    const { state } = query\n    let newState = { ...state }\n    let isPlaceholderData = false\n    let data: TData | undefined\n\n    // Optimistically set result in fetching state if needed\n    if (options._optimisticResults) {\n      const mounted = this.hasListeners()\n\n      const fetchOnMount = !mounted && shouldFetchOnMount(query, options)\n\n      const fetchOptionally =\n        mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions)\n\n      if (fetchOnMount || fetchOptionally) {\n        newState = {\n          ...newState,\n          ...fetchState(state.data, query.options),\n        }\n      }\n      if (options._optimisticResults === 'isRestoring') {\n        newState.fetchStatus = 'idle'\n      }\n    }\n\n    let { error, errorUpdatedAt, status } = newState\n\n    // Per default, use query data\n    data = newState.data as unknown as TData\n    let skipSelect = false\n\n    // use placeholderData if needed\n    if (\n      options.placeholderData !== undefined &&\n      data === undefined &&\n      status === 'pending'\n    ) {\n      let placeholderData\n\n      // Memoize placeholder data\n      if (\n        prevResult?.isPlaceholderData &&\n        options.placeholderData === prevResultOptions?.placeholderData\n      ) {\n        placeholderData = prevResult.data\n        // we have to skip select when reading this memoization\n        // because prevResult.data is already \"selected\"\n        skipSelect = true\n      } else {\n        // compute placeholderData\n        placeholderData =\n          typeof options.placeholderData === 'function'\n            ? (\n                options.placeholderData as unknown as PlaceholderDataFunction<TQueryData>\n              )(\n                this.#lastQueryWithDefinedData?.state.data,\n                this.#lastQueryWithDefinedData as any,\n              )\n            : options.placeholderData\n      }\n\n      if (placeholderData !== undefined) {\n        status = 'success'\n        data = replaceData(\n          prevResult?.data,\n          placeholderData as unknown,\n          options,\n        ) as TData\n        isPlaceholderData = true\n      }\n    }\n\n    // Select data if needed\n    // this also runs placeholderData through the select function\n    if (options.select && data !== undefined && !skipSelect) {\n      // Memoize select result\n      if (\n        prevResult &&\n        data === prevResultState?.data &&\n        options.select === this.#selectFn\n      ) {\n        data = this.#selectResult\n      } else {\n        try {\n          this.#selectFn = options.select\n          data = options.select(data as any)\n          data = replaceData(prevResult?.data, data, options)\n          this.#selectResult = data\n          this.#selectError = null\n        } catch (selectError) {\n          this.#selectError = selectError as TError\n        }\n      }\n    }\n\n    if (this.#selectError) {\n      error = this.#selectError as any\n      data = this.#selectResult\n      errorUpdatedAt = Date.now()\n      status = 'error'\n    }\n\n    const isFetching = newState.fetchStatus === 'fetching'\n    const isPending = status === 'pending'\n    const isError = status === 'error'\n\n    const isLoading = isPending && isFetching\n    const hasData = data !== undefined\n\n    const result: QueryObserverBaseResult<TData, TError> = {\n      status,\n      fetchStatus: newState.fetchStatus,\n      isPending,\n      isSuccess: status === 'success',\n      isError,\n      isInitialLoading: isLoading,\n      isLoading,\n      data,\n      dataUpdatedAt: newState.dataUpdatedAt,\n      error,\n      errorUpdatedAt,\n      failureCount: newState.fetchFailureCount,\n      failureReason: newState.fetchFailureReason,\n      errorUpdateCount: newState.errorUpdateCount,\n      isFetched: newState.dataUpdateCount > 0 || newState.errorUpdateCount > 0,\n      isFetchedAfterMount:\n        newState.dataUpdateCount > queryInitialState.dataUpdateCount ||\n        newState.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching,\n      isRefetching: isFetching && !isPending,\n      isLoadingError: isError && !hasData,\n      isPaused: newState.fetchStatus === 'paused',\n      isPlaceholderData,\n      isRefetchError: isError && hasData,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      promise: this.#currentThenable,\n      isEnabled: resolveEnabled(options.enabled, query) !== false,\n    }\n\n    const nextResult = result as QueryObserverResult<TData, TError>\n\n    if (this.options.experimental_prefetchInRender) {\n      const finalizeThenableIfPossible = (thenable: PendingThenable<TData>) => {\n        if (nextResult.status === 'error') {\n          thenable.reject(nextResult.error)\n        } else if (nextResult.data !== undefined) {\n          thenable.resolve(nextResult.data)\n        }\n      }\n\n      /**\n       * Create a new thenable and result promise when the results have changed\n       */\n      const recreateThenable = () => {\n        const pending =\n          (this.#currentThenable =\n          nextResult.promise =\n            pendingThenable())\n\n        finalizeThenableIfPossible(pending)\n      }\n\n      const prevThenable = this.#currentThenable\n      switch (prevThenable.status) {\n        case 'pending':\n          // Finalize the previous thenable if it was pending\n          // and we are still observing the same query\n          if (query.queryHash === prevQuery.queryHash) {\n            finalizeThenableIfPossible(prevThenable)\n          }\n          break\n        case 'fulfilled':\n          if (\n            nextResult.status === 'error' ||\n            nextResult.data !== prevThenable.value\n          ) {\n            recreateThenable()\n          }\n          break\n        case 'rejected':\n          if (\n            nextResult.status !== 'error' ||\n            nextResult.error !== prevThenable.reason\n          ) {\n            recreateThenable()\n          }\n          break\n      }\n    }\n\n    return nextResult\n  }\n\n  updateResult(): void {\n    const prevResult = this.#currentResult as\n      | QueryObserverResult<TData, TError>\n      | undefined\n\n    const nextResult = this.createResult(this.#currentQuery, this.options)\n\n    this.#currentResultState = this.#currentQuery.state\n    this.#currentResultOptions = this.options\n\n    if (this.#currentResultState.data !== undefined) {\n      this.#lastQueryWithDefinedData = this.#currentQuery\n    }\n\n    // Only notify and update result if something has changed\n    if (shallowEqualObjects(nextResult, prevResult)) {\n      return\n    }\n\n    this.#currentResult = nextResult\n\n    const shouldNotifyListeners = (): boolean => {\n      if (!prevResult) {\n        return true\n      }\n\n      const { notifyOnChangeProps } = this.options\n      const notifyOnChangePropsValue =\n        typeof notifyOnChangeProps === 'function'\n          ? notifyOnChangeProps()\n          : notifyOnChangeProps\n\n      if (\n        notifyOnChangePropsValue === 'all' ||\n        (!notifyOnChangePropsValue && !this.#trackedProps.size)\n      ) {\n        return true\n      }\n\n      const includedProps = new Set(\n        notifyOnChangePropsValue ?? this.#trackedProps,\n      )\n\n      if (this.options.throwOnError) {\n        includedProps.add('error')\n      }\n\n      return Object.keys(this.#currentResult).some((key) => {\n        const typedKey = key as keyof QueryObserverResult\n        const changed = this.#currentResult[typedKey] !== prevResult[typedKey]\n\n        return changed && includedProps.has(typedKey)\n      })\n    }\n\n    this.#notify({ listeners: shouldNotifyListeners() })\n  }\n\n  #updateQuery(): void {\n    const query = this.#client.getQueryCache().build(this.#client, this.options)\n\n    if (query === this.#currentQuery) {\n      return\n    }\n\n    const prevQuery = this.#currentQuery as\n      | Query<TQueryFnData, TError, TQueryData, TQueryKey>\n      | undefined\n    this.#currentQuery = query\n    this.#currentQueryInitialState = query.state\n\n    if (this.hasListeners()) {\n      prevQuery?.removeObserver(this)\n      query.addObserver(this)\n    }\n  }\n\n  onQueryUpdate(): void {\n    this.updateResult()\n\n    if (this.hasListeners()) {\n      this.#updateTimers()\n    }\n  }\n\n  #notify(notifyOptions: { listeners: boolean }): void {\n    notifyManager.batch(() => {\n      // First, trigger the listeners\n      if (notifyOptions.listeners) {\n        this.listeners.forEach((listener) => {\n          listener(this.#currentResult)\n        })\n      }\n\n      // Then the cache listeners\n      this.#client.getQueryCache().notify({\n        query: this.#currentQuery,\n        type: 'observerResultsUpdated',\n      })\n    })\n  }\n}\n\nfunction shouldLoadOnMount(\n  query: Query<any, any, any, any>,\n  options: QueryObserverOptions<any, any, any, any>,\n): boolean {\n  return (\n    resolveEnabled(options.enabled, query) !== false &&\n    query.state.data === undefined &&\n    !(query.state.status === 'error' && options.retryOnMount === false)\n  )\n}\n\nfunction shouldFetchOnMount(\n  query: Query<any, any, any, any>,\n  options: QueryObserverOptions<any, any, any, any, any>,\n): boolean {\n  return (\n    shouldLoadOnMount(query, options) ||\n    (query.state.data !== undefined &&\n      shouldFetchOn(query, options, options.refetchOnMount))\n  )\n}\n\nfunction shouldFetchOn(\n  query: Query<any, any, any, any>,\n  options: QueryObserverOptions<any, any, any, any, any>,\n  field: (typeof options)['refetchOnMount'] &\n    (typeof options)['refetchOnWindowFocus'] &\n    (typeof options)['refetchOnReconnect'],\n) {\n  if (\n    resolveEnabled(options.enabled, query) !== false &&\n    resolveStaleTime(options.staleTime, query) !== 'static'\n  ) {\n    const value = typeof field === 'function' ? field(query) : field\n\n    return value === 'always' || (value !== false && isStale(query, options))\n  }\n  return false\n}\n\nfunction shouldFetchOptionally(\n  query: Query<any, any, any, any>,\n  prevQuery: Query<any, any, any, any>,\n  options: QueryObserverOptions<any, any, any, any, any>,\n  prevOptions: QueryObserverOptions<any, any, any, any, any>,\n): boolean {\n  return (\n    (query !== prevQuery ||\n      resolveEnabled(prevOptions.enabled, query) === false) &&\n    (!options.suspense || query.state.status !== 'error') &&\n    isStale(query, options)\n  )\n}\n\nfunction isStale(\n  query: Query<any, any, any, any>,\n  options: QueryObserverOptions<any, any, any, any, any>,\n): boolean {\n  return (\n    resolveEnabled(options.enabled, query) !== false &&\n    query.isStaleByTime(resolveStaleTime(options.staleTime, query))\n  )\n}\n\n// this function would decide if we will update the observer's 'current'\n// properties after an optimistic reading via getOptimisticResult\nfunction shouldAssignObserverCurrentProperties<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  observer: QueryObserver<TQueryFnData, TError, TData, TQueryData, TQueryKey>,\n  optimisticResult: QueryObserverResult<TData, TError>,\n) {\n  // if the newly created result isn't what the observer is holding as current,\n  // then we'll need to update the properties as well\n  if (!shallowEqualObjects(observer.getCurrentResult(), optimisticResult)) {\n    return true\n  }\n\n  // basically, just keep previous properties if nothing changed\n  return false\n}\n", "import { addToEnd, addToStart, ensureQueryFn } from './utils'\nimport type { QueryBehavior } from './query'\nimport type {\n  InfiniteData,\n  InfiniteQueryPageParamsOptions,\n  OmitKeyof,\n  QueryFunctionContext,\n  QueryKey,\n} from './types'\n\nexport function infiniteQueryBehavior<TQueryFnData, TError, TData, TPageParam>(\n  pages?: number,\n): QueryBehavior<TQueryFnData, TError, InfiniteData<TData, TPageParam>> {\n  return {\n    onFetch: (context, query) => {\n      const options = context.options as InfiniteQueryPageParamsOptions<TData>\n      const direction = context.fetchOptions?.meta?.fetchMore?.direction\n      const oldPages = context.state.data?.pages || []\n      const oldPageParams = context.state.data?.pageParams || []\n      let result: InfiniteData<unknown> = { pages: [], pageParams: [] }\n      let currentPage = 0\n\n      const fetchFn = async () => {\n        let cancelled = false\n        const addSignalProperty = (object: unknown) => {\n          Object.defineProperty(object, 'signal', {\n            enumerable: true,\n            get: () => {\n              if (context.signal.aborted) {\n                cancelled = true\n              } else {\n                context.signal.addEventListener('abort', () => {\n                  cancelled = true\n                })\n              }\n              return context.signal\n            },\n          })\n        }\n\n        const queryFn = ensureQueryFn(context.options, context.fetchOptions)\n\n        // Create function to fetch a page\n        const fetchPage = async (\n          data: InfiniteData<unknown>,\n          param: unknown,\n          previous?: boolean,\n        ): Promise<InfiniteData<unknown>> => {\n          if (cancelled) {\n            return Promise.reject()\n          }\n\n          if (param == null && data.pages.length) {\n            return Promise.resolve(data)\n          }\n\n          const createQueryFnContext = () => {\n            const queryFnContext: OmitKeyof<\n              QueryFunctionContext<QueryKey, unknown>,\n              'signal'\n            > = {\n              client: context.client,\n              queryKey: context.queryKey,\n              pageParam: param,\n              direction: previous ? 'backward' : 'forward',\n              meta: context.options.meta,\n            }\n            addSignalProperty(queryFnContext)\n            return queryFnContext as QueryFunctionContext<QueryKey, unknown>\n          }\n\n          const queryFnContext = createQueryFnContext()\n\n          const page = await queryFn(queryFnContext)\n\n          const { maxPages } = context.options\n          const addTo = previous ? addToStart : addToEnd\n\n          return {\n            pages: addTo(data.pages, page, maxPages),\n            pageParams: addTo(data.pageParams, param, maxPages),\n          }\n        }\n\n        // fetch next / previous page?\n        if (direction && oldPages.length) {\n          const previous = direction === 'backward'\n          const pageParamFn = previous ? getPreviousPageParam : getNextPageParam\n          const oldData = {\n            pages: oldPages,\n            pageParams: oldPageParams,\n          }\n          const param = pageParamFn(options, oldData)\n\n          result = await fetchPage(oldData, param, previous)\n        } else {\n          const remainingPages = pages ?? oldPages.length\n\n          // Fetch all pages\n          do {\n            const param =\n              currentPage === 0\n                ? (oldPageParams[0] ?? options.initialPageParam)\n                : getNextPageParam(options, result)\n            if (currentPage > 0 && param == null) {\n              break\n            }\n            result = await fetchPage(result, param)\n            currentPage++\n          } while (currentPage < remainingPages)\n        }\n\n        return result\n      }\n      if (context.options.persister) {\n        context.fetchFn = () => {\n          return context.options.persister?.(\n            fetchFn as any,\n            {\n              client: context.client,\n              queryKey: context.queryKey,\n              meta: context.options.meta,\n              signal: context.signal,\n            },\n            query,\n          )\n        }\n      } else {\n        context.fetchFn = fetchFn\n      }\n    },\n  }\n}\n\nfunction getNextPageParam(\n  options: InfiniteQueryPageParamsOptions<any>,\n  { pages, pageParams }: InfiniteData<unknown>,\n): unknown | undefined {\n  const lastIndex = pages.length - 1\n  return pages.length > 0\n    ? options.getNextPageParam(\n        pages[lastIndex],\n        pages,\n        pageParams[lastIndex],\n        pageParams,\n      )\n    : undefined\n}\n\nfunction getPreviousPageParam(\n  options: InfiniteQueryPageParamsOptions<any>,\n  { pages, pageParams }: InfiniteData<unknown>,\n): unknown | undefined {\n  return pages.length > 0\n    ? options.getPreviousPageParam?.(pages[0], pages, pageParams[0], pageParams)\n    : undefined\n}\n\n/**\n * Checks if there is a next page.\n */\nexport function hasNextPage(\n  options: InfiniteQueryPageParamsOptions<any, any>,\n  data?: InfiniteData<unknown>,\n): boolean {\n  if (!data) return false\n  return getNextPageParam(options, data) != null\n}\n\n/**\n * Checks if there is a previous page.\n */\nexport function hasPreviousPage(\n  options: InfiniteQueryPageParamsOptions<any, any>,\n  data?: InfiniteData<unknown>,\n): boolean {\n  if (!data || !options.getPreviousPageParam) return false\n  return getPreviousPageParam(options, data) != null\n}\n", "import { notifyManager } from './notifyManager'\nimport { Removable } from './removable'\nimport { createRetryer } from './retryer'\nimport type {\n  DefaultError,\n  MutationFunctionContext,\n  MutationMeta,\n  MutationOptions,\n  MutationStatus,\n} from './types'\nimport type { MutationCache } from './mutationCache'\nimport type { MutationObserver } from './mutationObserver'\nimport type { Retryer } from './retryer'\nimport type { QueryClient } from './queryClient'\n\n// TYPES\n\ninterface MutationConfig<TData, TError, TVariables, TOnMutateResult> {\n  client: QueryClient\n  mutationId: number\n  mutationCache: MutationCache\n  options: MutationOptions<TData, TError, TVariables, TOnMutateResult>\n  state?: MutationState<TData, TError, TVariables, TOnMutateResult>\n}\n\nexport interface MutationState<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = unknown,\n  TOnMutateResult = unknown,\n> {\n  context: TOnMutateResult | undefined\n  data: TData | undefined\n  error: TError | null\n  failureCount: number\n  failureReason: TError | null\n  isPaused: boolean\n  status: MutationStatus\n  variables: TVariables | undefined\n  submittedAt: number\n}\n\ninterface FailedAction<TError> {\n  type: 'failed'\n  failureCount: number\n  error: TError | null\n}\n\ninterface PendingAction<TVariables, TOnMutateResult> {\n  type: 'pending'\n  isPaused: boolean\n  variables?: TVariables\n  context?: TOnMutateResult\n}\n\ninterface SuccessAction<TData> {\n  type: 'success'\n  data: TData\n}\n\ninterface ErrorAction<TError> {\n  type: 'error'\n  error: TError\n}\n\ninterface PauseAction {\n  type: 'pause'\n}\n\ninterface ContinueAction {\n  type: 'continue'\n}\n\nexport type Action<TData, TError, TVariables, TOnMutateResult> =\n  | ContinueAction\n  | ErrorAction<TError>\n  | FailedAction<TError>\n  | PendingAction<TVariables, TOnMutateResult>\n  | PauseAction\n  | SuccessAction<TData>\n\n// CLASS\n\nexport class Mutation<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = unknown,\n  TOnMutateResult = unknown,\n> extends Removable {\n  state: MutationState<TData, TError, TVariables, TOnMutateResult>\n  options!: MutationOptions<TData, TError, TVariables, TOnMutateResult>\n  readonly mutationId: number\n\n  #client: QueryClient\n  #observers: Array<\n    MutationObserver<TData, TError, TVariables, TOnMutateResult>\n  >\n  #mutationCache: MutationCache\n  #retryer?: Retryer<TData>\n\n  constructor(\n    config: MutationConfig<TData, TError, TVariables, TOnMutateResult>,\n  ) {\n    super()\n\n    this.#client = config.client\n    this.mutationId = config.mutationId\n    this.#mutationCache = config.mutationCache\n    this.#observers = []\n    this.state = config.state || getDefaultState()\n\n    this.setOptions(config.options)\n    this.scheduleGc()\n  }\n\n  setOptions(\n    options: MutationOptions<TData, TError, TVariables, TOnMutateResult>,\n  ): void {\n    this.options = options\n\n    this.updateGcTime(this.options.gcTime)\n  }\n\n  get meta(): MutationMeta | undefined {\n    return this.options.meta\n  }\n\n  addObserver(observer: MutationObserver<any, any, any, any>): void {\n    if (!this.#observers.includes(observer)) {\n      this.#observers.push(observer)\n\n      // Stop the mutation from being garbage collected\n      this.clearGcTimeout()\n\n      this.#mutationCache.notify({\n        type: 'observerAdded',\n        mutation: this,\n        observer,\n      })\n    }\n  }\n\n  removeObserver(observer: MutationObserver<any, any, any, any>): void {\n    this.#observers = this.#observers.filter((x) => x !== observer)\n\n    this.scheduleGc()\n\n    this.#mutationCache.notify({\n      type: 'observerRemoved',\n      mutation: this,\n      observer,\n    })\n  }\n\n  protected optionalRemove() {\n    if (!this.#observers.length) {\n      if (this.state.status === 'pending') {\n        this.scheduleGc()\n      } else {\n        this.#mutationCache.remove(this)\n      }\n    }\n  }\n\n  continue(): Promise<unknown> {\n    return (\n      this.#retryer?.continue() ??\n      // continuing a mutation assumes that variables are set, mutation must have been dehydrated before\n      this.execute(this.state.variables!)\n    )\n  }\n\n  async execute(variables: TVariables): Promise<TData> {\n    const onContinue = () => {\n      this.#dispatch({ type: 'continue' })\n    }\n\n    const mutationFnContext = {\n      client: this.#client,\n      meta: this.options.meta,\n      mutationKey: this.options.mutationKey,\n    } satisfies MutationFunctionContext\n\n    this.#retryer = createRetryer({\n      fn: () => {\n        if (!this.options.mutationFn) {\n          return Promise.reject(new Error('No mutationFn found'))\n        }\n\n        return this.options.mutationFn(variables, mutationFnContext)\n      },\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: 'failed', failureCount, error })\n      },\n      onPause: () => {\n        this.#dispatch({ type: 'pause' })\n      },\n      onContinue,\n      retry: this.options.retry ?? 0,\n      retryDelay: this.options.retryDelay,\n      networkMode: this.options.networkMode,\n      canRun: () => this.#mutationCache.canRun(this),\n    })\n\n    const restored = this.state.status === 'pending'\n    const isPaused = !this.#retryer.canStart()\n\n    try {\n      if (restored) {\n        // Dispatch continue action to unpause restored mutation\n        onContinue()\n      } else {\n        this.#dispatch({ type: 'pending', variables, isPaused })\n        // Notify cache callback\n        await this.#mutationCache.config.onMutate?.(\n          variables,\n          this as Mutation<unknown, unknown, unknown, unknown>,\n          mutationFnContext,\n        )\n        const context = await this.options.onMutate?.(\n          variables,\n          mutationFnContext,\n        )\n        if (context !== this.state.context) {\n          this.#dispatch({\n            type: 'pending',\n            context,\n            variables,\n            isPaused,\n          })\n        }\n      }\n      const data = await this.#retryer.start()\n\n      // Notify cache callback\n      await this.#mutationCache.config.onSuccess?.(\n        data,\n        variables,\n        this.state.context,\n        this as Mutation<unknown, unknown, unknown, unknown>,\n        mutationFnContext,\n      )\n\n      await this.options.onSuccess?.(\n        data,\n        variables,\n        this.state.context!,\n        mutationFnContext,\n      )\n\n      // Notify cache callback\n      await this.#mutationCache.config.onSettled?.(\n        data,\n        null,\n        this.state.variables,\n        this.state.context,\n        this as Mutation<unknown, unknown, unknown, unknown>,\n        mutationFnContext,\n      )\n\n      await this.options.onSettled?.(\n        data,\n        null,\n        variables,\n        this.state.context,\n        mutationFnContext,\n      )\n\n      this.#dispatch({ type: 'success', data })\n      return data\n    } catch (error) {\n      try {\n        // Notify cache callback\n        await this.#mutationCache.config.onError?.(\n          error as any,\n          variables,\n          this.state.context,\n          this as Mutation<unknown, unknown, unknown, unknown>,\n          mutationFnContext,\n        )\n\n        await this.options.onError?.(\n          error as TError,\n          variables,\n          this.state.context,\n          mutationFnContext,\n        )\n\n        // Notify cache callback\n        await this.#mutationCache.config.onSettled?.(\n          undefined,\n          error as any,\n          this.state.variables,\n          this.state.context,\n          this as Mutation<unknown, unknown, unknown, unknown>,\n          mutationFnContext,\n        )\n\n        await this.options.onSettled?.(\n          undefined,\n          error as TError,\n          variables,\n          this.state.context,\n          mutationFnContext,\n        )\n        throw error\n      } finally {\n        this.#dispatch({ type: 'error', error: error as TError })\n      }\n    } finally {\n      this.#mutationCache.runNext(this)\n    }\n  }\n\n  #dispatch(action: Action<TData, TError, TVariables, TOnMutateResult>): void {\n    const reducer = (\n      state: MutationState<TData, TError, TVariables, TOnMutateResult>,\n    ): MutationState<TData, TError, TVariables, TOnMutateResult> => {\n      switch (action.type) {\n        case 'failed':\n          return {\n            ...state,\n            failureCount: action.failureCount,\n            failureReason: action.error,\n          }\n        case 'pause':\n          return {\n            ...state,\n            isPaused: true,\n          }\n        case 'continue':\n          return {\n            ...state,\n            isPaused: false,\n          }\n        case 'pending':\n          return {\n            ...state,\n            context: action.context,\n            data: undefined,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            isPaused: action.isPaused,\n            status: 'pending',\n            variables: action.variables,\n            submittedAt: Date.now(),\n          }\n        case 'success':\n          return {\n            ...state,\n            data: action.data,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            status: 'success',\n            isPaused: false,\n          }\n        case 'error':\n          return {\n            ...state,\n            data: undefined,\n            error: action.error,\n            failureCount: state.failureCount + 1,\n            failureReason: action.error,\n            isPaused: false,\n            status: 'error',\n          }\n      }\n    }\n    this.state = reducer(this.state)\n\n    notifyManager.batch(() => {\n      this.#observers.forEach((observer) => {\n        observer.onMutationUpdate(action)\n      })\n      this.#mutationCache.notify({\n        mutation: this,\n        type: 'updated',\n        action,\n      })\n    })\n  }\n}\n\nexport function getDefaultState<\n  TData,\n  TError,\n  TVariables,\n  TOnMutateResult,\n>(): MutationState<TData, TError, TVariables, TOnMutateResult> {\n  return {\n    context: undefined,\n    data: undefined,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: 'idle',\n    variables: undefined,\n    submittedAt: 0,\n  }\n}\n", "import { notifyManager } from './notifyManager'\nimport { Mutation } from './mutation'\nimport { matchMutation, noop } from './utils'\nimport { Subscribable } from './subscribable'\nimport type { MutationObserver } from './mutationObserver'\nimport type {\n  DefaultError,\n  MutationFunctionContext,\n  MutationOptions,\n  NotifyEvent,\n} from './types'\nimport type { QueryClient } from './queryClient'\nimport type { Action, MutationState } from './mutation'\nimport type { MutationFilters } from './utils'\n\n// TYPES\n\ninterface MutationCacheConfig {\n  onError?: (\n    error: DefaultError,\n    variables: unknown,\n    onMutateResult: unknown,\n    mutation: Mutation<unknown, unknown, unknown>,\n    context: MutationFunctionContext,\n  ) => Promise<unknown> | unknown\n  onSuccess?: (\n    data: unknown,\n    variables: unknown,\n    onMutateResult: unknown,\n    mutation: Mutation<unknown, unknown, unknown>,\n    context: MutationFunctionContext,\n  ) => Promise<unknown> | unknown\n  onMutate?: (\n    variables: unknown,\n    mutation: Mutation<unknown, unknown, unknown>,\n    context: MutationFunctionContext,\n  ) => Promise<unknown> | unknown\n  onSettled?: (\n    data: unknown | undefined,\n    error: DefaultError | null,\n    variables: unknown,\n    onMutateResult: unknown,\n    mutation: Mutation<unknown, unknown, unknown>,\n    context: MutationFunctionContext,\n  ) => Promise<unknown> | unknown\n}\n\ninterface NotifyEventMutationAdded extends NotifyEvent {\n  type: 'added'\n  mutation: Mutation<any, any, any, any>\n}\ninterface NotifyEventMutationRemoved extends NotifyEvent {\n  type: 'removed'\n  mutation: Mutation<any, any, any, any>\n}\n\ninterface NotifyEventMutationObserverAdded extends NotifyEvent {\n  type: 'observerAdded'\n  mutation: Mutation<any, any, any, any>\n  observer: MutationObserver<any, any, any>\n}\n\ninterface NotifyEventMutationObserverRemoved extends NotifyEvent {\n  type: 'observerRemoved'\n  mutation: Mutation<any, any, any, any>\n  observer: MutationObserver<any, any, any>\n}\n\ninterface NotifyEventMutationObserverOptionsUpdated extends NotifyEvent {\n  type: 'observerOptionsUpdated'\n  mutation?: Mutation<any, any, any, any>\n  observer: MutationObserver<any, any, any, any>\n}\n\ninterface NotifyEventMutationUpdated extends NotifyEvent {\n  type: 'updated'\n  mutation: Mutation<any, any, any, any>\n  action: Action<any, any, any, any>\n}\n\nexport type MutationCacheNotifyEvent =\n  | NotifyEventMutationAdded\n  | NotifyEventMutationRemoved\n  | NotifyEventMutationObserverAdded\n  | NotifyEventMutationObserverRemoved\n  | NotifyEventMutationObserverOptionsUpdated\n  | NotifyEventMutationUpdated\n\ntype MutationCacheListener = (event: MutationCacheNotifyEvent) => void\n\n// CLASS\n\nexport class MutationCache extends Subscribable<MutationCacheListener> {\n  #mutations: Set<Mutation<any, any, any, any>>\n  #scopes: Map<string, Array<Mutation<any, any, any, any>>>\n  #mutationId: number\n\n  constructor(public config: MutationCacheConfig = {}) {\n    super()\n    this.#mutations = new Set()\n    this.#scopes = new Map()\n    this.#mutationId = 0\n  }\n\n  build<TData, TError, TVariables, TOnMutateResult>(\n    client: QueryClient,\n    options: MutationOptions<TData, TError, TVariables, TOnMutateResult>,\n    state?: MutationState<TData, TError, TVariables, TOnMutateResult>,\n  ): Mutation<TData, TError, TVariables, TOnMutateResult> {\n    const mutation = new Mutation({\n      client,\n      mutationCache: this,\n      mutationId: ++this.#mutationId,\n      options: client.defaultMutationOptions(options),\n      state,\n    })\n\n    this.add(mutation)\n\n    return mutation\n  }\n\n  add(mutation: Mutation<any, any, any, any>): void {\n    this.#mutations.add(mutation)\n    const scope = scopeFor(mutation)\n    if (typeof scope === 'string') {\n      const scopedMutations = this.#scopes.get(scope)\n      if (scopedMutations) {\n        scopedMutations.push(mutation)\n      } else {\n        this.#scopes.set(scope, [mutation])\n      }\n    }\n    this.notify({ type: 'added', mutation })\n  }\n\n  remove(mutation: Mutation<any, any, any, any>): void {\n    if (this.#mutations.delete(mutation)) {\n      const scope = scopeFor(mutation)\n      if (typeof scope === 'string') {\n        const scopedMutations = this.#scopes.get(scope)\n        if (scopedMutations) {\n          if (scopedMutations.length > 1) {\n            const index = scopedMutations.indexOf(mutation)\n            if (index !== -1) {\n              scopedMutations.splice(index, 1)\n            }\n          } else if (scopedMutations[0] === mutation) {\n            this.#scopes.delete(scope)\n          }\n        }\n      }\n    }\n\n    // Currently we notify the removal even if the mutation was already removed.\n    // Consider making this an error or not notifying of the removal depending on the desired semantics.\n    this.notify({ type: 'removed', mutation })\n  }\n\n  canRun(mutation: Mutation<any, any, any, any>): boolean {\n    const scope = scopeFor(mutation)\n    if (typeof scope === 'string') {\n      const mutationsWithSameScope = this.#scopes.get(scope)\n      const firstPendingMutation = mutationsWithSameScope?.find(\n        (m) => m.state.status === 'pending',\n      )\n      // we can run if there is no current pending mutation (start use-case)\n      // or if WE are the first pending mutation (continue use-case)\n      return !firstPendingMutation || firstPendingMutation === mutation\n    } else {\n      // For unscoped mutations there are never any pending mutations in front of the\n      // current mutation\n      return true\n    }\n  }\n\n  runNext(mutation: Mutation<any, any, any, any>): Promise<unknown> {\n    const scope = scopeFor(mutation)\n    if (typeof scope === 'string') {\n      const foundMutation = this.#scopes\n        .get(scope)\n        ?.find((m) => m !== mutation && m.state.isPaused)\n\n      return foundMutation?.continue() ?? Promise.resolve()\n    } else {\n      return Promise.resolve()\n    }\n  }\n\n  clear(): void {\n    notifyManager.batch(() => {\n      this.#mutations.forEach((mutation) => {\n        this.notify({ type: 'removed', mutation })\n      })\n      this.#mutations.clear()\n      this.#scopes.clear()\n    })\n  }\n\n  getAll(): Array<Mutation> {\n    return Array.from(this.#mutations)\n  }\n\n  find<\n    TData = unknown,\n    TError = DefaultError,\n    TVariables = any,\n    TOnMutateResult = unknown,\n  >(\n    filters: MutationFilters,\n  ): Mutation<TData, TError, TVariables, TOnMutateResult> | undefined {\n    const defaultedFilters = { exact: true, ...filters }\n\n    return this.getAll().find((mutation) =>\n      matchMutation(defaultedFilters, mutation),\n    ) as Mutation<TData, TError, TVariables, TOnMutateResult> | undefined\n  }\n\n  findAll(filters: MutationFilters = {}): Array<Mutation> {\n    return this.getAll().filter((mutation) => matchMutation(filters, mutation))\n  }\n\n  notify(event: MutationCacheNotifyEvent) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event)\n      })\n    })\n  }\n\n  resumePausedMutations(): Promise<unknown> {\n    const pausedMutations = this.getAll().filter((x) => x.state.isPaused)\n\n    return notifyManager.batch(() =>\n      Promise.all(\n        pausedMutations.map((mutation) => mutation.continue().catch(noop)),\n      ),\n    )\n  }\n}\n\nfunction scopeFor(mutation: Mutation<any, any, any, any>) {\n  return mutation.options.scope?.id\n}\n", "import { hashQueryKeyByOptions, matchQuery } from './utils'\nimport { Query } from './query'\nimport { notifyManager } from './notifyManager'\nimport { Subscribable } from './subscribable'\nimport type { QueryFilters } from './utils'\nimport type { Action, QueryState } from './query'\nimport type {\n  DefaultError,\n  NotifyEvent,\n  QueryKey,\n  QueryOptions,\n  WithRequired,\n} from './types'\nimport type { QueryClient } from './queryClient'\nimport type { QueryObserver } from './queryObserver'\n\n// TYPES\n\ninterface QueryCacheConfig {\n  onError?: (\n    error: DefaultError,\n    query: Query<unknown, unknown, unknown>,\n  ) => void\n  onSuccess?: (data: unknown, query: Query<unknown, unknown, unknown>) => void\n  onSettled?: (\n    data: unknown | undefined,\n    error: DefaultError | null,\n    query: Query<unknown, unknown, unknown>,\n  ) => void\n}\n\ninterface NotifyEventQueryAdded extends NotifyEvent {\n  type: 'added'\n  query: Query<any, any, any, any>\n}\n\ninterface NotifyEventQueryRemoved extends NotifyEvent {\n  type: 'removed'\n  query: Query<any, any, any, any>\n}\n\ninterface NotifyEventQueryUpdated extends NotifyEvent {\n  type: 'updated'\n  query: Query<any, any, any, any>\n  action: Action<any, any>\n}\n\ninterface NotifyEventQueryObserverAdded extends NotifyEvent {\n  type: 'observerAdded'\n  query: Query<any, any, any, any>\n  observer: QueryObserver<any, any, any, any, any>\n}\n\ninterface NotifyEventQueryObserverRemoved extends NotifyEvent {\n  type: 'observerRemoved'\n  query: Query<any, any, any, any>\n  observer: QueryObserver<any, any, any, any, any>\n}\n\ninterface NotifyEventQueryObserverResultsUpdated extends NotifyEvent {\n  type: 'observerResultsUpdated'\n  query: Query<any, any, any, any>\n}\n\ninterface NotifyEventQueryObserverOptionsUpdated extends NotifyEvent {\n  type: 'observerOptionsUpdated'\n  query: Query<any, any, any, any>\n  observer: QueryObserver<any, any, any, any, any>\n}\n\nexport type QueryCacheNotifyEvent =\n  | NotifyEventQueryAdded\n  | NotifyEventQueryRemoved\n  | NotifyEventQueryUpdated\n  | NotifyEventQueryObserverAdded\n  | NotifyEventQueryObserverRemoved\n  | NotifyEventQueryObserverResultsUpdated\n  | NotifyEventQueryObserverOptionsUpdated\n\ntype QueryCacheListener = (event: QueryCacheNotifyEvent) => void\n\nexport interface QueryStore {\n  has: (queryHash: string) => boolean\n  set: (queryHash: string, query: Query) => void\n  get: (queryHash: string) => Query | undefined\n  delete: (queryHash: string) => void\n  values: () => IterableIterator<Query>\n}\n\n// CLASS\n\nexport class QueryCache extends Subscribable<QueryCacheListener> {\n  #queries: QueryStore\n\n  constructor(public config: QueryCacheConfig = {}) {\n    super()\n    this.#queries = new Map<string, Query>()\n  }\n\n  build<\n    TQueryFnData = unknown,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    client: QueryClient,\n    options: WithRequired<\n      QueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n      'queryKey'\n    >,\n    state?: QueryState<TData, TError>,\n  ): Query<TQueryFnData, TError, TData, TQueryKey> {\n    const queryKey = options.queryKey\n    const queryHash =\n      options.queryHash ?? hashQueryKeyByOptions(queryKey, options)\n    let query = this.get<TQueryFnData, TError, TData, TQueryKey>(queryHash)\n\n    if (!query) {\n      query = new Query({\n        client,\n        queryKey,\n        queryHash,\n        options: client.defaultQueryOptions(options),\n        state,\n        defaultOptions: client.getQueryDefaults(queryKey),\n      })\n      this.add(query)\n    }\n\n    return query\n  }\n\n  add(query: Query<any, any, any, any>): void {\n    if (!this.#queries.has(query.queryHash)) {\n      this.#queries.set(query.queryHash, query)\n\n      this.notify({\n        type: 'added',\n        query,\n      })\n    }\n  }\n\n  remove(query: Query<any, any, any, any>): void {\n    const queryInMap = this.#queries.get(query.queryHash)\n\n    if (queryInMap) {\n      query.destroy()\n\n      if (queryInMap === query) {\n        this.#queries.delete(query.queryHash)\n      }\n\n      this.notify({ type: 'removed', query })\n    }\n  }\n\n  clear(): void {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        this.remove(query)\n      })\n    })\n  }\n\n  get<\n    TQueryFnData = unknown,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    queryHash: string,\n  ): Query<TQueryFnData, TError, TData, TQueryKey> | undefined {\n    return this.#queries.get(queryHash) as\n      | Query<TQueryFnData, TError, TData, TQueryKey>\n      | undefined\n  }\n\n  getAll(): Array<Query> {\n    return [...this.#queries.values()]\n  }\n\n  find<TQueryFnData = unknown, TError = DefaultError, TData = TQueryFnData>(\n    filters: WithRequired<QueryFilters, 'queryKey'>,\n  ): Query<TQueryFnData, TError, TData> | undefined {\n    const defaultedFilters = { exact: true, ...filters }\n\n    return this.getAll().find((query) =>\n      matchQuery(defaultedFilters, query),\n    ) as Query<TQueryFnData, TError, TData> | undefined\n  }\n\n  findAll(filters: QueryFilters<any> = {}): Array<Query> {\n    const queries = this.getAll()\n    return Object.keys(filters).length > 0\n      ? queries.filter((query) => matchQuery(filters, query))\n      : queries\n  }\n\n  notify(event: QueryCacheNotifyEvent): void {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event)\n      })\n    })\n  }\n\n  onFocus(): void {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onFocus()\n      })\n    })\n  }\n\n  onOnline(): void {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onOnline()\n      })\n    })\n  }\n}\n", "import {\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  noop,\n  partialMatchKey,\n  resolveStaleTime,\n  skipToken,\n} from './utils'\nimport { QueryCache } from './queryCache'\nimport { MutationCache } from './mutationCache'\nimport { focusManager } from './focusManager'\nimport { onlineManager } from './onlineManager'\nimport { notifyManager } from './notifyManager'\nimport { infiniteQueryBehavior } from './infiniteQueryBehavior'\nimport type {\n  CancelOptions,\n  DefaultError,\n  DefaultOptions,\n  DefaultedQueryObserverOptions,\n  EnsureInfiniteQueryDataOptions,\n  EnsureQueryDataOptions,\n  FetchInfiniteQueryOptions,\n  FetchQueryOptions,\n  InferDataFromTag,\n  InferErrorFromTag,\n  InfiniteData,\n  InvalidateOptions,\n  InvalidateQueryFilters,\n  MutationKey,\n  MutationObserverOptions,\n  MutationOptions,\n  NoInfer,\n  OmitKeyof,\n  QueryClientConfig,\n  QueryKey,\n  QueryObserverOptions,\n  QueryOptions,\n  RefetchOptions,\n  RefetchQueryFilters,\n  ResetOptions,\n  SetDataOptions,\n} from './types'\nimport type { QueryState } from './query'\nimport type { MutationFilters, QueryFilters, Updater } from './utils'\n\n// TYPES\n\ninterface QueryDefaults {\n  queryKey: QueryKey\n  defaultOptions: OmitKeyof<QueryOptions<any, any, any>, 'queryKey'>\n}\n\ninterface MutationDefaults {\n  mutationKey: MutationKey\n  defaultOptions: MutationOptions<any, any, any, any>\n}\n\n// CLASS\n\nexport class QueryClient {\n  #queryCache: QueryCache\n  #mutationCache: MutationCache\n  #defaultOptions: DefaultOptions\n  #queryDefaults: Map<string, QueryDefaults>\n  #mutationDefaults: Map<string, MutationDefaults>\n  #mountCount: number\n  #unsubscribeFocus?: () => void\n  #unsubscribeOnline?: () => void\n\n  constructor(config: QueryClientConfig = {}) {\n    this.#queryCache = config.queryCache || new QueryCache()\n    this.#mutationCache = config.mutationCache || new MutationCache()\n    this.#defaultOptions = config.defaultOptions || {}\n    this.#queryDefaults = new Map()\n    this.#mutationDefaults = new Map()\n    this.#mountCount = 0\n  }\n\n  mount(): void {\n    this.#mountCount++\n    if (this.#mountCount !== 1) return\n\n    this.#unsubscribeFocus = focusManager.subscribe(async (focused) => {\n      if (focused) {\n        await this.resumePausedMutations()\n        this.#queryCache.onFocus()\n      }\n    })\n    this.#unsubscribeOnline = onlineManager.subscribe(async (online) => {\n      if (online) {\n        await this.resumePausedMutations()\n        this.#queryCache.onOnline()\n      }\n    })\n  }\n\n  unmount(): void {\n    this.#mountCount--\n    if (this.#mountCount !== 0) return\n\n    this.#unsubscribeFocus?.()\n    this.#unsubscribeFocus = undefined\n\n    this.#unsubscribeOnline?.()\n    this.#unsubscribeOnline = undefined\n  }\n\n  isFetching<TQueryFilters extends QueryFilters<any> = QueryFilters>(\n    filters?: TQueryFilters,\n  ): number {\n    return this.#queryCache.findAll({ ...filters, fetchStatus: 'fetching' })\n      .length\n  }\n\n  isMutating<\n    TMutationFilters extends MutationFilters<any, any> = MutationFilters,\n  >(filters?: TMutationFilters): number {\n    return this.#mutationCache.findAll({ ...filters, status: 'pending' }).length\n  }\n\n  /**\n   * Imperative (non-reactive) way to retrieve data for a QueryKey.\n   * Should only be used in callbacks or functions where reading the latest data is necessary, e.g. for optimistic updates.\n   *\n   * Hint: Do not use this function inside a component, because it won't receive updates.\n   * Use `useQuery` to create a `QueryObserver` that subscribes to changes.\n   */\n  getQueryData<\n    TQueryFnData = unknown,\n    TTaggedQueryKey extends QueryKey = QueryKey,\n    TInferredQueryFnData = InferDataFromTag<TQueryFnData, TTaggedQueryKey>,\n  >(queryKey: TTaggedQueryKey): TInferredQueryFnData | undefined {\n    const options = this.defaultQueryOptions({ queryKey })\n\n    return this.#queryCache.get<TInferredQueryFnData>(options.queryHash)?.state\n      .data\n  }\n\n  ensureQueryData<\n    TQueryFnData,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    options: EnsureQueryDataOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<TData> {\n    const defaultedOptions = this.defaultQueryOptions(options)\n    const query = this.#queryCache.build(this, defaultedOptions)\n    const cachedData = query.state.data\n\n    if (cachedData === undefined) {\n      return this.fetchQuery(options)\n    }\n\n    if (\n      options.revalidateIfStale &&\n      query.isStaleByTime(resolveStaleTime(defaultedOptions.staleTime, query))\n    ) {\n      void this.prefetchQuery(defaultedOptions)\n    }\n\n    return Promise.resolve(cachedData)\n  }\n\n  getQueriesData<\n    TQueryFnData = unknown,\n    TQueryFilters extends QueryFilters<any> = QueryFilters,\n  >(filters: TQueryFilters): Array<[QueryKey, TQueryFnData | undefined]> {\n    return this.#queryCache.findAll(filters).map(({ queryKey, state }) => {\n      const data = state.data as TQueryFnData | undefined\n      return [queryKey, data]\n    })\n  }\n\n  setQueryData<\n    TQueryFnData = unknown,\n    TTaggedQueryKey extends QueryKey = QueryKey,\n    TInferredQueryFnData = InferDataFromTag<TQueryFnData, TTaggedQueryKey>,\n  >(\n    queryKey: TTaggedQueryKey,\n    updater: Updater<\n      NoInfer<TInferredQueryFnData> | undefined,\n      NoInfer<TInferredQueryFnData> | undefined\n    >,\n    options?: SetDataOptions,\n  ): NoInfer<TInferredQueryFnData> | undefined {\n    const defaultedOptions = this.defaultQueryOptions<\n      any,\n      any,\n      unknown,\n      any,\n      QueryKey\n    >({ queryKey })\n\n    const query = this.#queryCache.get<TInferredQueryFnData>(\n      defaultedOptions.queryHash,\n    )\n    const prevData = query?.state.data\n    const data = functionalUpdate(updater, prevData)\n\n    if (data === undefined) {\n      return undefined\n    }\n\n    return this.#queryCache\n      .build(this, defaultedOptions)\n      .setData(data, { ...options, manual: true })\n  }\n\n  setQueriesData<\n    TQueryFnData,\n    TQueryFilters extends QueryFilters<any> = QueryFilters,\n  >(\n    filters: TQueryFilters,\n    updater: Updater<\n      NoInfer<TQueryFnData> | undefined,\n      NoInfer<TQueryFnData> | undefined\n    >,\n    options?: SetDataOptions,\n  ): Array<[QueryKey, TQueryFnData | undefined]> {\n    return notifyManager.batch(() =>\n      this.#queryCache\n        .findAll(filters)\n        .map(({ queryKey }) => [\n          queryKey,\n          this.setQueryData<TQueryFnData>(queryKey, updater, options),\n        ]),\n    )\n  }\n\n  getQueryState<\n    TQueryFnData = unknown,\n    TError = DefaultError,\n    TTaggedQueryKey extends QueryKey = QueryKey,\n    TInferredQueryFnData = InferDataFromTag<TQueryFnData, TTaggedQueryKey>,\n    TInferredError = InferErrorFromTag<TError, TTaggedQueryKey>,\n  >(\n    queryKey: TTaggedQueryKey,\n  ): QueryState<TInferredQueryFnData, TInferredError> | undefined {\n    const options = this.defaultQueryOptions({ queryKey })\n    return this.#queryCache.get<TInferredQueryFnData, TInferredError>(\n      options.queryHash,\n    )?.state\n  }\n\n  removeQueries<TTaggedQueryKey extends QueryKey = QueryKey>(\n    filters?: QueryFilters<TTaggedQueryKey>,\n  ): void {\n    const queryCache = this.#queryCache\n    notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        queryCache.remove(query)\n      })\n    })\n  }\n\n  resetQueries<TTaggedQueryKey extends QueryKey = QueryKey>(\n    filters?: QueryFilters<TTaggedQueryKey>,\n    options?: ResetOptions,\n  ): Promise<void> {\n    const queryCache = this.#queryCache\n\n    return notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        query.reset()\n      })\n      return this.refetchQueries(\n        {\n          type: 'active',\n          ...filters,\n        },\n        options,\n      )\n    })\n  }\n\n  cancelQueries<TTaggedQueryKey extends QueryKey = QueryKey>(\n    filters?: QueryFilters<TTaggedQueryKey>,\n    cancelOptions: CancelOptions = {},\n  ): Promise<void> {\n    const defaultedCancelOptions = { revert: true, ...cancelOptions }\n\n    const promises = notifyManager.batch(() =>\n      this.#queryCache\n        .findAll(filters)\n        .map((query) => query.cancel(defaultedCancelOptions)),\n    )\n\n    return Promise.all(promises).then(noop).catch(noop)\n  }\n\n  invalidateQueries<TTaggedQueryKey extends QueryKey = QueryKey>(\n    filters?: InvalidateQueryFilters<TTaggedQueryKey>,\n    options: InvalidateOptions = {},\n  ): Promise<void> {\n    return notifyManager.batch(() => {\n      this.#queryCache.findAll(filters).forEach((query) => {\n        query.invalidate()\n      })\n\n      if (filters?.refetchType === 'none') {\n        return Promise.resolve()\n      }\n      return this.refetchQueries(\n        {\n          ...filters,\n          type: filters?.refetchType ?? filters?.type ?? 'active',\n        },\n        options,\n      )\n    })\n  }\n\n  refetchQueries<TTaggedQueryKey extends QueryKey = QueryKey>(\n    filters?: RefetchQueryFilters<TTaggedQueryKey>,\n    options: RefetchOptions = {},\n  ): Promise<void> {\n    const fetchOptions = {\n      ...options,\n      cancelRefetch: options.cancelRefetch ?? true,\n    }\n    const promises = notifyManager.batch(() =>\n      this.#queryCache\n        .findAll(filters)\n        .filter((query) => !query.isDisabled() && !query.isStatic())\n        .map((query) => {\n          let promise = query.fetch(undefined, fetchOptions)\n          if (!fetchOptions.throwOnError) {\n            promise = promise.catch(noop)\n          }\n          return query.state.fetchStatus === 'paused'\n            ? Promise.resolve()\n            : promise\n        }),\n    )\n\n    return Promise.all(promises).then(noop)\n  }\n\n  fetchQuery<\n    TQueryFnData,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n    TPageParam = never,\n  >(\n    options: FetchQueryOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryKey,\n      TPageParam\n    >,\n  ): Promise<TData> {\n    const defaultedOptions = this.defaultQueryOptions(options)\n\n    // https://github.com/tannerlinsley/react-query/issues/652\n    if (defaultedOptions.retry === undefined) {\n      defaultedOptions.retry = false\n    }\n\n    const query = this.#queryCache.build(this, defaultedOptions)\n\n    return query.isStaleByTime(\n      resolveStaleTime(defaultedOptions.staleTime, query),\n    )\n      ? query.fetch(defaultedOptions)\n      : Promise.resolve(query.state.data as TData)\n  }\n\n  prefetchQuery<\n    TQueryFnData = unknown,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    options: FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<void> {\n    return this.fetchQuery(options).then(noop).catch(noop)\n  }\n\n  fetchInfiniteQuery<\n    TQueryFnData,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n    TPageParam = unknown,\n  >(\n    options: FetchInfiniteQueryOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryKey,\n      TPageParam\n    >,\n  ): Promise<InfiniteData<TData, TPageParam>> {\n    options.behavior = infiniteQueryBehavior<\n      TQueryFnData,\n      TError,\n      TData,\n      TPageParam\n    >(options.pages)\n    return this.fetchQuery(options as any)\n  }\n\n  prefetchInfiniteQuery<\n    TQueryFnData,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n    TPageParam = unknown,\n  >(\n    options: FetchInfiniteQueryOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryKey,\n      TPageParam\n    >,\n  ): Promise<void> {\n    return this.fetchInfiniteQuery(options).then(noop).catch(noop)\n  }\n\n  ensureInfiniteQueryData<\n    TQueryFnData,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n    TPageParam = unknown,\n  >(\n    options: EnsureInfiniteQueryDataOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryKey,\n      TPageParam\n    >,\n  ): Promise<InfiniteData<TData, TPageParam>> {\n    options.behavior = infiniteQueryBehavior<\n      TQueryFnData,\n      TError,\n      TData,\n      TPageParam\n    >(options.pages)\n\n    return this.ensureQueryData(options as any)\n  }\n\n  resumePausedMutations(): Promise<unknown> {\n    if (onlineManager.isOnline()) {\n      return this.#mutationCache.resumePausedMutations()\n    }\n    return Promise.resolve()\n  }\n\n  getQueryCache(): QueryCache {\n    return this.#queryCache\n  }\n\n  getMutationCache(): MutationCache {\n    return this.#mutationCache\n  }\n\n  getDefaultOptions(): DefaultOptions {\n    return this.#defaultOptions\n  }\n\n  setDefaultOptions(options: DefaultOptions): void {\n    this.#defaultOptions = options\n  }\n\n  setQueryDefaults<\n    TQueryFnData = unknown,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryData = TQueryFnData,\n  >(\n    queryKey: QueryKey,\n    options: Partial<\n      OmitKeyof<\n        QueryObserverOptions<TQueryFnData, TError, TData, TQueryData>,\n        'queryKey'\n      >\n    >,\n  ): void {\n    this.#queryDefaults.set(hashKey(queryKey), {\n      queryKey,\n      defaultOptions: options,\n    })\n  }\n\n  getQueryDefaults(\n    queryKey: QueryKey,\n  ): OmitKeyof<QueryObserverOptions<any, any, any, any, any>, 'queryKey'> {\n    const defaults = [...this.#queryDefaults.values()]\n\n    const result: OmitKeyof<\n      QueryObserverOptions<any, any, any, any, any>,\n      'queryKey'\n    > = {}\n\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(queryKey, queryDefault.queryKey)) {\n        Object.assign(result, queryDefault.defaultOptions)\n      }\n    })\n    return result\n  }\n\n  setMutationDefaults<\n    TData = unknown,\n    TError = DefaultError,\n    TVariables = void,\n    TOnMutateResult = unknown,\n  >(\n    mutationKey: MutationKey,\n    options: OmitKeyof<\n      MutationObserverOptions<TData, TError, TVariables, TOnMutateResult>,\n      'mutationKey'\n    >,\n  ): void {\n    this.#mutationDefaults.set(hashKey(mutationKey), {\n      mutationKey,\n      defaultOptions: options,\n    })\n  }\n\n  getMutationDefaults(\n    mutationKey: MutationKey,\n  ): OmitKeyof<MutationObserverOptions<any, any, any, any>, 'mutationKey'> {\n    const defaults = [...this.#mutationDefaults.values()]\n\n    const result: OmitKeyof<\n      MutationObserverOptions<any, any, any, any>,\n      'mutationKey'\n    > = {}\n\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(mutationKey, queryDefault.mutationKey)) {\n        Object.assign(result, queryDefault.defaultOptions)\n      }\n    })\n\n    return result\n  }\n\n  defaultQueryOptions<\n    TQueryFnData = unknown,\n    TError = DefaultError,\n    TData = TQueryFnData,\n    TQueryData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n    TPageParam = never,\n  >(\n    options:\n      | QueryObserverOptions<\n          TQueryFnData,\n          TError,\n          TData,\n          TQueryData,\n          TQueryKey,\n          TPageParam\n        >\n      | DefaultedQueryObserverOptions<\n          TQueryFnData,\n          TError,\n          TData,\n          TQueryData,\n          TQueryKey\n        >,\n  ): DefaultedQueryObserverOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  > {\n    if (options._defaulted) {\n      return options as DefaultedQueryObserverOptions<\n        TQueryFnData,\n        TError,\n        TData,\n        TQueryData,\n        TQueryKey\n      >\n    }\n\n    const defaultedOptions = {\n      ...this.#defaultOptions.queries,\n      ...this.getQueryDefaults(options.queryKey),\n      ...options,\n      _defaulted: true,\n    }\n\n    if (!defaultedOptions.queryHash) {\n      defaultedOptions.queryHash = hashQueryKeyByOptions(\n        defaultedOptions.queryKey,\n        defaultedOptions,\n      )\n    }\n\n    // dependent default values\n    if (defaultedOptions.refetchOnReconnect === undefined) {\n      defaultedOptions.refetchOnReconnect =\n        defaultedOptions.networkMode !== 'always'\n    }\n    if (defaultedOptions.throwOnError === undefined) {\n      defaultedOptions.throwOnError = !!defaultedOptions.suspense\n    }\n\n    if (!defaultedOptions.networkMode && defaultedOptions.persister) {\n      defaultedOptions.networkMode = 'offlineFirst'\n    }\n\n    if (defaultedOptions.queryFn === skipToken) {\n      defaultedOptions.enabled = false\n    }\n\n    return defaultedOptions as DefaultedQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >\n  }\n\n  defaultMutationOptions<T extends MutationOptions<any, any, any, any>>(\n    options?: T,\n  ): T {\n    if (options?._defaulted) {\n      return options\n    }\n    return {\n      ...this.#defaultOptions.mutations,\n      ...(options?.mutationKey &&\n        this.getMutationDefaults(options.mutationKey)),\n      ...options,\n      _defaulted: true,\n    } as T\n  }\n\n  clear(): void {\n    this.#queryCache.clear()\n    this.#mutationCache.clear()\n  }\n}\n", "'use client'\nimport * as React from 'react'\n\nimport type { QueryClient } from '@tanstack/query-core'\n\nexport const QueryClientContext = React.createContext<QueryClient | undefined>(\n  undefined,\n)\n\nexport const useQueryClient = (queryClient?: QueryClient) => {\n  const client = React.useContext(QueryClientContext)\n\n  if (queryClient) {\n    return queryClient\n  }\n\n  if (!client) {\n    throw new Error('No QueryClient set, use QueryClientProvider to set one')\n  }\n\n  return client\n}\n\nexport type QueryClientProviderProps = {\n  client: QueryClient\n  children?: React.ReactNode\n}\n\nexport const QueryClientProvider = ({\n  client,\n  children,\n}: QueryClientProviderProps): React.JSX.Element => {\n  React.useEffect(() => {\n    client.mount()\n    return () => {\n      client.unmount()\n    }\n  }, [client])\n\n  return (\n    <QueryClientContext.Provider value={client}>\n      {children}\n    </QueryClientContext.Provider>\n  )\n}\n", "'use client'\nimport * as React from 'react'\n\nconst IsRestoringContext = React.createContext(false)\n\nexport const useIsRestoring = () => React.useContext(IsRestoringContext)\nexport const IsRestoringProvider = IsRestoringContext.Provider\n", "'use client'\nimport * as React from 'react'\n\n// CONTEXT\nexport type QueryErrorResetFunction = () => void\nexport type QueryErrorIsResetFunction = () => boolean\nexport type QueryErrorClearResetFunction = () => void\n\nexport interface QueryErrorResetBoundaryValue {\n  clearReset: QueryErrorClearResetFunction\n  isReset: QueryErrorIsResetFunction\n  reset: QueryErrorResetFunction\n}\n\nfunction createValue(): QueryErrorResetBoundaryValue {\n  let isReset = false\n  return {\n    clearReset: () => {\n      isReset = false\n    },\n    reset: () => {\n      isReset = true\n    },\n    isReset: () => {\n      return isReset\n    },\n  }\n}\n\nconst QueryErrorResetBoundaryContext = React.createContext(createValue())\n\n// HOOK\n\nexport const useQueryErrorResetBoundary = () =>\n  React.useContext(QueryErrorResetBoundaryContext)\n\n// COMPONENT\n\nexport type QueryErrorResetBoundaryFunction = (\n  value: QueryErrorResetBoundaryValue,\n) => React.ReactNode\n\nexport interface QueryErrorResetBoundaryProps {\n  children: QueryErrorResetBoundaryFunction | React.ReactNode\n}\n\nexport const QueryErrorResetBoundary = ({\n  children,\n}: QueryErrorResetBoundaryProps) => {\n  const [value] = React.useState(() => createValue())\n  return (\n    <QueryErrorResetBoundaryContext.Provider value={value}>\n      {typeof children === 'function' ? children(value) : children}\n    </QueryErrorResetBoundaryContext.Provider>\n  )\n}\n", "'use client'\nimport * as React from 'react'\nimport { shouldThrowError } from '@tanstack/query-core'\nimport type {\n  DefaultedQueryObserverOptions,\n  Query,\n  QueryKey,\n  QueryObserverResult,\n  ThrowOnError,\n} from '@tanstack/query-core'\nimport type { QueryErrorResetBoundaryValue } from './QueryErrorResetBoundary'\n\nexport const ensurePreventErrorBoundaryRetry = <\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryData,\n  TQueryKey extends QueryKey,\n>(\n  options: DefaultedQueryObserverOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  >,\n  errorResetBoundary: QueryErrorResetBoundaryValue,\n) => {\n  if (\n    options.suspense ||\n    options.throwOnError ||\n    options.experimental_prefetchInRender\n  ) {\n    // Prevent retrying failed query if the error boundary has not been reset yet\n    if (!errorResetBoundary.isReset()) {\n      options.retryOnMount = false\n    }\n  }\n}\n\nexport const useClearResetErrorBoundary = (\n  errorResetBoundary: QueryErrorResetBoundaryValue,\n) => {\n  React.useEffect(() => {\n    errorResetBoundary.clearReset()\n  }, [errorResetBoundary])\n}\n\nexport const getHasError = <\n  TData,\n  TError,\n  TQueryFnData,\n  TQueryData,\n  TQueryKey extends QueryKey,\n>({\n  result,\n  errorResetBoundary,\n  throwOnError,\n  query,\n  suspense,\n}: {\n  result: QueryObserverResult<TData, TError>\n  errorResetBoundary: QueryErrorResetBoundaryValue\n  throwOnError: ThrowOnError<TQueryFnData, TError, TQueryData, TQueryKey>\n  query: Query<TQueryFnData, TError, TQueryData, TQueryKey> | undefined\n  suspense: boolean | undefined\n}) => {\n  return (\n    result.isError &&\n    !errorResetBoundary.isReset() &&\n    !result.isFetching &&\n    query &&\n    ((suspense && result.data === undefined) ||\n      shouldThrowError(throwOnError, [result.error, query]))\n  )\n}\n", "import type {\n  DefaultError,\n  DefaultedQueryObserverOptions,\n  Query,\n  QueryKey,\n  QueryObserver,\n  QueryObserverResult,\n} from '@tanstack/query-core'\nimport type { QueryErrorResetBoundaryValue } from './QueryErrorResetBoundary'\n\nexport const defaultThrowOnError = <\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  _error: TError,\n  query: Query<TQueryFnData, TError, TData, TQueryKey>,\n) => query.state.data === undefined\n\nexport const ensureSuspenseTimers = (\n  defaultedOptions: DefaultedQueryObserverOptions<any, any, any, any, any>,\n) => {\n  if (defaultedOptions.suspense) {\n    // Handle staleTime to ensure minimum 1000ms in Suspense mode\n    // This prevents unnecessary refetching when components remount after suspending\n    const MIN_SUSPENSE_TIME_MS = 1000\n\n    const clamp = (value: number | 'static' | undefined) =>\n      value === 'static'\n        ? value\n        : Math.max(value ?? MIN_SUSPENSE_TIME_MS, MIN_SUSPENSE_TIME_MS)\n\n    const originalStaleTime = defaultedOptions.staleTime\n    defaultedOptions.staleTime =\n      typeof originalStaleTime === 'function'\n        ? (...args) => clamp(originalStaleTime(...args))\n        : clamp(originalStaleTime)\n\n    if (typeof defaultedOptions.gcTime === 'number') {\n      defaultedOptions.gcTime = Math.max(\n        defaultedOptions.gcTime,\n        MIN_SUSPENSE_TIME_MS,\n      )\n    }\n  }\n}\n\nexport const willFetch = (\n  result: QueryObserverResult<any, any>,\n  isRestoring: boolean,\n) => result.isLoading && result.isFetching && !isRestoring\n\nexport const shouldSuspend = (\n  defaultedOptions:\n    | DefaultedQueryObserverOptions<any, any, any, any, any>\n    | undefined,\n  result: QueryObserverResult<any, any>,\n) => defaultedOptions?.suspense && result.isPending\n\nexport const fetchOptimistic = <\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryData,\n  TQueryKey extends QueryKey,\n>(\n  defaultedOptions: DefaultedQueryObserverOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  >,\n  observer: QueryObserver<TQueryFnData, TError, TData, TQueryData, TQueryKey>,\n  errorResetBoundary: QueryErrorResetBoundaryValue,\n) =>\n  observer.fetchOptimistic(defaultedOptions).catch(() => {\n    errorResetBoundary.clearReset()\n  })\n", "'use client'\nimport * as React from 'react'\n\nimport { isServer, noop, notifyManager } from '@tanstack/query-core'\nimport { useQueryClient } from './QueryClientProvider'\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary'\nimport {\n  ensurePreventErrorBoundaryRetry,\n  getHasError,\n  useClearResetErrorBoundary,\n} from './errorBoundaryUtils'\nimport { useIsRestoring } from './IsRestoringProvider'\nimport {\n  ensureSuspenseTimers,\n  fetchOptimistic,\n  shouldSuspend,\n  willFetch,\n} from './suspense'\nimport type {\n  QueryClient,\n  QueryKey,\n  QueryObserver,\n  QueryObserverResult,\n} from '@tanstack/query-core'\nimport type { UseBaseQueryOptions } from './types'\n\nexport function useBaseQuery<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryData,\n  TQueryKey extends QueryKey,\n>(\n  options: UseBaseQueryOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  >,\n  Observer: typeof QueryObserver,\n  queryClient?: QueryClient,\n): QueryObserverResult<TData, TError> {\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof options !== 'object' || Array.isArray(options)) {\n      throw new Error(\n        'Bad argument type. Starting with v5, only the \"Object\" form is allowed when calling query related functions. Please use the error stack to find the culprit call. More info here: https://tanstack.com/query/latest/docs/react/guides/migrating-to-v5#supports-a-single-signature-one-object',\n      )\n    }\n  }\n\n  const isRestoring = useIsRestoring()\n  const errorResetBoundary = useQueryErrorResetBoundary()\n  const client = useQueryClient(queryClient)\n  const defaultedOptions = client.defaultQueryOptions(options)\n\n  ;(client.getDefaultOptions().queries as any)?._experimental_beforeQuery?.(\n    defaultedOptions,\n  )\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!defaultedOptions.queryFn) {\n      console.error(\n        `[${defaultedOptions.queryHash}]: No queryFn was passed as an option, and no default queryFn was found. The queryFn parameter is only optional when using a default queryFn. More info here: https://tanstack.com/query/latest/docs/framework/react/guides/default-query-function`,\n      )\n    }\n  }\n\n  // Make sure results are optimistically set in fetching state before subscribing or updating options\n  defaultedOptions._optimisticResults = isRestoring\n    ? 'isRestoring'\n    : 'optimistic'\n\n  ensureSuspenseTimers(defaultedOptions)\n  ensurePreventErrorBoundaryRetry(defaultedOptions, errorResetBoundary)\n\n  useClearResetErrorBoundary(errorResetBoundary)\n\n  // this needs to be invoked before creating the Observer because that can create a cache entry\n  const isNewCacheEntry = !client\n    .getQueryCache()\n    .get(defaultedOptions.queryHash)\n\n  const [observer] = React.useState(\n    () =>\n      new Observer<TQueryFnData, TError, TData, TQueryData, TQueryKey>(\n        client,\n        defaultedOptions,\n      ),\n  )\n\n  // note: this must be called before useSyncExternalStore\n  const result = observer.getOptimisticResult(defaultedOptions)\n\n  const shouldSubscribe = !isRestoring && options.subscribed !== false\n  React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) => {\n        const unsubscribe = shouldSubscribe\n          ? observer.subscribe(notifyManager.batchCalls(onStoreChange))\n          : noop\n\n        // Update result to make sure we did not miss any query updates\n        // between creating the observer and subscribing to it.\n        observer.updateResult()\n\n        return unsubscribe\n      },\n      [observer, shouldSubscribe],\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult(),\n  )\n\n  React.useEffect(() => {\n    observer.setOptions(defaultedOptions)\n  }, [defaultedOptions, observer])\n\n  // Handle suspense\n  if (shouldSuspend(defaultedOptions, result)) {\n    throw fetchOptimistic(defaultedOptions, observer, errorResetBoundary)\n  }\n\n  // Handle error boundary\n  if (\n    getHasError({\n      result,\n      errorResetBoundary,\n      throwOnError: defaultedOptions.throwOnError,\n      query: client\n        .getQueryCache()\n        .get<\n          TQueryFnData,\n          TError,\n          TQueryData,\n          TQueryKey\n        >(defaultedOptions.queryHash),\n      suspense: defaultedOptions.suspense,\n    })\n  ) {\n    throw result.error\n  }\n\n  ;(client.getDefaultOptions().queries as any)?._experimental_afterQuery?.(\n    defaultedOptions,\n    result,\n  )\n\n  if (\n    defaultedOptions.experimental_prefetchInRender &&\n    !isServer &&\n    willFetch(result, isRestoring)\n  ) {\n    const promise = isNewCacheEntry\n      ? // Fetch immediately on render in order to ensure `.promise` is resolved even if the component is unmounted\n        fetchOptimistic(defaultedOptions, observer, errorResetBoundary)\n      : // subscribe to the \"cache promise\" so that we can finalize the currentThenable once data comes in\n        client.getQueryCache().get(defaultedOptions.queryHash)?.promise\n\n    promise?.catch(noop).finally(() => {\n      // `.updateResult()` will trigger `.#currentThenable` to finalize\n      observer.updateResult()\n    })\n  }\n\n  // Handle result property usage tracking\n  return !defaultedOptions.notifyOnChangeProps\n    ? observer.trackResult(result)\n    : result\n}\n", "'use client'\nimport { QueryObserver } from '@tanstack/query-core'\nimport { useBaseQuery } from './useBaseQuery'\nimport type {\n  DefaultError,\n  NoInfer,\n  QueryClient,\n  QueryKey,\n} from '@tanstack/query-core'\nimport type {\n  DefinedUseQueryResult,\n  UseQueryOptions,\n  UseQueryResult,\n} from './types'\nimport type {\n  DefinedInitialDataOptions,\n  UndefinedInitialDataOptions,\n} from './queryOptions'\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: DefinedInitialDataOptions<TQueryFnData, TError, TData, TQueryKey>,\n  queryClient?: QueryClient,\n): DefinedUseQueryResult<NoInfer<TData>, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: UndefinedInitialDataOptions<TQueryFnData, TError, TData, TQueryKey>,\n  queryClient?: QueryClient,\n): UseQueryResult<NoInfer<TData>, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = DefaultError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  queryClient?: QueryClient,\n): UseQueryResult<NoInfer<TData>, TError>\n\nexport function useQuery(options: UseQueryOptions, queryClient?: QueryClient) {\n  return useBaseQuery(options, QueryObserver, queryClient)\n}\n", "import { useState } from 'preact/hooks';\nimport { isInWorktree } from '../signals/store';\nimport { MainRepoScreen } from './MainRepoScreen';\nimport { WorktreeScreen } from './WorktreeScreen';\nimport { Loader } from './components/Loader';\n\nexport function AppRoot() {\n  // Simple useState for loading - starts as true\n  const [isLoading, setIsLoading] = useState(true);\n  \n  // Expose a simple function for BootChannel to call\n  if (typeof window !== 'undefined') {\n    (window as any).setAppLoading = setIsLoading;\n  }\n  \n  if (isLoading) {\n    return (\n      <div className=\"p-3\">\n        <Loader message=\"Initializing Larry\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-3\">\n      {isInWorktree.value ? <WorktreeScreen /> : <MainRepoScreen />}\n    </div>\n  );\n}\n", "/** Normal hydration that attaches to a DOM tree but does not diff it. */\nexport const MODE_HYDRATE = 1 << 5;\n/** Signifies this VNode suspended on the previous render */\nexport const MODE_SUSPENDED = 1 << 7;\n/** Indicates that this node needs to be inserted while patching children */\nexport const INSERT_VNODE = 1 << 2;\n/** Indicates a VNode has been matched with another VNode in the diff */\nexport const MATCHED = 1 << 1;\n\n/** Reset all mode flags */\nexport const RESET_MODE = ~(MODE_HYDRATE | MODE_SUSPENDED);\n\nexport const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\nexport const XHTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\nexport const MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n\nexport const NULL = null;\nexport const UNDEFINED = undefined;\nexport const EMPTY_OBJ = /** @type {any} */ ({});\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL =\n\t/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n", "import { EMPTY_ARR } from './constants';\n\nexport const isArray = Array.isArray;\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-expect-error We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {import('./index').ContainerNode} node The node to remove\n */\nexport function removeNode(node) {\n\tif (node && node.parentNode) node.parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n", "import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n", "import { slice } from './util';\nimport options from './options';\nimport { NULL, UNDEFINED } from './constants';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component constructor for this\n * virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the\n * virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != NULL) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === UNDEFINED) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, NULL);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\t/** @type {import('./internal').VNode} */\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: NULL,\n\t\t_parent: NULL,\n\t\t_depth: 0,\n\t\t_dom: NULL,\n\t\t_component: NULL,\n\t\tconstructor: UNDEFINED,\n\t\t_original: original == NULL ? ++vnodeId : original,\n\t\t_index: -1,\n\t\t_flags: 0\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == NULL && options.vnode != NULL) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: NULL };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != NULL && vnode.constructor == UNDEFINED;\n", "import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\nimport { MODE_HYDRATE, NULL } from './constants';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function BaseComponent(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nBaseComponent.prototype.setState = function (update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != NULL && this._nextState != this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == NULL) return;\n\n\tif (this._vnode) {\n\t\tif (callback) {\n\t\t\tthis._stateCallbacks.push(callback);\n\t\t}\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nBaseComponent.prototype.forceUpdate = function (callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](https://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {ComponentChildren | void}\n */\nBaseComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == NULL) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._index + 1)\n\t\t\t: NULL;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != NULL && sibling._dom != NULL) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : NULL;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet oldVNode = component._vnode,\n\t\toldDom = oldVNode._dom,\n\t\tcommitQueue = [],\n\t\trefQueue = [];\n\n\tif (component._parentDom) {\n\t\tconst newVNode = assign({}, oldVNode);\n\t\tnewVNode._original = oldVNode._original + 1;\n\t\tif (options.vnode) options.vnode(newVNode);\n\n\t\tdiff(\n\t\t\tcomponent._parentDom,\n\t\t\tnewVNode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tcomponent._parentDom.namespaceURI,\n\t\t\toldVNode._flags & MODE_HYDRATE ? [oldDom] : NULL,\n\t\t\tcommitQueue,\n\t\t\toldDom == NULL ? getDomSibling(oldVNode) : oldDom,\n\t\t\t!!(oldVNode._flags & MODE_HYDRATE),\n\t\t\trefQueue\n\t\t);\n\n\t\tnewVNode._original = oldVNode._original;\n\t\tnewVNode._parent._children[newVNode._index] = newVNode;\n\t\tcommitRoot(commitQueue, newVNode, refQueue);\n\t\toldVNode._dom = oldVNode._parent = null;\n\n\t\tif (newVNode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(newVNode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != NULL && vnode._component != NULL) {\n\t\tvnode._dom = vnode._component.base = NULL;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != NULL && child._dom != NULL) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce != options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/**\n * @param {import('./internal').Component} a\n * @param {import('./internal').Component} b\n */\nconst depthSort = (a, b) => a._vnode._depth - b._vnode._depth;\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet c,\n\t\tl = 1;\n\n\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t// process() calls from getting scheduled while `queue` is still being consumed.\n\twhile (rerenderQueue.length) {\n\t\t// Keep the rerender queue sorted by (depth, insertion order). The queue\n\t\t// will initially be sorted on the first iteration only if it has more than 1 item.\n\t\t//\n\t\t// New items can be added to the queue e.g. when rerendering a provider, so we want to\n\t\t// keep the order from top to bottom with those new items so we can handle them in a\n\t\t// single pass\n\t\tif (rerenderQueue.length > l) {\n\t\t\trerenderQueue.sort(depthSort);\n\t\t}\n\n\t\tc = rerenderQueue.shift();\n\t\tl = rerenderQueue.length;\n\n\t\tif (c._dirty) {\n\t\t\trenderComponent(c);\n\t\t}\n\t}\n\tprocess._rerenderCount = 0;\n}\n\nprocess._rerenderCount = 0;\n", "import { IS_NON_DIMENSIONAL, NULL, SVG_NAMESPACE } from '../constants';\nimport options from '../options';\n\nfunction setStyle(style, key, value) {\n\tif (key[0] == '-') {\n\t\tstyle.setProperty(key, value == NULL ? '' : value);\n\t} else if (value == NULL) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\nconst CAPTURE_REGEX = /(PointerCapture)$|Capture$/i;\n\n// A logical clock to solve issues like https://github.com/preactjs/preact/issues/3927.\n// When the DOM performs an event it leaves micro-ticks in between bubbling up which means that\n// an event can trigger on a newly reated DOM-node while the event bubbles up.\n//\n// Originally inspired by Vue\n// (https://github.com/vuejs/core/blob/caeb8a68811a1b0f79/packages/runtime-dom/src/modules/events.ts#L90-L101),\n// but modified to use a logical clock instead of Date.now() in case event handlers get attached\n// and events get dispatched during the same millisecond.\n//\n// The clock is incremented after each new event dispatch. This allows 1 000 000 new events\n// per second for over 280 years before the value reaches Number.MAX_SAFE_INTEGER (2**53 - 1).\nlet eventClock = 0;\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {string} namespace Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, namespace) {\n\tlet useCapture;\n\n\to: if (name == 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] != oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] == 'o' && name[1] == 'n') {\n\t\tuseCapture = name != (name = name.replace(CAPTURE_REGEX, '$1'));\n\t\tconst lowerCaseName = name.toLowerCase();\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (lowerCaseName in dom || name == 'onFocusOut' || name == 'onFocusIn')\n\t\t\tname = lowerCaseName.slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tvalue._attached = eventClock;\n\t\t\t\tdom.addEventListener(\n\t\t\t\t\tname,\n\t\t\t\t\tuseCapture ? eventProxyCapture : eventProxy,\n\t\t\t\t\tuseCapture\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tvalue._attached = oldValue._attached;\n\t\t\t}\n\t\t} else {\n\t\t\tdom.removeEventListener(\n\t\t\t\tname,\n\t\t\t\tuseCapture ? eventProxyCapture : eventProxy,\n\t\t\t\tuseCapture\n\t\t\t);\n\t\t}\n\t} else {\n\t\tif (namespace == SVG_NAMESPACE) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname != 'width' &&\n\t\t\tname != 'height' &&\n\t\t\tname != 'href' &&\n\t\t\tname != 'list' &&\n\t\t\tname != 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname != 'tabIndex' &&\n\t\t\tname != 'download' &&\n\t\t\tname != 'rowSpan' &&\n\t\t\tname != 'colSpan' &&\n\t\t\tname != 'role' &&\n\t\t\tname != 'popover' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == NULL ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// aria- and data- attributes have no boolean representation.\n\t\t// A `false` value is different from the attribute not being\n\t\t// present, so we can't remove it. For non-boolean aria\n\t\t// attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost too many bytes. On top of\n\t\t// that other frameworks generally stringify `false`.\n\n\t\tif (typeof value == 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (value != NULL && (value !== false || name[4] == '-')) {\n\t\t\tdom.setAttribute(name, name == 'popover' && value == true ? '' : value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Create an event proxy function.\n * @param {boolean} useCapture Is the event handler for the capture phase.\n * @private\n */\nfunction createEventProxy(useCapture) {\n\t/**\n\t * Proxy an event to hooked event handlers\n\t * @param {import('../internal').PreactEvent} e The event object from the browser\n\t * @private\n\t */\n\treturn function (e) {\n\t\tif (this._listeners) {\n\t\t\tconst eventHandler = this._listeners[e.type + useCapture];\n\t\t\tif (e._dispatched == NULL) {\n\t\t\t\te._dispatched = eventClock++;\n\n\t\t\t\t// When `e._dispatched` is smaller than the time when the targeted event\n\t\t\t\t// handler was attached we know we have bubbled up to an element that was added\n\t\t\t\t// during patching the DOM.\n\t\t\t} else if (e._dispatched < eventHandler._attached) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn eventHandler(options.event ? options.event(e) : e);\n\t\t}\n\t};\n}\n\nconst eventProxy = createEventProxy(false);\nconst eventProxyCapture = createEventProxy(true);\n", "import { enqueueRender } from './component';\nimport { NULL } from './constants';\n\nexport let i = 0;\n\nexport function createContext(defaultValue) {\n\tfunction Context(props) {\n\t\tif (!this.getChildContext) {\n\t\t\t/** @type {Set<import('./internal').Component> | null} */\n\t\t\tlet subs = new Set();\n\t\t\tlet ctx = {};\n\t\t\tctx[Context._id] = this;\n\n\t\t\tthis.getChildContext = () => ctx;\n\n\t\t\tthis.componentWillUnmount = () => {\n\t\t\t\tsubs = NULL;\n\t\t\t};\n\n\t\t\tthis.shouldComponentUpdate = function (_props) {\n\t\t\t\t// @ts-expect-error even\n\t\t\t\tif (this.props.value != _props.value) {\n\t\t\t\t\tsubs.forEach(c => {\n\t\t\t\t\t\tc._force = true;\n\t\t\t\t\t\tenqueueRender(c);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.sub = c => {\n\t\t\t\tsubs.add(c);\n\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\tif (subs) {\n\t\t\t\t\t\tsubs.delete(c);\n\t\t\t\t\t}\n\t\t\t\t\tif (old) old.call(c);\n\t\t\t\t};\n\t\t\t};\n\t\t}\n\n\t\treturn props.children;\n\t}\n\n\tContext._id = '__cC' + i++;\n\tContext._defaultValue = defaultValue;\n\n\t/** @type {import('./internal').FunctionComponent} */\n\tContext.Consumer = (props, contextValue) => {\n\t\treturn props.children(contextValue);\n\t};\n\n\t// we could also get rid of _contextRef entirely\n\tContext.Provider =\n\t\tContext._contextRef =\n\t\tContext.Consumer.contextType =\n\t\t\tContext;\n\n\treturn Context;\n}\n", "import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport {\n\tEMPTY_OBJ,\n\tEMPTY_ARR,\n\tINSERT_VNODE,\n\tMATCHED,\n\tUNDEFINED,\n\tNULL\n} from '../constants';\nimport { isArray } from '../util';\nimport { getDomSibling } from '../component';\n\n/**\n * @typedef {import('../internal').ComponentChildren} ComponentChildren\n * @typedef {import('../internal').Component} Component\n * @typedef {import('../internal').PreactElement} PreactElement\n * @typedef {import('../internal').VNode} VNode\n */\n\n/**\n * Diff the children of a virtual node\n * @param {PreactElement} parentDom The DOM element whose children are being\n * diffed\n * @param {ComponentChildren[]} renderResult\n * @param {VNode} newParentVNode The new virtual node whose children should be\n * diff'ed against oldParentVNode\n * @param {VNode} oldParentVNode The old virtual node whose children should be\n * diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by\n * getChildContext\n * @param {string} namespace Current namespace of the DOM node (HTML, SVG, or MathML)\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {PreactElement} oldDom The current attached DOM element any new dom\n * elements should be placed around. Likely `null` on first render (except when\n * hydrating). Can be a sibling DOM element when diffing Fragments that have\n * siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tnamespace,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating,\n\trefQueue\n) {\n\tlet i,\n\t\t/** @type {VNode} */\n\t\toldVNode,\n\t\t/** @type {VNode} */\n\t\tchildVNode,\n\t\t/** @type {PreactElement} */\n\t\tnewDom,\n\t\t/** @type {PreactElement} */\n\t\tfirstChildDom;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\t/** @type {VNode[]} */\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet newChildrenLength = renderResult.length;\n\n\toldDom = constructNewChildrenArray(\n\t\tnewParentVNode,\n\t\trenderResult,\n\t\toldChildren,\n\t\toldDom,\n\t\tnewChildrenLength\n\t);\n\n\tfor (i = 0; i < newChildrenLength; i++) {\n\t\tchildVNode = newParentVNode._children[i];\n\t\tif (childVNode == NULL) continue;\n\n\t\t// At this point, constructNewChildrenArray has assigned _index to be the\n\t\t// matchingIndex for this VNode's oldVNode (or -1 if there is no oldVNode).\n\t\tif (childVNode._index == -1) {\n\t\t\toldVNode = EMPTY_OBJ;\n\t\t} else {\n\t\t\toldVNode = oldChildren[childVNode._index] || EMPTY_OBJ;\n\t\t}\n\n\t\t// Update childVNode._index to its final index\n\t\tchildVNode._index = i;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tlet result = diff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tnamespace,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating,\n\t\t\trefQueue\n\t\t);\n\n\t\t// Adjust DOM nodes\n\t\tnewDom = childVNode._dom;\n\t\tif (childVNode.ref && oldVNode.ref != childVNode.ref) {\n\t\t\tif (oldVNode.ref) {\n\t\t\t\tapplyRef(oldVNode.ref, NULL, childVNode);\n\t\t\t}\n\t\t\trefQueue.push(\n\t\t\t\tchildVNode.ref,\n\t\t\t\tchildVNode._component || newDom,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t}\n\n\t\tif (firstChildDom == NULL && newDom != NULL) {\n\t\t\tfirstChildDom = newDom;\n\t\t}\n\n\t\tlet shouldPlace = !!(childVNode._flags & INSERT_VNODE);\n\t\tif (shouldPlace || oldVNode._children === childVNode._children) {\n\t\t\toldDom = insert(childVNode, oldDom, parentDom, shouldPlace);\n\t\t} else if (typeof childVNode.type == 'function' && result !== UNDEFINED) {\n\t\t\toldDom = result;\n\t\t} else if (newDom) {\n\t\t\toldDom = newDom.nextSibling;\n\t\t}\n\n\t\t// Unset diffing flags\n\t\tchildVNode._flags &= ~(INSERT_VNODE | MATCHED);\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\treturn oldDom;\n}\n\n/**\n * @param {VNode} newParentVNode\n * @param {ComponentChildren[]} renderResult\n * @param {VNode[]} oldChildren\n */\nfunction constructNewChildrenArray(\n\tnewParentVNode,\n\trenderResult,\n\toldChildren,\n\toldDom,\n\tnewChildrenLength\n) {\n\t/** @type {number} */\n\tlet i;\n\t/** @type {VNode} */\n\tlet childVNode;\n\t/** @type {VNode} */\n\tlet oldVNode;\n\n\tlet oldChildrenLength = oldChildren.length,\n\t\tremainingOldChildren = oldChildrenLength;\n\n\tlet skew = 0;\n\n\tnewParentVNode._children = new Array(newChildrenLength);\n\tfor (i = 0; i < newChildrenLength; i++) {\n\t\t// @ts-expect-error We are reusing the childVNode variable to hold both the\n\t\t// pre and post normalized childVNode\n\t\tchildVNode = renderResult[i];\n\n\t\tif (\n\t\t\tchildVNode == NULL ||\n\t\t\ttypeof childVNode == 'boolean' ||\n\t\t\ttypeof childVNode == 'function'\n\t\t) {\n\t\t\tnewParentVNode._children[i] = NULL;\n\t\t\tcontinue;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint' ||\n\t\t\tchildVNode.constructor == String\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tNULL,\n\t\t\t\tchildVNode,\n\t\t\t\tNULL,\n\t\t\t\tNULL,\n\t\t\t\tNULL\n\t\t\t);\n\t\t} else if (isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tNULL,\n\t\t\t\tNULL,\n\t\t\t\tNULL\n\t\t\t);\n\t\t} else if (childVNode.constructor == UNDEFINED && childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tchildVNode.ref ? childVNode.ref : NULL,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\tconst skewedIndex = i + skew;\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Temporarily store the matchingIndex on the _index property so we can pull\n\t\t// out the oldVNode in diffChildren. We'll override this to the VNode's\n\t\t// final index after using this property to get the oldVNode\n\t\tconst matchingIndex = (childVNode._index = findMatchingIndex(\n\t\t\tchildVNode,\n\t\t\toldChildren,\n\t\t\tskewedIndex,\n\t\t\tremainingOldChildren\n\t\t));\n\n\t\toldVNode = NULL;\n\t\tif (matchingIndex != -1) {\n\t\t\toldVNode = oldChildren[matchingIndex];\n\t\t\tremainingOldChildren--;\n\t\t\tif (oldVNode) {\n\t\t\t\toldVNode._flags |= MATCHED;\n\t\t\t}\n\t\t}\n\n\t\t// Here, we define isMounting for the purposes of the skew diffing\n\t\t// algorithm. Nodes that are unsuspending are considered mounting and we detect\n\t\t// this by checking if oldVNode._original == null\n\t\tconst isMounting = oldVNode == NULL || oldVNode._original == NULL;\n\n\t\tif (isMounting) {\n\t\t\tif (matchingIndex == -1) {\n\t\t\t\t// When the array of children is growing we need to decrease the skew\n\t\t\t\t// as we are adding a new element to the array.\n\t\t\t\t// Example:\n\t\t\t\t// [1, 2, 3] --> [0, 1, 2, 3]\n\t\t\t\t// oldChildren   newChildren\n\t\t\t\t//\n\t\t\t\t// The new element is at index 0, so our skew is 0,\n\t\t\t\t// we need to decrease the skew as we are adding a new element.\n\t\t\t\t// The decrease will cause us to compare the element at position 1\n\t\t\t\t// with value 1 with the element at position 0 with value 0.\n\t\t\t\t//\n\t\t\t\t// A linear concept is applied when the array is shrinking,\n\t\t\t\t// if the length is unchanged we can assume that no skew\n\t\t\t\t// changes are needed.\n\t\t\t\tif (newChildrenLength > oldChildrenLength) {\n\t\t\t\t\tskew--;\n\t\t\t\t} else if (newChildrenLength < oldChildrenLength) {\n\t\t\t\t\tskew++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we are mounting a DOM VNode, mark it for insertion\n\t\t\tif (typeof childVNode.type != 'function') {\n\t\t\t\tchildVNode._flags |= INSERT_VNODE;\n\t\t\t}\n\t\t} else if (matchingIndex != skewedIndex) {\n\t\t\t// When we move elements around i.e. [0, 1, 2] --> [1, 0, 2]\n\t\t\t// --> we diff 1, we find it at position 1 while our skewed index is 0 and our skew is 0\n\t\t\t//     we set the skew to 1 as we found an offset.\n\t\t\t// --> we diff 0, we find it at position 0 while our skewed index is at 2 and our skew is 1\n\t\t\t//     this makes us increase the skew again.\n\t\t\t// --> we diff 2, we find it at position 2 while our skewed index is at 4 and our skew is 2\n\t\t\t//\n\t\t\t// this becomes an optimization question where currently we see a 1 element offset as an insertion\n\t\t\t// or deletion i.e. we optimize for [0, 1, 2] --> [9, 0, 1, 2]\n\t\t\t// while a more than 1 offset we see as a swap.\n\t\t\t// We could probably build heuristics for having an optimized course of action here as well, but\n\t\t\t// might go at the cost of some bytes.\n\t\t\t//\n\t\t\t// If we wanted to optimize for i.e. only swaps we'd just do the last two code-branches and have\n\t\t\t// only the first item be a re-scouting and all the others fall in their skewed counter-part.\n\t\t\t// We could also further optimize for swaps\n\t\t\tif (matchingIndex == skewedIndex - 1) {\n\t\t\t\tskew--;\n\t\t\t} else if (matchingIndex == skewedIndex + 1) {\n\t\t\t\tskew++;\n\t\t\t} else {\n\t\t\t\tif (matchingIndex > skewedIndex) {\n\t\t\t\t\tskew--;\n\t\t\t\t} else {\n\t\t\t\t\tskew++;\n\t\t\t\t}\n\n\t\t\t\t// Move this VNode's DOM if the original index (matchingIndex) doesn't\n\t\t\t\t// match the new skew index (i + new skew)\n\t\t\t\t// In the former two branches we know that it matches after skewing\n\t\t\t\tchildVNode._flags |= INSERT_VNODE;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove remaining oldChildren if there are any. Loop forwards so that as we\n\t// unmount DOM from the beginning of the oldChildren, we can adjust oldDom to\n\t// point to the next child, which needs to be the first DOM node that won't be\n\t// unmounted.\n\tif (remainingOldChildren) {\n\t\tfor (i = 0; i < oldChildrenLength; i++) {\n\t\t\toldVNode = oldChildren[i];\n\t\t\tif (oldVNode != NULL && (oldVNode._flags & MATCHED) == 0) {\n\t\t\t\tif (oldVNode._dom == oldDom) {\n\t\t\t\t\toldDom = getDomSibling(oldVNode);\n\t\t\t\t}\n\n\t\t\t\tunmount(oldVNode, oldVNode);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * @param {VNode} parentVNode\n * @param {PreactElement} oldDom\n * @param {PreactElement} parentDom\n * @param {boolean} shouldPlace\n * @returns {PreactElement}\n */\nfunction insert(parentVNode, oldDom, parentDom, shouldPlace) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\n\tif (typeof parentVNode.type == 'function') {\n\t\tlet children = parentVNode._children;\n\t\tfor (let i = 0; children && i < children.length; i++) {\n\t\t\tif (children[i]) {\n\t\t\t\t// If we enter this code path on sCU bailout, where we copy\n\t\t\t\t// oldVNode._children to newVNode._children, we need to update the old\n\t\t\t\t// children's _parent pointer to point to the newVNode (parentVNode\n\t\t\t\t// here).\n\t\t\t\tchildren[i]._parent = parentVNode;\n\t\t\t\toldDom = insert(children[i], oldDom, parentDom, shouldPlace);\n\t\t\t}\n\t\t}\n\n\t\treturn oldDom;\n\t} else if (parentVNode._dom != oldDom) {\n\t\tif (shouldPlace) {\n\t\t\tif (oldDom && parentVNode.type && !oldDom.parentNode) {\n\t\t\t\toldDom = getDomSibling(parentVNode);\n\t\t\t}\n\t\t\tparentDom.insertBefore(parentVNode._dom, oldDom || NULL);\n\t\t}\n\t\toldDom = parentVNode._dom;\n\t}\n\n\tdo {\n\t\toldDom = oldDom && oldDom.nextSibling;\n\t} while (oldDom != NULL && oldDom.nodeType == 8);\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {ComponentChildren} children The unflattened children of a virtual\n * node\n * @returns {VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == NULL || typeof children == 'boolean') {\n\t} else if (isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\n/**\n * @param {VNode} childVNode\n * @param {VNode[]} oldChildren\n * @param {number} skewedIndex\n * @param {number} remainingOldChildren\n * @returns {number}\n */\nfunction findMatchingIndex(\n\tchildVNode,\n\toldChildren,\n\tskewedIndex,\n\tremainingOldChildren\n) {\n\tconst key = childVNode.key;\n\tconst type = childVNode.type;\n\tlet oldVNode = oldChildren[skewedIndex];\n\tconst matched = oldVNode != NULL && (oldVNode._flags & MATCHED) == 0;\n\n\t// We only need to perform a search if there are more children\n\t// (remainingOldChildren) to search. However, if the oldVNode we just looked\n\t// at skewedIndex was not already used in this diff, then there must be at\n\t// least 1 other (so greater than 1) remainingOldChildren to attempt to match\n\t// against. So the following condition checks that ensuring\n\t// remainingOldChildren > 1 if the oldVNode is not already used/matched. Else\n\t// if the oldVNode was null or matched, then there could needs to be at least\n\t// 1 (aka `remainingOldChildren > 0`) children to find and compare against.\n\t//\n\t// If there is an unkeyed functional VNode, that isn't a built-in like our Fragment,\n\t// we should not search as we risk re-using state of an unrelated VNode. (reverted for now)\n\tlet shouldSearch =\n\t\t// (typeof type != 'function' || type === Fragment || key) &&\n\t\tremainingOldChildren > (matched ? 1 : 0);\n\n\tif (\n\t\t(oldVNode === NULL && childVNode.key == null) ||\n\t\t(matched && key == oldVNode.key && type == oldVNode.type)\n\t) {\n\t\treturn skewedIndex;\n\t} else if (shouldSearch) {\n\t\tlet x = skewedIndex - 1;\n\t\tlet y = skewedIndex + 1;\n\t\twhile (x >= 0 || y < oldChildren.length) {\n\t\t\tconst childIndex = x >= 0 ? x-- : y++;\n\t\t\toldVNode = oldChildren[childIndex];\n\t\t\tif (\n\t\t\t\toldVNode != NULL &&\n\t\t\t\t(oldVNode._flags & MATCHED) == 0 &&\n\t\t\t\tkey == oldVNode.key &&\n\t\t\t\ttype == oldVNode.type\n\t\t\t) {\n\t\t\t\treturn childIndex;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn -1;\n}\n", "import {\n\tEMPTY_OBJ,\n\tMATH_NAMESPACE,\n\tMODE_HYDRATE,\n\tMODE_SUSPENDED,\n\tNULL,\n\tRESET_MODE,\n\tSVG_NAMESPACE,\n\tUNDEFINED,\n\tXHTML_NAMESPACE\n} from '../constants';\nimport { BaseComponent, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { setProperty } from './props';\nimport { assign, isArray, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * @typedef {import('../internal').ComponentChildren} ComponentChildren\n * @typedef {import('../internal').Component} Component\n * @typedef {import('../internal').PreactElement} PreactElement\n * @typedef {import('../internal').VNode} VNode\n */\n\n/**\n * @template {any} T\n * @typedef {import('../internal').Ref<T>} Ref<T>\n */\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {PreactElement} parentDom The parent of the DOM element\n * @param {VNode} newVNode The new virtual node\n * @param {VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by\n * getChildContext\n * @param {string} namespace Current namespace of the DOM node (HTML, SVG, or MathML)\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {PreactElement} oldDom The current attached DOM element any new dom\n * elements should be placed around. Likely `null` on first render (except when\n * hydrating). Can be a sibling DOM element when diffing Fragments that have\n * siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tnamespace,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating,\n\trefQueue\n) {\n\t/** @type {any} */\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor != UNDEFINED) return NULL;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._flags & MODE_SUSPENDED) {\n\t\tisHydrating = !!(oldVNode._flags & MODE_HYDRATE);\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\touter: if (typeof newType == 'function') {\n\t\ttry {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\t\t\tconst isClassComponent =\n\t\t\t\t'prototype' in newType && newType.prototype.render;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif (isClassComponent) {\n\t\t\t\t\t// @ts-expect-error The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-expect-error Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new BaseComponent(\n\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (isClassComponent && c._nextState == NULL) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\n\t\t\tif (isClassComponent && newType.getDerivedStateFromProps != NULL) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\t\t\tc._vnode = newVNode;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tisClassComponent &&\n\t\t\t\t\tnewType.getDerivedStateFromProps == NULL &&\n\t\t\t\t\tc.componentWillMount != NULL\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (isClassComponent && c.componentDidMount != NULL) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tisClassComponent &&\n\t\t\t\t\tnewType.getDerivedStateFromProps == NULL &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != NULL\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != NULL &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original == oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original != oldVNode._original) {\n\t\t\t\t\t\t// When we are dealing with a bail because of sCU we have to update\n\t\t\t\t\t\t// the props, state and dirty-state.\n\t\t\t\t\t\t// when we are dealing with strict-equality we don't as the child could still\n\t\t\t\t\t\t// be dirtied see #3883\n\t\t\t\t\t\tc.props = newProps;\n\t\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t\tc._dirty = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.some(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\n\t\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t\t}\n\t\t\t\t\tc._stateCallbacks = [];\n\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != NULL) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (isClassComponent && c.componentDidUpdate != NULL) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc._parentDom = parentDom;\n\t\t\tc._force = false;\n\n\t\t\tlet renderHook = options._render,\n\t\t\t\tcount = 0;\n\t\t\tif (isClassComponent) {\n\t\t\t\tc.state = c._nextState;\n\t\t\t\tc._dirty = false;\n\n\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t}\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\t\t// Handle setState called in render, see #2553\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t} while (c._dirty && ++count < 25);\n\t\t\t}\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != NULL) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (isClassComponent && !isNew && c.getSnapshotBeforeUpdate != NULL) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != NULL && tmp.type === Fragment && tmp.key == NULL;\n\t\t\tlet renderResult = tmp;\n\n\t\t\tif (isTopLevelFragment) {\n\t\t\t\trenderResult = cloneNode(tmp.props.children);\n\t\t\t}\n\n\t\t\toldDom = diffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tisArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tnamespace,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating,\n\t\t\t\trefQueue\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._flags &= RESET_MODE;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = NULL;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tnewVNode._original = NULL;\n\t\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\t\tif (isHydrating || excessDomChildren != NULL) {\n\t\t\t\tif (e.then) {\n\t\t\t\t\tnewVNode._flags |= isHydrating\n\t\t\t\t\t\t? MODE_HYDRATE | MODE_SUSPENDED\n\t\t\t\t\t\t: MODE_SUSPENDED;\n\n\t\t\t\t\twhile (oldDom && oldDom.nodeType == 8 && oldDom.nextSibling) {\n\t\t\t\t\t\toldDom = oldDom.nextSibling;\n\t\t\t\t\t}\n\n\t\t\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = NULL;\n\t\t\t\t\tnewVNode._dom = oldDom;\n\t\t\t\t} else {\n\t\t\t\t\tfor (let i = excessDomChildren.length; i--; ) {\n\t\t\t\t\t\tremoveNode(excessDomChildren[i]);\n\t\t\t\t\t}\n\t\t\t\t\tmarkAsForce(newVNode);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\tif (!e.then) markAsForce(newVNode);\n\t\t\t}\n\t\t\toptions._catchError(e, newVNode, oldVNode);\n\t\t}\n\t} else if (\n\t\texcessDomChildren == NULL &&\n\t\tnewVNode._original == oldVNode._original\n\t) {\n\t\tnewVNode._children = oldVNode._children;\n\t\tnewVNode._dom = oldVNode._dom;\n\t} else {\n\t\toldDom = newVNode._dom = diffElementNodes(\n\t\t\toldVNode._dom,\n\t\t\tnewVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tnamespace,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\tisHydrating,\n\t\t\trefQueue\n\t\t);\n\t}\n\n\tif ((tmp = options.diffed)) tmp(newVNode);\n\n\treturn newVNode._flags & MODE_SUSPENDED ? undefined : oldDom;\n}\n\nfunction markAsForce(vnode) {\n\tif (vnode && vnode._component) vnode._component._force = true;\n\tif (vnode && vnode._children) vnode._children.forEach(markAsForce);\n}\n\n/**\n * @param {Array<Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {VNode} root\n */\nexport function commitRoot(commitQueue, root, refQueue) {\n\tfor (let i = 0; i < refQueue.length; i++) {\n\t\tapplyRef(refQueue[i], refQueue[++i], refQueue[++i]);\n\t}\n\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-expect-error Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-expect-error See above comment on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\nfunction cloneNode(node) {\n\tif (\n\t\ttypeof node != 'object' ||\n\t\tnode == NULL ||\n\t\t(node._depth && node._depth > 0)\n\t) {\n\t\treturn node;\n\t}\n\n\tif (isArray(node)) {\n\t\treturn node.map(cloneNode);\n\t}\n\n\treturn assign({}, node);\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {PreactElement} dom The DOM element representing the virtual nodes\n * being diffed\n * @param {VNode} newVNode The new virtual node\n * @param {VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {string} namespace Current namespace of the DOM node (HTML, SVG, or MathML)\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n * @returns {PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tnamespace,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating,\n\trefQueue\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = /** @type {string} */ (newVNode.type);\n\t/** @type {any} */\n\tlet i;\n\t/** @type {{ __html?: string }} */\n\tlet newHtml;\n\t/** @type {{ __html?: string }} */\n\tlet oldHtml;\n\t/** @type {ComponentChildren} */\n\tlet newChildren;\n\tlet value;\n\tlet inputValue;\n\tlet checked;\n\n\t// Tracks entering and exiting namespaces when descending through the tree.\n\tif (nodeType == 'svg') namespace = SVG_NAMESPACE;\n\telse if (nodeType == 'math') namespace = MATH_NAMESPACE;\n\telse if (!namespace) namespace = XHTML_NAMESPACE;\n\n\tif (excessDomChildren != NULL) {\n\t\tfor (i = 0; i < excessDomChildren.length; i++) {\n\t\t\tvalue = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tvalue &&\n\t\t\t\t'setAttribute' in value == !!nodeType &&\n\t\t\t\t(nodeType ? value.localName == nodeType : value.nodeType == 3)\n\t\t\t) {\n\t\t\t\tdom = value;\n\t\t\t\texcessDomChildren[i] = NULL;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == NULL) {\n\t\tif (nodeType == NULL) {\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tdom = document.createElementNS(\n\t\t\tnamespace,\n\t\t\tnodeType,\n\t\t\tnewProps.is && newProps\n\t\t);\n\n\t\t// we are creating a new node, so we can assume this is a new subtree (in\n\t\t// case we are hydrating), this deopts the hydrate\n\t\tif (isHydrating) {\n\t\t\tif (options._hydrationMismatch)\n\t\t\t\toptions._hydrationMismatch(newVNode, excessDomChildren);\n\t\t\tisHydrating = false;\n\t\t}\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = NULL;\n\t}\n\n\tif (nodeType == NULL) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data != newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\t// If we are in a situation where we are not hydrating but are using\n\t\t// existing DOM (e.g. replaceNode) we should read the existing DOM\n\t\t// attributes to diff them\n\t\tif (!isHydrating && excessDomChildren != NULL) {\n\t\t\toldProps = {};\n\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\tvalue = dom.attributes[i];\n\t\t\t\toldProps[value.name] = value.value;\n\t\t\t}\n\t\t}\n\n\t\tfor (i in oldProps) {\n\t\t\tvalue = oldProps[i];\n\t\t\tif (i == 'children') {\n\t\t\t} else if (i == 'dangerouslySetInnerHTML') {\n\t\t\t\toldHtml = value;\n\t\t\t} else if (!(i in newProps)) {\n\t\t\t\tif (\n\t\t\t\t\t(i == 'value' && 'defaultValue' in newProps) ||\n\t\t\t\t\t(i == 'checked' && 'defaultChecked' in newProps)\n\t\t\t\t) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tsetProperty(dom, i, NULL, value, namespace);\n\t\t\t}\n\t\t}\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tfor (i in newProps) {\n\t\t\tvalue = newProps[i];\n\t\t\tif (i == 'children') {\n\t\t\t\tnewChildren = value;\n\t\t\t} else if (i == 'dangerouslySetInnerHTML') {\n\t\t\t\tnewHtml = value;\n\t\t\t} else if (i == 'value') {\n\t\t\t\tinputValue = value;\n\t\t\t} else if (i == 'checked') {\n\t\t\t\tchecked = value;\n\t\t\t} else if (\n\t\t\t\t(!isHydrating || typeof value == 'function') &&\n\t\t\t\toldProps[i] !== value\n\t\t\t) {\n\t\t\t\tsetProperty(dom, i, value, oldProps[i], namespace);\n\t\t\t}\n\t\t}\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\tif (\n\t\t\t\t!isHydrating &&\n\t\t\t\t(!oldHtml ||\n\t\t\t\t\t(newHtml.__html != oldHtml.__html && newHtml.__html != dom.innerHTML))\n\t\t\t) {\n\t\t\t\tdom.innerHTML = newHtml.__html;\n\t\t\t}\n\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\tif (oldHtml) dom.innerHTML = '';\n\n\t\t\tdiffChildren(\n\t\t\t\t// @ts-expect-error\n\t\t\t\tnewVNode.type == 'template' ? dom.content : dom,\n\t\t\t\tisArray(newChildren) ? newChildren : [newChildren],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tnodeType == 'foreignObject' ? XHTML_NAMESPACE : namespace,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating,\n\t\t\t\trefQueue\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != NULL) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tremoveNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// As above, don't diff props during hydration\n\t\tif (!isHydrating) {\n\t\t\ti = 'value';\n\t\t\tif (nodeType == 'progress' && inputValue == NULL) {\n\t\t\t\tdom.removeAttribute('value');\n\t\t\t} else if (\n\t\t\t\tinputValue != UNDEFINED &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(inputValue !== dom[i] ||\n\t\t\t\t\t(nodeType == 'progress' && !inputValue) ||\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType == 'option' && inputValue != oldProps[i]))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, i, inputValue, oldProps[i], namespace);\n\t\t\t}\n\n\t\t\ti = 'checked';\n\t\t\tif (checked != UNDEFINED && checked != dom[i]) {\n\t\t\t\tsetProperty(dom, i, checked, oldProps[i], namespace);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {Ref<any> & { _unmount?: unknown }} ref\n * @param {any} value\n * @param {VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') {\n\t\t\tlet hasRefUnmount = typeof ref._unmount == 'function';\n\t\t\tif (hasRefUnmount) {\n\t\t\t\t// @ts-ignore TS doesn't like moving narrowing checks into variables\n\t\t\t\tref._unmount();\n\t\t\t}\n\n\t\t\tif (!hasRefUnmount || value != NULL) {\n\t\t\t\t// Store the cleanup function on the function\n\t\t\t\t// instance object itself to avoid shape\n\t\t\t\t// transitioning vnode\n\t\t\t\tref._unmount = ref(value);\n\t\t\t}\n\t\t} else ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {VNode} vnode The virtual node to unmount\n * @param {VNode} parentVNode The parent of the VNode that initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current == vnode._dom) {\n\t\t\tapplyRef(r, NULL, parentVNode);\n\t\t}\n\t}\n\n\tif ((r = vnode._component) != NULL) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = NULL;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(\n\t\t\t\t\tr[i],\n\t\t\t\t\tparentVNode,\n\t\t\t\t\tskipRemove || typeof vnode.type != 'function'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove) {\n\t\tremoveNode(vnode._dom);\n\t}\n\n\tvnode._component = vnode._parent = vnode._dom = UNDEFINED;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n", "import { EMPTY_OBJ, NULL } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\t// https://github.com/preactjs/preact/issues/3794\n\tif (parentDom == document) {\n\t\tparentDom = document.documentElement;\n\t}\n\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode == 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? NULL\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = ((!isHydrating && replaceNode) || parentDom)._children =\n\t\tcreateElement(Fragment, NULL, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [],\n\t\trefQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.namespaceURI,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t\t? NULL\n\t\t\t\t: parentDom.firstChild\n\t\t\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t\t\t: NULL,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t\t? oldVNode._dom\n\t\t\t\t: parentDom.firstChild,\n\t\tisHydrating,\n\t\trefQueue\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode, refQueue);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n", "import { assign, slice } from './util';\nimport { createVNode } from './create-element';\nimport { NULL, UNDEFINED } from './constants';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its\n * children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Any additional arguments will be used\n * as replacement children.\n * @returns {import('./internal').VNode}\n */\nexport function cloneElement(vnode, props, children) {\n\tlet normalizedProps = assign({}, vnode.props),\n\t\tkey,\n\t\tref,\n\t\ti;\n\n\tlet defaultProps;\n\n\tif (vnode.type && vnode.type.defaultProps) {\n\t\tdefaultProps = vnode.type.defaultProps;\n\t}\n\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse if (props[i] === UNDEFINED && defaultProps != UNDEFINED) {\n\t\t\tnormalizedProps[i] = defaultProps[i];\n\t\t} else {\n\t\t\tnormalizedProps[i] = props[i];\n\t\t}\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\treturn createVNode(\n\t\tvnode.type,\n\t\tnormalizedProps,\n\t\tkey || vnode.key,\n\t\tref || vnode.ref,\n\t\tNULL\n\t);\n}\n", "import { NULL } from '../constants';\n\n/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw the error that was caught (except\n * for unmounting when this parameter is the highest parent that was being\n * unmounted)\n * @param {import('../internal').VNode} [oldVNode]\n * @param {import('../internal').ErrorInfo} [errorInfo]\n */\nexport function _catchError(error, vnode, oldVNode, errorInfo) {\n\t/** @type {import('../internal').Component} */\n\tlet component,\n\t\t/** @type {import('../internal').ComponentType} */\n\t\tctor,\n\t\t/** @type {boolean} */\n\t\thandled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != NULL) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != NULL) {\n\t\t\t\t\tcomponent.componentDidCatch(error, errorInfo || {});\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n", "import { options as _options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {import('./internal').Component} */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\n// Cast to use internal Options type\nconst options = /** @type {import('./internal').Options} */ (_options);\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\nlet oldRoot = options._root;\n\n// We take the minimum timeout for requestAnimationFrame to ensure that\n// the callback is invoked after the next frame. 35ms is based on a 30hz\n// refresh rate, which is the minimum rate for a smooth user experience.\nconst RAF_TIMEOUT = 35;\nlet prevRaf;\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._root = (vnode, parentDom) => {\n\tif (vnode && parentDom._children && parentDom._children._mask) {\n\t\tvnode._mask = parentDom._children._mask;\n\t}\n\n\tif (oldRoot) oldRoot(vnode, parentDom);\n};\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\tif (previousComponent === currentComponent) {\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentComponent._renderCallbacks = [];\n\t\t\thooks._list.forEach(hookItem => {\n\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t}\n\t\t\t\thookItem._pendingArgs = hookItem._nextValue = undefined;\n\t\t\t});\n\t\t} else {\n\t\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentIndex = 0;\n\t\t}\n\t}\n\tpreviousComponent = currentComponent;\n};\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tif (c.__hooks._pendingEffects.length) afterPaint(afterPaintEffects.push(c));\n\t\tc.__hooks._list.forEach(hookItem => {\n\t\t\tif (hookItem._pendingArgs) {\n\t\t\t\thookItem._args = hookItem._pendingArgs;\n\t\t\t}\n\t\t\thookItem._pendingArgs = undefined;\n\t\t});\n\t}\n\tpreviousComponent = currentComponent = null;\n};\n\n// TODO: Improve typing of commitQueue parameter\n/** @type {(vnode: import('./internal').VNode, commitQueue: any) => void} */\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tc.__hooks = undefined;\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({});\n\t}\n\n\treturn hooks._list[index];\n}\n\n/**\n * @template {unknown} S\n * @param {import('./index').Dispatch<import('./index').StateUpdater<S>>} [initialState]\n * @returns {[S, (state: S) => void]}\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @template {unknown} S\n * @template {unknown} A\n * @param {import('./index').Reducer<S, A>} reducer\n * @param {import('./index').Dispatch<import('./index').StateUpdater<S>>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ S, (state: S) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst currentValue = hookState._nextValue\n\t\t\t\t\t? hookState._nextValue[0]\n\t\t\t\t\t: hookState._value[0];\n\t\t\t\tconst nextValue = hookState._reducer(currentValue, action);\n\n\t\t\t\tif (currentValue !== nextValue) {\n\t\t\t\t\thookState._nextValue = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\n\t\tif (!currentComponent._hasScuFromHooks) {\n\t\t\tcurrentComponent._hasScuFromHooks = true;\n\t\t\tlet prevScu = currentComponent.shouldComponentUpdate;\n\t\t\tconst prevCWU = currentComponent.componentWillUpdate;\n\n\t\t\t// If we're dealing with a forced update `shouldComponentUpdate` will\n\t\t\t// not be called. But we use that to update the hook values, so we\n\t\t\t// need to call it.\n\t\t\tcurrentComponent.componentWillUpdate = function (p, s, c) {\n\t\t\t\tif (this._force) {\n\t\t\t\t\tlet tmp = prevScu;\n\t\t\t\t\t// Clear to avoid other sCU hooks from being called\n\t\t\t\t\tprevScu = undefined;\n\t\t\t\t\tupdateHookState(p, s, c);\n\t\t\t\t\tprevScu = tmp;\n\t\t\t\t}\n\n\t\t\t\tif (prevCWU) prevCWU.call(this, p, s, c);\n\t\t\t};\n\n\t\t\t// This SCU has the purpose of bailing out after repeated updates\n\t\t\t// to stateful hooks.\n\t\t\t// we store the next value in _nextValue[0] and keep doing that for all\n\t\t\t// state setters, if we have next states and\n\t\t\t// all next states within a component end up being equal to their original state\n\t\t\t// we are safe to bail out for this specific component.\n\t\t\t/**\n\t\t\t *\n\t\t\t * @type {import('./internal').Component[\"shouldComponentUpdate\"]}\n\t\t\t */\n\t\t\t// @ts-ignore - We don't use TS to downtranspile\n\t\t\t// eslint-disable-next-line no-inner-declarations\n\t\t\tfunction updateHookState(p, s, c) {\n\t\t\t\tif (!hookState._component.__hooks) return true;\n\n\t\t\t\t/** @type {(x: import('./internal').HookState) => x is import('./internal').ReducerHookState} */\n\t\t\t\tconst isStateHook = x => !!x._component;\n\t\t\t\tconst stateHooks =\n\t\t\t\t\thookState._component.__hooks._list.filter(isStateHook);\n\n\t\t\t\tconst allHooksEmpty = stateHooks.every(x => !x._nextValue);\n\t\t\t\t// When we have no updated hooks in the component we invoke the previous SCU or\n\t\t\t\t// traverse the VDOM tree further.\n\t\t\t\tif (allHooksEmpty) {\n\t\t\t\t\treturn prevScu ? prevScu.call(this, p, s, c) : true;\n\t\t\t\t}\n\n\t\t\t\t// We check whether we have components with a nextValue set that\n\t\t\t\t// have values that aren't equal to one another this pushes\n\t\t\t\t// us to update further down the tree\n\t\t\t\tlet shouldUpdate = hookState._component.props !== p;\n\t\t\t\tstateHooks.forEach(hookItem => {\n\t\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\t\tconst currentValue = hookItem._value[0];\n\t\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t\t\thookItem._nextValue = undefined;\n\t\t\t\t\t\tif (currentValue !== hookItem._value[0]) shouldUpdate = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn prevScu\n\t\t\t\t\t? prevScu.call(this, p, s, c) || shouldUpdate\n\t\t\t\t\t: shouldUpdate;\n\t\t\t}\n\n\t\t\tcurrentComponent.shouldComponentUpdate = updateHookState;\n\t\t}\n\t}\n\n\treturn hookState._nextValue || hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {unknown[]} args\n * @returns {void}\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {unknown[]} args\n * @returns {void}\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\n/** @type {(initialValue: unknown) => unknown} */\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {unknown[]} args\n * @returns {void}\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') {\n\t\t\t\tconst result = ref(createHandle());\n\t\t\t\treturn () => {\n\t\t\t\t\tref(null);\n\t\t\t\t\tif (result && typeof result == 'function') result();\n\t\t\t\t};\n\t\t\t} else if (ref) {\n\t\t\t\tref.current = createHandle();\n\t\t\t\treturn () => (ref.current = null);\n\t\t\t}\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @template {unknown} T\n * @param {() => T} factory\n * @param {unknown[]} args\n * @returns {T}\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState<T>} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._value = factory();\n\t\tstate._args = args;\n\t\tstate._factory = factory;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {unknown[]} args\n * @returns {() => void}\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(\n\t\t\tformatter ? formatter(value) : /** @type {any}*/ (value)\n\t\t);\n\t}\n}\n\n/**\n * @param {(error: unknown, errorInfo: import('preact').ErrorInfo) => void} cb\n * @returns {[unknown, () => void]}\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = (err, errorInfo) => {\n\t\t\tif (state._value) state._value(err, errorInfo);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\n/** @type {() => string} */\nexport function useId() {\n\t/** @type {import('./internal').IdHookState} */\n\tconst state = getHookState(currentIndex++, 11);\n\tif (!state._value) {\n\t\t// Grab either the root node or the nearest async boundary node.\n\t\t/** @type {import('./internal').VNode} */\n\t\tlet root = currentComponent._vnode;\n\t\twhile (root !== null && !root._mask && root._parent !== null) {\n\t\t\troot = root._parent;\n\t\t}\n\n\t\tlet mask = root._mask || (root._mask = [0, 0]);\n\t\tstate._value = 'P' + mask[0] + '-' + mask[1]++;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom || !component.__hooks) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n * @returns {void}\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').HookState} hook\n * @returns {void}\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n * @returns {void}\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {unknown[]} oldArgs\n * @param {unknown[]} newArgs\n * @returns {boolean}\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\n/**\n * @template Arg\n * @param {Arg} arg\n * @param {(arg: Arg) => any} f\n * @returns {any}\n */\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n", "// An named symbol/brand for detecting Signal instances even when they weren't\n// created using the same signals library version.\nconst BRAND_SYMBOL = Symbol.for(\"preact-signals\");\n\n// Flags for Computed and Effect.\nconst RUNNING = 1 << 0;\nconst NOTIFIED = 1 << 1;\nconst OUTDATED = 1 << 2;\nconst DISPOSED = 1 << 3;\nconst HAS_ERROR = 1 << 4;\nconst TRACKING = 1 << 5;\n\n// A linked list node used to track dependencies (sources) and dependents (targets).\n// Also used to remember the source's last version number that the target saw.\ntype Node = {\n\t// A source whose value the target depends on.\n\t_source: Signal;\n\t_prevSource?: Node;\n\t_nextSource?: Node;\n\n\t// A target that depends on the source and should be notified when the source changes.\n\t_target: Computed | Effect;\n\t_prevTarget?: Node;\n\t_nextTarget?: Node;\n\n\t// The version number of the source that target has last seen. We use version numbers\n\t// instead of storing the source value, because source values can take arbitrary amount\n\t// of memory, and computeds could hang on to them forever because they're lazily evaluated.\n\t// Use the special value -1 to mark potentially unused but recyclable nodes.\n\t_version: number;\n\n\t// Used to remember & roll back the source's previous `._node` value when entering &\n\t// exiting a new evaluation context.\n\t_rollbackNode?: Node;\n};\n\nfunction startBatch() {\n\tbatchDepth++;\n}\n\nfunction endBatch() {\n\tif (batchDepth > 1) {\n\t\tbatchDepth--;\n\t\treturn;\n\t}\n\n\tlet error: unknown;\n\tlet hasError = false;\n\n\twhile (batchedEffect !== undefined) {\n\t\tlet effect: Effect | undefined = batchedEffect;\n\t\tbatchedEffect = undefined;\n\n\t\tbatchIteration++;\n\n\t\twhile (effect !== undefined) {\n\t\t\tconst next: Effect | undefined = effect._nextBatchedEffect;\n\t\t\teffect._nextBatchedEffect = undefined;\n\t\t\teffect._flags &= ~NOTIFIED;\n\n\t\t\tif (!(effect._flags & DISPOSED) && needsToRecompute(effect)) {\n\t\t\t\ttry {\n\t\t\t\t\teffect._callback();\n\t\t\t\t} catch (err) {\n\t\t\t\t\tif (!hasError) {\n\t\t\t\t\t\terror = err;\n\t\t\t\t\t\thasError = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\teffect = next;\n\t\t}\n\t}\n\tbatchIteration = 0;\n\tbatchDepth--;\n\n\tif (hasError) {\n\t\tthrow error;\n\t}\n}\n\n/**\n * Combine multiple value updates into one \"commit\" at the end of the provided callback.\n *\n * Batches can be nested and changes are only flushed once the outermost batch callback\n * completes.\n *\n * Accessing a signal that has been modified within a batch will reflect its updated\n * value.\n *\n * @param fn The callback function.\n * @returns The value returned by the callback.\n */\nfunction batch<T>(fn: () => T): T {\n\tif (batchDepth > 0) {\n\t\treturn fn();\n\t}\n\t/*@__INLINE__**/ startBatch();\n\ttry {\n\t\treturn fn();\n\t} finally {\n\t\tendBatch();\n\t}\n}\n\n// Currently evaluated computed or effect.\nlet evalContext: Computed | Effect | undefined = undefined;\n\n/**\n * Run a callback function that can access signal values without\n * subscribing to the signal updates.\n *\n * @param fn The callback function.\n * @returns The value returned by the callback.\n */\nfunction untracked<T>(fn: () => T): T {\n\tconst prevContext = evalContext;\n\tevalContext = undefined;\n\ttry {\n\t\treturn fn();\n\t} finally {\n\t\tevalContext = prevContext;\n\t}\n}\n\n// Effects collected into a batch.\nlet batchedEffect: Effect | undefined = undefined;\nlet batchDepth = 0;\nlet batchIteration = 0;\n\n// A global version number for signals, used for fast-pathing repeated\n// computed.peek()/computed.value calls when nothing has changed globally.\nlet globalVersion = 0;\n\nfunction addDependency(signal: Signal): Node | undefined {\n\tif (evalContext === undefined) {\n\t\treturn undefined;\n\t}\n\n\tlet node = signal._node;\n\tif (node === undefined || node._target !== evalContext) {\n\t\t/**\n\t\t * `signal` is a new dependency. Create a new dependency node, and set it\n\t\t * as the tail of the current context's dependency list. e.g:\n\t\t *\n\t\t * { A <-> B       }\n\t\t *         ↑     ↑\n\t\t *        tail  node (new)\n\t\t *               ↓\n\t\t * { A <-> B <-> C }\n\t\t *               ↑\n\t\t *              tail (evalContext._sources)\n\t\t */\n\t\tnode = {\n\t\t\t_version: 0,\n\t\t\t_source: signal,\n\t\t\t_prevSource: evalContext._sources,\n\t\t\t_nextSource: undefined,\n\t\t\t_target: evalContext,\n\t\t\t_prevTarget: undefined,\n\t\t\t_nextTarget: undefined,\n\t\t\t_rollbackNode: node,\n\t\t};\n\n\t\tif (evalContext._sources !== undefined) {\n\t\t\tevalContext._sources._nextSource = node;\n\t\t}\n\t\tevalContext._sources = node;\n\t\tsignal._node = node;\n\n\t\t// Subscribe to change notifications from this dependency if we're in an effect\n\t\t// OR evaluating a computed signal that in turn has subscribers.\n\t\tif (evalContext._flags & TRACKING) {\n\t\t\tsignal._subscribe(node);\n\t\t}\n\t\treturn node;\n\t} else if (node._version === -1) {\n\t\t// `signal` is an existing dependency from a previous evaluation. Reuse it.\n\t\tnode._version = 0;\n\n\t\t/**\n\t\t * If `node` is not already the current tail of the dependency list (i.e.\n\t\t * there is a next node in the list), then make the `node` the new tail. e.g:\n\t\t *\n\t\t * { A <-> B <-> C <-> D }\n\t\t *         ↑           ↑\n\t\t *        node   ┌─── tail (evalContext._sources)\n\t\t *         └─────│─────┐\n\t\t *               ↓     ↓\n\t\t * { A <-> C <-> D <-> B }\n\t\t *                     ↑\n\t\t *                    tail (evalContext._sources)\n\t\t */\n\t\tif (node._nextSource !== undefined) {\n\t\t\tnode._nextSource._prevSource = node._prevSource;\n\n\t\t\tif (node._prevSource !== undefined) {\n\t\t\t\tnode._prevSource._nextSource = node._nextSource;\n\t\t\t}\n\n\t\t\tnode._prevSource = evalContext._sources;\n\t\t\tnode._nextSource = undefined;\n\n\t\t\tevalContext._sources!._nextSource = node;\n\t\t\tevalContext._sources = node;\n\t\t}\n\n\t\t// We can assume that the currently evaluated effect / computed signal is already\n\t\t// subscribed to change notifications from `signal` if needed.\n\t\treturn node;\n\t}\n\treturn undefined;\n}\n\n/**\n * The base class for plain and computed signals.\n */\n//\n// A function with the same name is defined later, so we need to ignore TypeScript's\n// warning about a redeclared variable.\n//\n// The class is declared here, but later implemented with ES5-style prototypes.\n// This enables better control of the transpiled output size.\n// @ts-ignore: \"Cannot redeclare exported variable 'Signal'.\"\ndeclare class Signal<T = any> {\n\t/** @internal */\n\t_value: unknown;\n\n\t/**\n\t * @internal\n\t * Version numbers should always be >= 0, because the special value -1 is used\n\t * by Nodes to signify potentially unused but recyclable nodes.\n\t */\n\t_version: number;\n\n\t/** @internal */\n\t_node?: Node;\n\n\t/** @internal */\n\t_targets?: Node;\n\n\tconstructor(value?: T, options?: SignalOptions<T>);\n\n\t/** @internal */\n\t_refresh(): boolean;\n\n\t/** @internal */\n\t_subscribe(node: Node): void;\n\n\t/** @internal */\n\t_unsubscribe(node: Node): void;\n\n\t/** @internal */\n\t_watched?(this: Signal<T>): void;\n\n\t/** @internal */\n\t_unwatched?(this: Signal<T>): void;\n\n\tsubscribe(fn: (value: T) => void): () => void;\n\n\tname?: string;\n\n\tvalueOf(): T;\n\n\ttoString(): string;\n\n\ttoJSON(): T;\n\n\tpeek(): T;\n\n\tbrand: typeof BRAND_SYMBOL;\n\n\tget value(): T;\n\tset value(value: T);\n}\n\nexport interface SignalOptions<T = any> {\n\twatched?: (this: Signal<T>) => void;\n\tunwatched?: (this: Signal<T>) => void;\n\tname?: string;\n}\n\n/** @internal */\n// A class with the same name has already been declared, so we need to ignore\n// TypeScript's warning about a redeclared variable.\n//\n// The previously declared class is implemented here with ES5-style prototypes.\n// This enables better control of the transpiled output size.\n// @ts-ignore: \"Cannot redeclare exported variable 'Signal'.\"\nfunction Signal(this: Signal, value?: unknown, options?: SignalOptions) {\n\tthis._value = value;\n\tthis._version = 0;\n\tthis._node = undefined;\n\tthis._targets = undefined;\n\tthis._watched = options?.watched;\n\tthis._unwatched = options?.unwatched;\n\tthis.name = options?.name;\n}\n\nSignal.prototype.brand = BRAND_SYMBOL;\n\nSignal.prototype._refresh = function () {\n\treturn true;\n};\n\nSignal.prototype._subscribe = function (node) {\n\tconst targets = this._targets;\n\tif (targets !== node && node._prevTarget === undefined) {\n\t\tnode._nextTarget = targets;\n\t\tthis._targets = node;\n\n\t\tif (targets !== undefined) {\n\t\t\ttargets._prevTarget = node;\n\t\t} else {\n\t\t\tuntracked(() => {\n\t\t\t\tthis._watched?.call(this);\n\t\t\t});\n\t\t}\n\t}\n};\n\nSignal.prototype._unsubscribe = function (node) {\n\t// Only run the unsubscribe step if the signal has any subscribers to begin with.\n\tif (this._targets !== undefined) {\n\t\tconst prev = node._prevTarget;\n\t\tconst next = node._nextTarget;\n\t\tif (prev !== undefined) {\n\t\t\tprev._nextTarget = next;\n\t\t\tnode._prevTarget = undefined;\n\t\t}\n\n\t\tif (next !== undefined) {\n\t\t\tnext._prevTarget = prev;\n\t\t\tnode._nextTarget = undefined;\n\t\t}\n\n\t\tif (node === this._targets) {\n\t\t\tthis._targets = next;\n\t\t\tif (next === undefined) {\n\t\t\t\tuntracked(() => {\n\t\t\t\t\tthis._unwatched?.call(this);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n};\n\nSignal.prototype.subscribe = function (fn) {\n\treturn effect(\n\t\t() => {\n\t\t\tconst value = this.value;\n\t\t\tconst prevContext = evalContext;\n\t\t\tevalContext = undefined;\n\t\t\ttry {\n\t\t\t\tfn(value);\n\t\t\t} finally {\n\t\t\t\tevalContext = prevContext;\n\t\t\t}\n\t\t},\n\t\t{ name: \"sub\" }\n\t);\n};\n\nSignal.prototype.valueOf = function () {\n\treturn this.value;\n};\n\nSignal.prototype.toString = function () {\n\treturn this.value + \"\";\n};\n\nSignal.prototype.toJSON = function () {\n\treturn this.value;\n};\n\nSignal.prototype.peek = function () {\n\tconst prevContext = evalContext;\n\tevalContext = undefined;\n\ttry {\n\t\treturn this.value;\n\t} finally {\n\t\tevalContext = prevContext;\n\t}\n};\n\nObject.defineProperty(Signal.prototype, \"value\", {\n\tget(this: Signal) {\n\t\tconst node = addDependency(this);\n\t\tif (node !== undefined) {\n\t\t\tnode._version = this._version;\n\t\t}\n\t\treturn this._value;\n\t},\n\tset(this: Signal, value) {\n\t\tif (value !== this._value) {\n\t\t\tif (batchIteration > 100) {\n\t\t\t\tthrow new Error(\"Cycle detected\");\n\t\t\t}\n\n\t\t\tthis._value = value;\n\t\t\tthis._version++;\n\t\t\tglobalVersion++;\n\n\t\t\t/**@__INLINE__*/ startBatch();\n\t\t\ttry {\n\t\t\t\tfor (\n\t\t\t\t\tlet node = this._targets;\n\t\t\t\t\tnode !== undefined;\n\t\t\t\t\tnode = node._nextTarget\n\t\t\t\t) {\n\t\t\t\t\tnode._target._notify();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tendBatch();\n\t\t\t}\n\t\t}\n\t},\n});\n\n/**\n * Create a new plain signal.\n *\n * @param value The initial value for the signal.\n * @returns A new signal.\n */\nexport function signal<T>(value: T, options?: SignalOptions<T>): Signal<T>;\nexport function signal<T = undefined>(): Signal<T | undefined>;\nexport function signal<T>(value?: T, options?: SignalOptions<T>): Signal<T> {\n\treturn new Signal(value, options);\n}\n\nfunction needsToRecompute(target: Computed | Effect): boolean {\n\t// Check the dependencies for changed values. The dependency list is already\n\t// in order of use. Therefore if multiple dependencies have changed values, only\n\t// the first used dependency is re-evaluated at this point.\n\tfor (\n\t\tlet node = target._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\tif (\n\t\t\t// If the dependency has definitely been updated since its version number\n\t\t\t// was observed, then we need to recompute. This first check is not strictly\n\t\t\t// necessary for correctness, but allows us to skip the refresh call if the\n\t\t\t// dependency has already been updated.\n\t\t\tnode._source._version !== node._version ||\n\t\t\t// Refresh the dependency. If there's something blocking the refresh (e.g. a\n\t\t\t// dependency cycle), then we need to recompute.\n\t\t\t!node._source._refresh() ||\n\t\t\t// If the dependency got a new version after the refresh, then we need to recompute.\n\t\t\tnode._source._version !== node._version\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\t}\n\t// If none of the dependencies have changed values since last recompute then\n\t// there's no need to recompute.\n\treturn false;\n}\n\nfunction prepareSources(target: Computed | Effect) {\n\t/**\n\t * 1. Mark all current sources as re-usable nodes (version: -1)\n\t * 2. Set a rollback node if the current node is being used in a different context\n\t * 3. Point 'target._sources' to the tail of the doubly-linked list, e.g:\n\t *\n\t *    { undefined <- A <-> B <-> C -> undefined }\n\t *                   ↑           ↑\n\t *                   │           └──────┐\n\t * target._sources = A; (node is head)  │\n\t *                   ↓                  │\n\t * target._sources = C; (node is tail) ─┘\n\t */\n\tfor (\n\t\tlet node = target._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\tconst rollbackNode = node._source._node;\n\t\tif (rollbackNode !== undefined) {\n\t\t\tnode._rollbackNode = rollbackNode;\n\t\t}\n\t\tnode._source._node = node;\n\t\tnode._version = -1;\n\n\t\tif (node._nextSource === undefined) {\n\t\t\ttarget._sources = node;\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nfunction cleanupSources(target: Computed | Effect) {\n\tlet node = target._sources;\n\tlet head: Node | undefined = undefined;\n\n\t/**\n\t * At this point 'target._sources' points to the tail of the doubly-linked list.\n\t * It contains all existing sources + new sources in order of use.\n\t * Iterate backwards until we find the head node while dropping old dependencies.\n\t */\n\twhile (node !== undefined) {\n\t\tconst prev = node._prevSource;\n\n\t\t/**\n\t\t * The node was not re-used, unsubscribe from its change notifications and remove itself\n\t\t * from the doubly-linked list. e.g:\n\t\t *\n\t\t * { A <-> B <-> C }\n\t\t *         ↓\n\t\t *    { A <-> C }\n\t\t */\n\t\tif (node._version === -1) {\n\t\t\tnode._source._unsubscribe(node);\n\n\t\t\tif (prev !== undefined) {\n\t\t\t\tprev._nextSource = node._nextSource;\n\t\t\t}\n\t\t\tif (node._nextSource !== undefined) {\n\t\t\t\tnode._nextSource._prevSource = prev;\n\t\t\t}\n\t\t} else {\n\t\t\t/**\n\t\t\t * The new head is the last node seen which wasn't removed/unsubscribed\n\t\t\t * from the doubly-linked list. e.g:\n\t\t\t *\n\t\t\t * { A <-> B <-> C }\n\t\t\t *   ↑     ↑     ↑\n\t\t\t *   │     │     └ head = node\n\t\t\t *   │     └ head = node\n\t\t\t *   └ head = node\n\t\t\t */\n\t\t\thead = node;\n\t\t}\n\n\t\tnode._source._node = node._rollbackNode;\n\t\tif (node._rollbackNode !== undefined) {\n\t\t\tnode._rollbackNode = undefined;\n\t\t}\n\n\t\tnode = prev;\n\t}\n\n\ttarget._sources = head;\n}\n\n/**\n * The base class for computed signals.\n */\ndeclare class Computed<T = any> extends Signal<T> {\n\t_fn: () => T;\n\t_sources?: Node;\n\t_globalVersion: number;\n\t_flags: number;\n\n\tconstructor(fn: () => T, options?: SignalOptions<T>);\n\n\t_notify(): void;\n\tget value(): T;\n}\n\n/** @internal */\nfunction Computed(this: Computed, fn: () => unknown, options?: SignalOptions) {\n\tSignal.call(this, undefined);\n\n\tthis._fn = fn;\n\tthis._sources = undefined;\n\tthis._globalVersion = globalVersion - 1;\n\tthis._flags = OUTDATED;\n\tthis._watched = options?.watched;\n\tthis._unwatched = options?.unwatched;\n\tthis.name = options?.name;\n}\n\nComputed.prototype = new Signal() as Computed;\n\nComputed.prototype._refresh = function () {\n\tthis._flags &= ~NOTIFIED;\n\n\tif (this._flags & RUNNING) {\n\t\treturn false;\n\t}\n\n\t// If this computed signal has subscribed to updates from its dependencies\n\t// (TRACKING flag set) and none of them have notified about changes (OUTDATED\n\t// flag not set), then the computed value can't have changed.\n\tif ((this._flags & (OUTDATED | TRACKING)) === TRACKING) {\n\t\treturn true;\n\t}\n\tthis._flags &= ~OUTDATED;\n\n\tif (this._globalVersion === globalVersion) {\n\t\treturn true;\n\t}\n\tthis._globalVersion = globalVersion;\n\n\t// Mark this computed signal running before checking the dependencies for value\n\t// changes, so that the RUNNING flag can be used to notice cyclical dependencies.\n\tthis._flags |= RUNNING;\n\tif (this._version > 0 && !needsToRecompute(this)) {\n\t\tthis._flags &= ~RUNNING;\n\t\treturn true;\n\t}\n\n\tconst prevContext = evalContext;\n\ttry {\n\t\tprepareSources(this);\n\t\tevalContext = this;\n\t\tconst value = this._fn();\n\t\tif (\n\t\t\tthis._flags & HAS_ERROR ||\n\t\t\tthis._value !== value ||\n\t\t\tthis._version === 0\n\t\t) {\n\t\t\tthis._value = value;\n\t\t\tthis._flags &= ~HAS_ERROR;\n\t\t\tthis._version++;\n\t\t}\n\t} catch (err) {\n\t\tthis._value = err;\n\t\tthis._flags |= HAS_ERROR;\n\t\tthis._version++;\n\t}\n\tevalContext = prevContext;\n\tcleanupSources(this);\n\tthis._flags &= ~RUNNING;\n\treturn true;\n};\n\nComputed.prototype._subscribe = function (node) {\n\tif (this._targets === undefined) {\n\t\tthis._flags |= OUTDATED | TRACKING;\n\n\t\t// A computed signal subscribes lazily to its dependencies when it\n\t\t// gets its first subscriber.\n\t\tfor (\n\t\t\tlet node = this._sources;\n\t\t\tnode !== undefined;\n\t\t\tnode = node._nextSource\n\t\t) {\n\t\t\tnode._source._subscribe(node);\n\t\t}\n\t}\n\tSignal.prototype._subscribe.call(this, node);\n};\n\nComputed.prototype._unsubscribe = function (node) {\n\t// Only run the unsubscribe step if the computed signal has any subscribers.\n\tif (this._targets !== undefined) {\n\t\tSignal.prototype._unsubscribe.call(this, node);\n\n\t\t// Computed signal unsubscribes from its dependencies when it loses its last subscriber.\n\t\t// This makes it possible for unreferences subgraphs of computed signals to get garbage collected.\n\t\tif (this._targets === undefined) {\n\t\t\tthis._flags &= ~TRACKING;\n\n\t\t\tfor (\n\t\t\t\tlet node = this._sources;\n\t\t\t\tnode !== undefined;\n\t\t\t\tnode = node._nextSource\n\t\t\t) {\n\t\t\t\tnode._source._unsubscribe(node);\n\t\t\t}\n\t\t}\n\t}\n};\n\nComputed.prototype._notify = function () {\n\tif (!(this._flags & NOTIFIED)) {\n\t\tthis._flags |= OUTDATED | NOTIFIED;\n\n\t\tfor (\n\t\t\tlet node = this._targets;\n\t\t\tnode !== undefined;\n\t\t\tnode = node._nextTarget\n\t\t) {\n\t\t\tnode._target._notify();\n\t\t}\n\t}\n};\n\nObject.defineProperty(Computed.prototype, \"value\", {\n\tget(this: Computed) {\n\t\tif (this._flags & RUNNING) {\n\t\t\tthrow new Error(\"Cycle detected\");\n\t\t}\n\t\tconst node = addDependency(this);\n\t\tthis._refresh();\n\t\tif (node !== undefined) {\n\t\t\tnode._version = this._version;\n\t\t}\n\t\tif (this._flags & HAS_ERROR) {\n\t\t\tthrow this._value;\n\t\t}\n\t\treturn this._value;\n\t},\n});\n\n/**\n * An interface for read-only signals.\n */\ninterface ReadonlySignal<T = any> {\n\treadonly value: T;\n\tpeek(): T;\n\n\tsubscribe(fn: (value: T) => void): () => void;\n\tvalueOf(): T;\n\ttoString(): string;\n\ttoJSON(): T;\n\tbrand: typeof BRAND_SYMBOL;\n}\n\n/**\n * Create a new signal that is computed based on the values of other signals.\n *\n * The returned computed signal is read-only, and its value is automatically\n * updated when any signals accessed from within the callback function change.\n *\n * @param fn The effect callback.\n * @returns A new read-only signal.\n */\nfunction computed<T>(\n\tfn: () => T,\n\toptions?: SignalOptions<T>\n): ReadonlySignal<T> {\n\treturn new Computed(fn, options);\n}\n\nfunction cleanupEffect(effect: Effect) {\n\tconst cleanup = effect._cleanup;\n\teffect._cleanup = undefined;\n\n\tif (typeof cleanup === \"function\") {\n\t\t/*@__INLINE__**/ startBatch();\n\n\t\t// Run cleanup functions always outside of any context.\n\t\tconst prevContext = evalContext;\n\t\tevalContext = undefined;\n\t\ttry {\n\t\t\tcleanup();\n\t\t} catch (err) {\n\t\t\teffect._flags &= ~RUNNING;\n\t\t\teffect._flags |= DISPOSED;\n\t\t\tdisposeEffect(effect);\n\t\t\tthrow err;\n\t\t} finally {\n\t\t\tevalContext = prevContext;\n\t\t\tendBatch();\n\t\t}\n\t}\n}\n\nfunction disposeEffect(effect: Effect) {\n\tfor (\n\t\tlet node = effect._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\tnode._source._unsubscribe(node);\n\t}\n\teffect._fn = undefined;\n\teffect._sources = undefined;\n\n\tcleanupEffect(effect);\n}\n\nfunction endEffect(this: Effect, prevContext?: Computed | Effect) {\n\tif (evalContext !== this) {\n\t\tthrow new Error(\"Out-of-order effect\");\n\t}\n\tcleanupSources(this);\n\tevalContext = prevContext;\n\n\tthis._flags &= ~RUNNING;\n\tif (this._flags & DISPOSED) {\n\t\tdisposeEffect(this);\n\t}\n\tendBatch();\n}\n\ntype EffectFn =\n\t| ((this: { dispose: () => void }) => void | (() => void))\n\t| (() => void | (() => void));\n\n/**\n * The base class for reactive effects.\n */\ndeclare class Effect {\n\t_fn?: EffectFn;\n\t_cleanup?: () => void;\n\t_sources?: Node;\n\t_nextBatchedEffect?: Effect;\n\t_flags: number;\n\tname?: string;\n\n\tconstructor(fn: EffectFn, options?: EffectOptions);\n\n\t_callback(): void;\n\t_start(): () => void;\n\t_notify(): void;\n\t_dispose(): void;\n\tdispose(): void;\n}\n\nexport interface EffectOptions {\n\tname?: string;\n}\n\n/** @internal */\nfunction Effect(this: Effect, fn: EffectFn, options?: EffectOptions) {\n\tthis._fn = fn;\n\tthis._cleanup = undefined;\n\tthis._sources = undefined;\n\tthis._nextBatchedEffect = undefined;\n\tthis._flags = TRACKING;\n\tthis.name = options?.name;\n}\n\nEffect.prototype._callback = function () {\n\tconst finish = this._start();\n\ttry {\n\t\tif (this._flags & DISPOSED) return;\n\t\tif (this._fn === undefined) return;\n\n\t\tconst cleanup = this._fn();\n\t\tif (typeof cleanup === \"function\") {\n\t\t\tthis._cleanup = cleanup;\n\t\t}\n\t} finally {\n\t\tfinish();\n\t}\n};\n\nEffect.prototype._start = function () {\n\tif (this._flags & RUNNING) {\n\t\tthrow new Error(\"Cycle detected\");\n\t}\n\tthis._flags |= RUNNING;\n\tthis._flags &= ~DISPOSED;\n\tcleanupEffect(this);\n\tprepareSources(this);\n\n\t/*@__INLINE__**/ startBatch();\n\tconst prevContext = evalContext;\n\tevalContext = this;\n\treturn endEffect.bind(this, prevContext);\n};\n\nEffect.prototype._notify = function () {\n\tif (!(this._flags & NOTIFIED)) {\n\t\tthis._flags |= NOTIFIED;\n\t\tthis._nextBatchedEffect = batchedEffect;\n\t\tbatchedEffect = this;\n\t}\n};\n\nEffect.prototype._dispose = function () {\n\tthis._flags |= DISPOSED;\n\n\tif (!(this._flags & RUNNING)) {\n\t\tdisposeEffect(this);\n\t}\n};\n\nEffect.prototype.dispose = function () {\n\tthis._dispose();\n};\n/**\n * Create an effect to run arbitrary code in response to signal changes.\n *\n * An effect tracks which signals are accessed within the given callback\n * function `fn`, and re-runs the callback when those signals change.\n *\n * The callback may return a cleanup function. The cleanup function gets\n * run once, either when the callback is next called or when the effect\n * gets disposed, whichever happens first.\n *\n * @param fn The effect callback.\n * @returns A function for disposing the effect.\n */\nfunction effect(fn: EffectFn, options?: EffectOptions): () => void {\n\tconst effect = new Effect(fn, options);\n\ttry {\n\t\teffect._callback();\n\t} catch (err) {\n\t\teffect._dispose();\n\t\tthrow err;\n\t}\n\t// Return a bound function instead of a wrapper like `() => effect._dispose()`,\n\t// because bound functions seem to be just as fast and take up a lot less memory.\n\tconst dispose = effect._dispose.bind(effect);\n\t(dispose as any)[Symbol.dispose] = dispose;\n\treturn dispose as any;\n}\n\nexport {\n\tcomputed,\n\teffect,\n\tbatch,\n\tuntracked,\n\tSignal,\n\tReadonlySignal,\n\tEffect,\n\tComputed,\n};\n", "import { options, Component, isValidElement, Fragment } from \"preact\";\nimport { useRef, useMemo, useEffect, useState } from \"preact/hooks\";\nimport {\n\tsignal,\n\tcomputed,\n\tbatch,\n\teffect,\n\tSignal,\n\ttype ReadonlySignal,\n\tuntracked,\n\tSignalOptions,\n\tEffectOptions,\n} from \"@preact/signals-core\";\nimport {\n\tVNode,\n\tOptionsTypes,\n\tHookFn,\n\tEffect,\n\tPropertyUpdater,\n\tAugmentedComponent,\n\tAugmentedElement as Element,\n} from \"./internal\";\n\nexport {\n\tsignal,\n\tcomputed,\n\tbatch,\n\teffect,\n\tSignal,\n\ttype ReadonlySignal,\n\tuntracked,\n};\n\nconst HAS_PENDING_UPDATE = 1 << 0;\nconst HAS_HOOK_STATE = 1 << 1;\nconst HAS_COMPUTEDS = 1 << 2;\n\nlet oldNotify: (this: Effect) => void,\n\teffectsQueue: Array<Effect> = [],\n\tdomQueue: Array<Effect> = [];\n\n// Capture the original `Effect.prototype._notify` method so that we can install\n// custom `._notify`s for each different use-case but still call the original\n// implementation in the end. Dispose the temporary effect immediately afterwards.\neffect(function (this: Effect) {\n\toldNotify = this._notify;\n})();\n\n// Install a Preact options hook\nfunction hook<T extends OptionsTypes>(hookName: T, hookFn: HookFn<T>) {\n\t// @ts-ignore-next-line private options hooks usage\n\toptions[hookName] = hookFn.bind(null, options[hookName] || (() => {}));\n}\n\nlet currentComponent: AugmentedComponent | undefined;\nlet finishUpdate: (() => void) | undefined;\n\nfunction setCurrentUpdater(updater?: Effect) {\n\t// end tracking for the current update:\n\tif (finishUpdate) finishUpdate();\n\t// start tracking the new update:\n\tfinishUpdate = updater && updater._start();\n}\n\nfunction createUpdater(update: () => void) {\n\tlet updater!: Effect;\n\teffect(function (this: Effect) {\n\t\tupdater = this;\n\t});\n\tupdater._callback = update;\n\treturn updater;\n}\n\n/** @todo This may be needed for complex prop value detection. */\n// function isSignalValue(value: any): value is Signal {\n// \tif (typeof value !== \"object\" || value == null) return false;\n// \tif (value instanceof Signal) return true;\n// \t// @TODO: uncomment this when we land Reactive (ideally behind a brand check)\n// \t// for (let i in value) if (value[i] instanceof Signal) return true;\n// \treturn false;\n// }\n\n/**\n * A wrapper component that renders a Signal directly as a Text node.\n * @todo: in Preact 11, just decorate Signal with `type:null`\n */\nfunction SignalValue(this: AugmentedComponent, { data }: { data: Signal }) {\n\t// hasComputeds.add(this);\n\n\t// Store the props.data signal in another signal so that\n\t// passing a new signal reference re-runs the text computed:\n\tconst currentSignal = useSignal(data);\n\tcurrentSignal.value = data;\n\n\tconst [isText, s] = useMemo(() => {\n\t\tlet self = this;\n\t\t// mark the parent component as having computeds so it gets optimized\n\t\tlet v = this.__v;\n\t\twhile ((v = v.__!)) {\n\t\t\tif (v.__c) {\n\t\t\t\tv.__c._updateFlags |= HAS_COMPUTEDS;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tconst wrappedSignal = computed(() => {\n\t\t\tlet s = currentSignal.value.value;\n\t\t\treturn s === 0 ? 0 : s === true ? \"\" : s || \"\";\n\t\t});\n\n\t\tconst isText = computed(\n\t\t\t() =>\n\t\t\t\t!Array.isArray(wrappedSignal.value) &&\n\t\t\t\t!isValidElement(wrappedSignal.value)\n\t\t);\n\t\t// Update text nodes directly without rerendering when the new value\n\t\t// is also text.\n\t\tconst dispose = effect(function (this: Effect) {\n\t\t\tthis._notify = notifyDomUpdates;\n\n\t\t\t// Subscribe to wrappedSignal updates only when its values are text...\n\t\t\tif (isText.value) {\n\t\t\t\t// ...but regardless of `self.base`'s current value, as it can be\n\t\t\t\t// undefined before mounting or a non-text node. In both of those cases\n\t\t\t\t// the update gets handled by a full rerender.\n\t\t\t\tconst value = wrappedSignal.value;\n\t\t\t\tif (self.__v && self.__v.__e && self.__v.__e.nodeType === 3) {\n\t\t\t\t\t(self.__v.__e as Text).data = value;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// Piggyback this._updater's disposal to ensure that the text updater effect\n\t\t// above also gets disposed on unmount.\n\t\tconst oldDispose = this._updater!._dispose;\n\t\tthis._updater!._dispose = function () {\n\t\t\tdispose();\n\t\t\toldDispose.call(this);\n\t\t};\n\n\t\treturn [isText, wrappedSignal];\n\t}, []);\n\n\t// Rerender the component whenever `data.value` changes from a VNode\n\t// to another VNode, from text to a VNode, or from a VNode to text.\n\t// That is, everything else except text-to-text updates.\n\t//\n\t// This also ensures that the backing DOM node types gets updated to\n\t// text nodes and back when needed.\n\t//\n\t// For text-to-text updates, `.peek()` is used to skip full rerenders,\n\t// leaving them to the optimized path above.\n\treturn isText.value ? s.peek() : s.value;\n}\n\nSignalValue.displayName = \"ReactiveTextNode\";\n\nObject.defineProperties(Signal.prototype, {\n\tconstructor: { configurable: true, value: undefined },\n\ttype: { configurable: true, value: SignalValue },\n\tprops: {\n\t\tconfigurable: true,\n\t\tget() {\n\t\t\treturn { data: this };\n\t\t},\n\t},\n\t// Setting a VNode's _depth to 1 forces Preact to clone it before modifying:\n\t// https://github.com/preactjs/preact/blob/d7a433ee8463a7dc23a05111bb47de9ec729ad4d/src/diff/children.js#L77\n\t// @todo remove this for Preact 11\n\t__b: { configurable: true, value: 1 },\n});\n\n/** Inject low-level property/attribute bindings for Signals into Preact's diff */\nhook(OptionsTypes.DIFF, (old, vnode) => {\n\tif (\n\t\ttypeof vnode.type === \"function\" &&\n\t\ttypeof window !== \"undefined\" &&\n\t\twindow.__PREACT_SIGNALS_DEVTOOLS__\n\t) {\n\t\twindow.__PREACT_SIGNALS_DEVTOOLS__.exitComponent();\n\t}\n\n\tif (typeof vnode.type === \"string\") {\n\t\tlet signalProps: Record<string, any> | undefined;\n\n\t\tlet props = vnode.props;\n\t\tfor (let i in props) {\n\t\t\tif (i === \"children\") continue;\n\n\t\t\tlet value = props[i];\n\t\t\tif (value instanceof Signal) {\n\t\t\t\tif (!signalProps) vnode.__np = signalProps = {};\n\t\t\t\tsignalProps[i] = value;\n\t\t\t\tprops[i] = value.peek();\n\t\t\t}\n\t\t}\n\t}\n\n\told(vnode);\n});\n\n/** Set up Updater before rendering a component */\nhook(OptionsTypes.RENDER, (old, vnode) => {\n\tif (\n\t\ttypeof vnode.type === \"function\" &&\n\t\ttypeof window !== \"undefined\" &&\n\t\twindow.__PREACT_SIGNALS_DEVTOOLS__\n\t) {\n\t\twindow.__PREACT_SIGNALS_DEVTOOLS__.enterComponent(\n\t\t\tvnode.type.displayName || vnode.type.name || \"Unknown\"\n\t\t);\n\t}\n\n\t// Ignore the Fragment inserted by preact.createElement().\n\tif (vnode.type !== Fragment) {\n\t\tsetCurrentUpdater();\n\n\t\tlet updater;\n\n\t\tlet component = vnode.__c;\n\t\tif (component) {\n\t\t\tcomponent._updateFlags &= ~HAS_PENDING_UPDATE;\n\n\t\t\tupdater = component._updater;\n\t\t\tif (updater === undefined) {\n\t\t\t\tcomponent._updater = updater = createUpdater(() => {\n\t\t\t\t\tcomponent._updateFlags |= HAS_PENDING_UPDATE;\n\t\t\t\t\tcomponent.setState({});\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tcurrentComponent = component;\n\t\tsetCurrentUpdater(updater);\n\t}\n\n\told(vnode);\n});\n\n/** Finish current updater if a component errors */\nhook(OptionsTypes.CATCH_ERROR, (old, error, vnode, oldVNode) => {\n\tif (typeof window !== \"undefined\" && window.__PREACT_SIGNALS_DEVTOOLS__) {\n\t\twindow.__PREACT_SIGNALS_DEVTOOLS__.exitComponent();\n\t}\n\n\tsetCurrentUpdater();\n\tcurrentComponent = undefined;\n\told(error, vnode, oldVNode);\n});\n\n/** Finish current updater after rendering any VNode */\nhook(OptionsTypes.DIFFED, (old, vnode) => {\n\tif (\n\t\ttypeof vnode.type === \"function\" &&\n\t\ttypeof window !== \"undefined\" &&\n\t\twindow.__PREACT_SIGNALS_DEVTOOLS__\n\t) {\n\t\twindow.__PREACT_SIGNALS_DEVTOOLS__.exitComponent();\n\t}\n\n\tsetCurrentUpdater();\n\tcurrentComponent = undefined;\n\n\tlet dom: Element;\n\n\t// vnode._dom is undefined during string rendering,\n\t// so we use this to skip prop subscriptions during SSR.\n\tif (typeof vnode.type === \"string\" && (dom = vnode.__e as Element)) {\n\t\tlet props = vnode.__np;\n\t\tlet renderedProps = vnode.props;\n\t\tif (props) {\n\t\t\tlet updaters = dom._updaters;\n\t\t\tif (updaters) {\n\t\t\t\tfor (let prop in updaters) {\n\t\t\t\t\tlet updater = updaters[prop];\n\t\t\t\t\tif (updater !== undefined && !(prop in props)) {\n\t\t\t\t\t\tupdater._dispose();\n\t\t\t\t\t\t// @todo we could just always invoke _dispose() here\n\t\t\t\t\t\tupdaters[prop] = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tupdaters = {};\n\t\t\t\tdom._updaters = updaters;\n\t\t\t}\n\t\t\tfor (let prop in props) {\n\t\t\t\tlet updater = updaters[prop];\n\t\t\t\tlet signal = props[prop];\n\t\t\t\tif (updater === undefined) {\n\t\t\t\t\tupdater = createPropUpdater(dom, prop, signal, renderedProps);\n\t\t\t\t\tupdaters[prop] = updater;\n\t\t\t\t} else {\n\t\t\t\t\tupdater._update(signal, renderedProps);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\told(vnode);\n});\n\nfunction createPropUpdater(\n\tdom: Element,\n\tprop: string,\n\tpropSignal: Signal,\n\tprops: Record<string, any>\n): PropertyUpdater {\n\tconst setAsProperty =\n\t\tprop in dom &&\n\t\t// SVG elements need to go through `setAttribute` because they\n\t\t// expect things like SVGAnimatedTransformList instead of strings.\n\t\t// @ts-ignore\n\t\tdom.ownerSVGElement === undefined;\n\n\tconst changeSignal = signal(propSignal);\n\treturn {\n\t\t_update: (newSignal: Signal, newProps: typeof props) => {\n\t\t\tchangeSignal.value = newSignal;\n\t\t\tprops = newProps;\n\t\t},\n\t\t_dispose: effect(function (this: Effect) {\n\t\t\tthis._notify = notifyDomUpdates;\n\t\t\tconst value = changeSignal.value.value;\n\t\t\t// If Preact just rendered this value, don't render it again:\n\t\t\tif (props[prop] === value) return;\n\t\t\tprops[prop] = value;\n\t\t\tif (setAsProperty) {\n\t\t\t\t// @ts-ignore-next-line silly\n\t\t\t\tdom[prop] = value;\n\t\t\t} else if (value) {\n\t\t\t\tdom.setAttribute(prop, value);\n\t\t\t} else {\n\t\t\t\tdom.removeAttribute(prop);\n\t\t\t}\n\t\t}),\n\t};\n}\n\n/** Unsubscribe from Signals when unmounting components/vnodes */\nhook(OptionsTypes.UNMOUNT, (old, vnode: VNode) => {\n\tif (typeof vnode.type === \"string\") {\n\t\tlet dom = vnode.__e as Element | undefined;\n\t\t// vnode._dom is undefined during string rendering\n\t\tif (dom) {\n\t\t\tconst updaters = dom._updaters;\n\t\t\tif (updaters) {\n\t\t\t\tdom._updaters = undefined;\n\t\t\t\tfor (let prop in updaters) {\n\t\t\t\t\tlet updater = updaters[prop];\n\t\t\t\t\tif (updater) updater._dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\tlet component = vnode.__c;\n\t\tif (component) {\n\t\t\tconst updater = component._updater;\n\t\t\tif (updater) {\n\t\t\t\tcomponent._updater = undefined;\n\t\t\t\tupdater._dispose();\n\t\t\t}\n\t\t}\n\t}\n\told(vnode);\n});\n\n/** Mark components that use hook state so we can skip sCU optimization. */\nhook(OptionsTypes.HOOK, (old, component, index, type) => {\n\tif (type < 3 || type === 9)\n\t\t(component as AugmentedComponent)._updateFlags |= HAS_HOOK_STATE;\n\told(component, index, type);\n});\n\n/**\n * Auto-memoize components that use Signals/Computeds.\n * Note: Does _not_ optimize components that use hook/class state.\n */\nComponent.prototype.shouldComponentUpdate = function (\n\tthis: AugmentedComponent,\n\tprops,\n\tstate\n) {\n\t// @todo: Once preactjs/preact#3671 lands, this could just use `currentUpdater`:\n\tconst updater = this._updater;\n\tconst hasSignals = updater && updater._sources !== undefined;\n\n\t// If this is a component using state, rerender\n\t// @ts-ignore\n\tfor (let i in state) return true;\n\n\tif (this.__f || (typeof this.u == \"boolean\" && this.u === true)) {\n\t\tconst hasHooksState = this._updateFlags & HAS_HOOK_STATE;\n\t\t// if this component used no signals or computeds and no hooks state, update:\n\t\tif (!hasSignals && !hasHooksState && !(this._updateFlags & HAS_COMPUTEDS))\n\t\t\treturn true;\n\n\t\t// if there is a pending re-render triggered from Signals,\n\t\t// or if there is hooks state, update:\n\t\tif (this._updateFlags & HAS_PENDING_UPDATE) return true;\n\t} else {\n\t\t// if this component used no signals or computeds, update:\n\t\tif (!hasSignals && !(this._updateFlags & HAS_COMPUTEDS)) return true;\n\n\t\t// if there is a pending re-render triggered from Signals,\n\t\t// or if there is hooks state, update:\n\t\tif (this._updateFlags & (HAS_PENDING_UPDATE | HAS_HOOK_STATE)) return true;\n\t}\n\n\t// if any non-Signal props changed, update:\n\tfor (let i in props) {\n\t\tif (i !== \"__source\" && props[i] !== this.props[i]) return true;\n\t}\n\tfor (let i in this.props) if (!(i in props)) return true;\n\n\t// this is a purely Signal-driven component, don't update:\n\treturn false;\n};\n\nexport function useSignal<T>(value: T, options?: SignalOptions<T>): Signal<T>;\nexport function useSignal<T = undefined>(): Signal<T | undefined>;\nexport function useSignal<T>(value?: T, options?: SignalOptions<T>) {\n\treturn useState(() =>\n\t\tsignal<T | undefined>(value, options as SignalOptions)\n\t)[0];\n}\n\nexport function useComputed<T>(compute: () => T, options?: SignalOptions<T>) {\n\tconst $compute = useRef(compute);\n\t$compute.current = compute;\n\t(currentComponent as AugmentedComponent)._updateFlags |= HAS_COMPUTEDS;\n\treturn useMemo(() => computed<T>(() => $compute.current(), options), []);\n}\n\nfunction safeRaf(callback: () => void) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tcancelAnimationFrame(raf);\n\t\tcallback();\n\t};\n\n\tconst timeout = setTimeout(done, 35);\n\tconst raf = requestAnimationFrame(done);\n}\n\nconst deferEffects =\n\ttypeof requestAnimationFrame === \"undefined\" ? setTimeout : safeRaf;\n\nconst deferDomUpdates = (cb: any) => {\n\tqueueMicrotask(() => {\n\t\tqueueMicrotask(cb);\n\t});\n};\n\nfunction flushEffects() {\n\tbatch(() => {\n\t\tlet inst: Effect | undefined;\n\t\twhile ((inst = effectsQueue.shift())) {\n\t\t\toldNotify.call(inst);\n\t\t}\n\t});\n}\n\nfunction notifyEffects(this: Effect) {\n\tif (effectsQueue.push(this) === 1) {\n\t\t(options.requestAnimationFrame || deferEffects)(flushEffects);\n\t}\n}\n\nfunction flushDomUpdates() {\n\tbatch(() => {\n\t\tlet inst: Effect | undefined;\n\t\twhile ((inst = domQueue.shift())) {\n\t\t\toldNotify.call(inst);\n\t\t}\n\t});\n}\n\nfunction notifyDomUpdates(this: Effect) {\n\tif (domQueue.push(this) === 1) {\n\t\t(options.requestAnimationFrame || deferDomUpdates)(flushDomUpdates);\n\t}\n}\n\nexport function useSignalEffect(\n\tcb: () => void | (() => void),\n\toptions?: EffectOptions\n) {\n\tconst callback = useRef(cb);\n\tcallback.current = cb;\n\n\tuseEffect(() => {\n\t\treturn effect(function (this: Effect) {\n\t\t\tthis._notify = notifyEffects;\n\t\t\treturn callback.current();\n\t\t}, options);\n\t}, []);\n}\n\n/**\n * @todo Determine which Reactive implementation we'll be using.\n * @internal\n */\n// export function useReactive<T extends object>(value: T): Reactive<T> {\n// \treturn useMemo(() => reactive<T>(value), []);\n// }\n\n/**\n * @internal\n * Update a Reactive's using the properties of an object or other Reactive.\n * Also works for Signals.\n * @example\n *   // Update a Reactive with Object.assign()-like syntax:\n *   const r = reactive({ name: \"Alice\" });\n *   update(r, { name: \"Bob\" });\n *   update(r, { age: 42 }); // property 'age' does not exist in type '{ name?: string }'\n *   update(r, 2); // '2' has no properties in common with '{ name?: string }'\n *   console.log(r.name.value); // \"Bob\"\n *\n * @example\n *   // Update a Reactive with the properties of another Reactive:\n *   const A = reactive({ name: \"Alice\" });\n *   const B = reactive({ name: \"Bob\", age: 42 });\n *   update(A, B);\n *   console.log(`${A.name} is ${A.age}`); // \"Bob is 42\"\n *\n * @example\n *   // Update a signal with assign()-like syntax:\n *   const s = signal(42);\n *   update(s, \"hi\"); // Argument type 'string' not assignable to type 'number'\n *   update(s, {}); // Argument type '{}' not assignable to type 'number'\n *   update(s, 43);\n *   console.log(s.value); // 43\n *\n * @param obj The Reactive or Signal to be updated\n * @param update The value, Signal, object or Reactive to update `obj` to match\n * @param overwrite If `true`, any properties `obj` missing from `update` are set to `undefined`\n */\n/*\nexport function update<T extends SignalOrReactive>(\n\tobj: T,\n\tupdate: Partial<Unwrap<T>>,\n\toverwrite = false\n) {\n\tif (obj instanceof Signal) {\n\t\tobj.value = peekValue(update);\n\t} else {\n\t\tfor (let i in update) {\n\t\t\tif (i in obj) {\n\t\t\t\tobj[i].value = peekValue(update[i]);\n\t\t\t} else {\n\t\t\t\tlet sig = signal(peekValue(update[i]));\n\t\t\t\tsig[KEY] = i;\n\t\t\t\tobj[i] = sig;\n\t\t\t}\n\t\t}\n\t\tif (overwrite) {\n\t\t\tfor (let i in obj) {\n\t\t\t\tif (!(i in update)) {\n\t\t\t\t\tobj[i].value = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n*/\n", "import { signal, computed } from '@preact/signals';\n\n// Loading state - starts as true until we get initial worktree detection\nexport const isLoadingWorktreeInfo = signal(true);\nexport const isInWorktree = signal(false);\nexport const currentThreadId = signal<string | undefined>(undefined);\nexport const worktreeName = signal<string | undefined>(undefined);\nexport const setupPhase = signal<'idle' | 'setting_up' | 'ready' | 'error'>(\n  'idle'\n);\nexport const selectedThreadId = signal<string | undefined>(undefined);\nexport const searchText = signal('');\nexport const clientRequestId = signal<string>(\n  typeof crypto !== 'undefined' && 'randomUUID' in crypto\n    ? crypto.randomUUID()\n    : 'client-' + Math.random().toString(16).slice(2)\n);\nexport const sseBaseMain = signal<string | undefined>(undefined);\nexport const sseBaseWorktree = signal<string | undefined>(undefined);\n\nexport const baseUrl = computed(() =>\n  isInWorktree.value\n    ? 'http://localhost:3000/larry/agents/google/v1'\n    : 'http://localhost:4210/larry/agents/google/v1'\n);\n", "import React from 'react';\nimport { useMemo, useState } from 'preact/hooks';\nimport { useThreadsQuery } from '../hooks/useThreadsQuery';\nimport { baseUrl, searchText, selectedThreadId, setupPhase } from '../signals/store';\nimport { postMessage } from '../lib/vscode';\nimport type { ThreadListItem } from '../lib/backend-types';\nimport { ThreadsList } from './components/ThreadsList';\nimport { AnimatedEllipsis } from './components/AnimatedEllipsis';\n\nexport function MainRepoScreen() {\n  const { data, isLoading } = useThreadsQuery(baseUrl.value);\n  const [newLabel, setNewLabel] = useState('');\n  const [newWorktree, setNewWorktree] = useState('');\n\n  const items = data?.items ?? [];\n  const filtered = useMemo(() => {\n    const q = searchText.value.toLowerCase();\n    if (!q) return items;\n    return items.filter((t) => (t.label + ' ' + t.worktreeName).toLowerCase().includes(q));\n  }, [items, searchText.value]);\n\n  const selected: ThreadListItem | undefined = useMemo(() => {\n    if (!selectedThreadId.value) return undefined;\n    return items.find((t) => t.id === selectedThreadId.value);\n  }, [items, selectedThreadId.value]);\n\n  function openWorktreeExisting() {\n    if (!selected) return;\n    postMessage({\n      type: 'open_worktree',\n      worktreeName: selected.worktreeName,\n      threadId: selected.id,\n      label: selected.label,\n    });\n    setupPhase.value = 'setting_up';\n  }\n\n  function openWorktreeNew() {\n    if (!newLabel.trim()) return;\n    postMessage({ type: 'open_worktree', worktreeName: newWorktree || '', threadId: '', label: newLabel.trim() });\n    setupPhase.value = 'setting_up';\n  }\n\n  return (\n    <div className=\"Box d-flex flex-column gap-3 p-3\">\n      <div className=\"d-flex flex-justify-between flex-items-center\">\n        <h2 className=\"h3 m-0\">Threads</h2>\n      </div>\n      <div className=\"width-full mb-1 mt-1\">\n          <input\n            className=\"form-control input-sm width-full\"\n            placeholder=\"Search threads...\"\n            value={searchText.value}\n            onInput={(e) => (searchText.value = (e.currentTarget as HTMLInputElement).value)}\n          />\n        </div>\n\n      {isLoading ? (\n        <div className=\"color-fg-muted\">Loading threads\u2026</div>\n      ) : (\n        <ThreadsList items={filtered} selectedId={selectedThreadId.value} onSelect={(id) => (selectedThreadId.value = id)} />\n      )}\n\n      {selectedThreadId.value ? (\n        <div className=\"border-top pt-3 mt-2\">\n        <button className=\"btn btn-primary\" disabled={!selected || setupPhase.value === 'setting_up'} onClick={openWorktreeExisting}>\n          {setupPhase.value === 'setting_up' ? (\n            <>Setting up <AnimatedEllipsis /></>\n          ) : (\n            'Open worktree'\n          )}\n        </button>\n      </div>\n      ): null}\n\n      <div className=\"border-top pt-3 mt-2\">\n        <h4 className=\"h4\">Or create a new thread</h4>\n        <div className=\"width-full mb-2\">\n          <input\n            className=\"form-control input-sm flex-1 width-full\"\n            placeholder=\"Thread label (required)\"\n            value={newLabel}\n            onInput={(e) => setNewLabel((e.currentTarget as HTMLInputElement).value)}\n          />\n          </div>\n          <div>\n          <button className={`btn ${newLabel.trim() ? 'btn-primary' : ''}`} disabled={!newLabel.trim() || setupPhase.value === 'setting_up'} onClick={openWorktreeNew}>\n            {setupPhase.value === 'setting_up' ? (\n              <>Setting up <AnimatedEllipsis /></>\n            ) : (\n              'Open worktree'\n            )}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n", "import type { ThreadsListResponse, MachineResponse } from './backend-types';\n\nexport async function fetchJSON<T>(\n  url: string,\n  init?: RequestInit\n): Promise<T> {\n  const res = await fetch(url, init);\n  if (!res.ok) {\n    const text = await res.text();\n    throw new Error(\n      `${res.status} ${res.statusText}: ${text || 'request failed'}`\n    );\n  }\n  return res.json() as Promise<T>;\n}\n\nexport function withHeaders(\n  base: RequestInit = {},\n  extra: Record<string, string> = {}\n): RequestInit {\n  const headers = new Headers(base.headers || {});\n  Object.entries(extra).forEach(([k, v]) => headers.set(k, v));\n  return { ...base, headers };\n}\n\nexport function uuid(): string {\n  if (typeof crypto !== 'undefined' && 'randomUUID' in crypto)\n    return crypto.randomUUID();\n  // tiny fallback\n  return 'id-' + Math.random().toString(16).slice(2) + Date.now().toString(16);\n}\n\nexport async function fetchThreads(\n  baseUrl: string\n): Promise<ThreadsListResponse> {\n  return fetchJSON<ThreadsListResponse>(`${baseUrl}/threads`);\n}\n\nexport async function fetchMachine(\n  baseUrl: string,\n  machineId: string\n): Promise<MachineResponse> {\n  return fetchJSON<MachineResponse>(\n    `${baseUrl}/machines/${encodeURIComponent(machineId)}`\n  );\n}\n\nexport async function createThread(params: {\n  baseUrl: string;\n  worktreeName: string;\n  userTask: string;\n  label?: string;\n  clientRequestId: string;\n}): Promise<void> {\n  const { baseUrl, worktreeName, userTask, label, clientRequestId } = params;\n  const idem = uuid();\n  const init = withHeaders(\n    {\n      method: 'POST',\n      body: JSON.stringify({ worktreeName, userTask, label }),\n    },\n    {\n      'Content-Type': 'application/json',\n      'Idempotency-Key': idem,\n      'Client-Request-Id': clientRequestId,\n    }\n  );\n  // We don't need the 202 body now - SSE will inform us\n  await fetchJSON(`${baseUrl}/threads/new`, init);\n}\n", "import { useQuery } from '@tanstack/react-query';\nimport { fetchThreads } from '../lib/http';\n\nexport function useThreadsQuery(baseUrl: string) {\n  return useQuery({\n    queryKey: ['threads', { baseUrl }],\n    queryFn: () => fetchThreads(baseUrl),\n    refetchInterval: 5000,\n    staleTime: 4000,\n  });\n}\n", "// VSCode webview bridge\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const acquireVsCodeApi: any;\n\nconst vscode =\n  typeof acquireVsCodeApi === 'function'\n    ? acquireVsCodeApi()\n    : {\n        postMessage: (_: unknown) => void 0,\n      };\n\nexport function postMessage(msg: unknown) {\n  vscode.postMessage(msg);\n}\n\nexport function onMessage(cb: (msg: any) => void) {\n  const handler = (e: MessageEvent) => {\n    cb(e.data);\n  };\n\n  window.addEventListener('message', handler);\n\n  // Return cleanup function\n  return () => {\n    window.removeEventListener('message', handler);\n  };\n}\n", "const ENCODED_ENTITIES = /[\"&<]/;\n\n/** @param {string} str */\nexport function encodeEntities(str) {\n\t// Skip all work for strings with no entities needing encoding:\n\tif (str.length === 0 || ENCODED_ENTITIES.test(str) === false) return str;\n\n\tlet last = 0,\n\t\ti = 0,\n\t\tout = '',\n\t\tch = '';\n\n\t// Seek forward in str until the next entity char:\n\tfor (; i < str.length; i++) {\n\t\tswitch (str.charCodeAt(i)) {\n\t\t\tcase 34:\n\t\t\t\tch = '&quot;';\n\t\t\t\tbreak;\n\t\t\tcase 38:\n\t\t\t\tch = '&amp;';\n\t\t\t\tbreak;\n\t\t\tcase 60:\n\t\t\t\tch = '&lt;';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\t\t// Append skipped/buffered characters and the encoded entity:\n\t\tif (i !== last) out += str.slice(last, i);\n\t\tout += ch;\n\t\t// Start the next seek/buffer after the entity's offset:\n\t\tlast = i + 1;\n\t}\n\tif (i !== last) out += str.slice(last, i);\n\treturn out;\n}\n", "/** Normal hydration that attaches to a DOM tree but does not diff it. */\nexport const MODE_HYDRATE = 1 << 5;\n/** Signifies this VNode suspended on the previous render */\nexport const MODE_SUSPENDED = 1 << 7;\n/** Indicates that this node needs to be inserted while patching children */\nexport const INSERT_VNODE = 1 << 2;\n/** Indicates a VNode has been matched with another VNode in the diff */\nexport const MATCHED = 1 << 1;\n\n/** Reset all mode flags */\nexport const RESET_MODE = ~(MODE_HYDRATE | MODE_SUSPENDED);\n\nexport const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\nexport const XHTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\nexport const MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n\nexport const NULL = null;\nexport const UNDEFINED = undefined;\nexport const EMPTY_OBJ = /** @type {any} */ ({});\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL =\n\t/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n", "import { options, Fragment } from 'preact';\nimport { encodeEntities } from './utils';\nimport { IS_NON_DIMENSIONAL } from '../../src/constants';\n\nlet vnodeId = 0;\n\nconst isArray = Array.isArray;\n\n/**\n * @fileoverview\n * This file exports various methods that implement Babel's \"automatic\" JSX runtime API:\n * - jsx(type, props, key)\n * - jsxs(type, props, key)\n * - jsxDEV(type, props, key, __source, __self)\n *\n * The implementation of createVNode here is optimized for performance.\n * Benchmarks: https://esbench.com/bench/5f6b54a0b4632100a7dcd2b3\n */\n\n/**\n * JSX.Element factory used by Babel's {runtime:\"automatic\"} JSX transform\n * @param {VNode['type']} type\n * @param {VNode['props']} props\n * @param {VNode['key']} [key]\n * @param {unknown} [isStaticChildren]\n * @param {unknown} [__source]\n * @param {unknown} [__self]\n */\nfunction createVNode(type, props, key, isStaticChildren, __source, __self) {\n\tif (!props) props = {};\n\t// We'll want to preserve `ref` in props to get rid of the need for\n\t// forwardRef components in the future, but that should happen via\n\t// a separate PR.\n\tlet normalizedProps = props,\n\t\tref,\n\t\ti;\n\n\tif ('ref' in normalizedProps) {\n\t\tnormalizedProps = {};\n\t\tfor (i in props) {\n\t\t\tif (i == 'ref') {\n\t\t\t\tref = props[i];\n\t\t\t} else {\n\t\t\t\tnormalizedProps[i] = props[i];\n\t\t\t}\n\t\t}\n\t}\n\n\t/** @type {VNode & { __source: any; __self: any }} */\n\tconst vnode = {\n\t\ttype,\n\t\tprops: normalizedProps,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t_component: null,\n\t\tconstructor: undefined,\n\t\t_original: --vnodeId,\n\t\t_index: -1,\n\t\t_flags: 0,\n\t\t__source,\n\t\t__self\n\t};\n\n\t// If a Component VNode, check for and apply defaultProps.\n\t// Note: `type` is often a String, and can be `undefined` in development.\n\tif (typeof type === 'function' && (ref = type.defaultProps)) {\n\t\tfor (i in ref)\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = ref[i];\n\t\t\t}\n\t}\n\n\tif (options.vnode) options.vnode(vnode);\n\treturn vnode;\n}\n\n/**\n * Create a template vnode. This function is not expected to be\n * used directly, but rather through a precompile JSX transform\n * @param {string[]} templates\n * @param  {Array<string | null | VNode>} exprs\n * @returns {VNode}\n */\nfunction jsxTemplate(templates, ...exprs) {\n\tconst vnode = createVNode(Fragment, { tpl: templates, exprs });\n\t// Bypass render to string top level Fragment optimization\n\tvnode.key = vnode._vnode;\n\treturn vnode;\n}\n\nconst JS_TO_CSS = {};\nconst CSS_REGEX = /[A-Z]/g;\n\n/**\n * Unwrap potential signals.\n * @param {*} value\n * @returns {*}\n */\nfunction normalizeAttrValue(value) {\n\treturn value !== null &&\n\t\ttypeof value === 'object' &&\n\t\ttypeof value.valueOf === 'function'\n\t\t? value.valueOf()\n\t\t: value;\n}\n\n/**\n * Serialize an HTML attribute to a string. This function is not\n * expected to be used directly, but rather through a precompile\n * JSX transform\n * @param {string} name The attribute name\n * @param {*} value The attribute value\n * @returns {string}\n */\nfunction jsxAttr(name, value) {\n\tif (options.attr) {\n\t\tconst result = options.attr(name, value);\n\t\tif (typeof result === 'string') return result;\n\t}\n\n\tvalue = normalizeAttrValue(value);\n\n\tif (name === 'ref' || name === 'key') return '';\n\tif (name === 'style' && typeof value === 'object') {\n\t\tlet str = '';\n\t\tfor (let prop in value) {\n\t\t\tlet val = value[prop];\n\t\t\tif (val != null && val !== '') {\n\t\t\t\tconst name =\n\t\t\t\t\tprop[0] == '-'\n\t\t\t\t\t\t? prop\n\t\t\t\t\t\t: JS_TO_CSS[prop] ||\n\t\t\t\t\t\t\t(JS_TO_CSS[prop] = prop.replace(CSS_REGEX, '-$&').toLowerCase());\n\n\t\t\t\tlet suffix = ';';\n\t\t\t\tif (\n\t\t\t\t\ttypeof val === 'number' &&\n\t\t\t\t\t// Exclude custom-attributes\n\t\t\t\t\t!name.startsWith('--') &&\n\t\t\t\t\t!IS_NON_DIMENSIONAL.test(name)\n\t\t\t\t) {\n\t\t\t\t\tsuffix = 'px;';\n\t\t\t\t}\n\t\t\t\tstr = str + name + ':' + val + suffix;\n\t\t\t}\n\t\t}\n\t\treturn name + '=\"' + encodeEntities(str) + '\"';\n\t}\n\n\tif (\n\t\tvalue == null ||\n\t\tvalue === false ||\n\t\ttypeof value === 'function' ||\n\t\ttypeof value === 'object'\n\t) {\n\t\treturn '';\n\t} else if (value === true) return name;\n\n\treturn name + '=\"' + encodeEntities('' + value) + '\"';\n}\n\n/**\n * Escape a dynamic child passed to `jsxTemplate`. This function\n * is not expected to be used directly, but rather through a\n * precompile JSX transform\n * @param {*} value\n * @returns {string | null | VNode | Array<string | null | VNode>}\n */\nfunction jsxEscape(value) {\n\tif (\n\t\tvalue == null ||\n\t\ttypeof value === 'boolean' ||\n\t\ttypeof value === 'function'\n\t) {\n\t\treturn null;\n\t}\n\n\tif (typeof value === 'object') {\n\t\t// Check for VNode\n\t\tif (value.constructor === undefined) return value;\n\n\t\tif (isArray(value)) {\n\t\t\tfor (let i = 0; i < value.length; i++) {\n\t\t\t\tvalue[i] = jsxEscape(value[i]);\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\t}\n\n\treturn encodeEntities('' + value);\n}\n\nexport {\n\tcreateVNode as jsx,\n\tcreateVNode as jsxs,\n\tcreateVNode as jsxDEV,\n\tFragment,\n\t// precompiled JSX transform\n\tjsxTemplate,\n\tjsxAttr,\n\tjsxEscape\n};\n", "\nimport type { ThreadListItem } from '../../lib/backend-types';\n\nexport function ThreadsList(props: {\n  items: ThreadListItem[];\n  selectedId?: string;\n  onSelect: (id: string) => void;\n}) {\n  const { items, selectedId, onSelect } = props;\n  if (!items.length) {\n    return <div className=\"color-fg-muted\">No threads yet.</div>;\n  }\n  return (\n    <div className=\"Box overflow-auto\" style={{ maxHeight: '50vh' }}>\n      <ul className=\"list-style-none\">\n        {items.map((t) => (\n          <li key={t.id} className={`d-flex flex-justify-between px-2 py-2 ${selectedId === t.id ? 'color-bg-subtle' : ''}`}>\n            <button className=\"btn-invisible text-left\" onClick={() => onSelect(t.id)}>\n              <div className=\"text-bold\">{t.label}</div>\n              <div className=\"color-fg-muted text-small\">{t.worktreeName}</div>\n            </button>\n            <span className=\"Label Label--secondary\">{new Date(t.updatedAt).toLocaleString()}</span>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n", "\n\nexport function AnimatedEllipsis() {\n  return <span className=\"AnimatedEllipsis\" />;\n}\n", "\nimport { useState } from 'preact/hooks';\nimport { baseUrl, clientRequestId, currentThreadId, worktreeName, } from '../signals/store';\nimport { useMachineQuery } from '../hooks/useMachineQuery';\nimport { useGlobalSSE } from '../hooks/useGlobalSSE';\nimport { useMachineSSE } from '../hooks/useMachineSSE';\nimport { createThread } from '../lib/http';\nimport { AnimatedEllipsis } from './components/AnimatedEllipsis';\n\nexport function WorktreeScreen() {\n  const [firstMessage, setFirstMessage] = useState('');\n  const [provisioning, setProvisioning] = useState(false);\n  const machineId = currentThreadId.value; // for us, threadId === machineId in your model\n\n  // When we already have a thread, load latest snapshot + keep live via SSE\n  const { data, isLoading } = useMachineQuery(baseUrl.value, machineId);\n  useMachineSSE(baseUrl.value, machineId);\n\n  // During new session provisioning, we want global SSE to capture thread.created\n  useGlobalSSE({\n    baseUrl: baseUrl.value,\n    topics: ['thread.created', 'machine.updated'],\n    clientRequestId: clientRequestId.value,\n    onThreadCreated: (evt) => {\n      // Scope by clientRequestId when provided\n      if (evt.clientRequestId && evt.clientRequestId !== clientRequestId.value) return;\n      // Adopt created machine\n      currentThreadId.value = evt.machineId;\n      setProvisioning(false);\n    },\n  });\n\n  async function startNewThread() {\n    if (!firstMessage.trim()) return;\n    if (!worktreeName.value) {\n      // NOTE: Ideally extension should pass worktreeName in worktree_detection; otherwise we can prompt the user\n      // For now we block and ask the user to reopen via main screen if undefined\n      console.error('Worktree name is unknown. Please open from main screen or update the extension to pass worktreeName.');\n      return;\n    }\n    setProvisioning(true);\n    await createThread({\n      baseUrl: baseUrl.value,\n      worktreeName: worktreeName.value,\n      userTask: firstMessage.trim(),\n      label: firstMessage.trim(),\n      clientRequestId: clientRequestId.value,\n    });\n    // Now we wait for thread.created via SSE -> handled in onThreadCreated\n  }\n\n  if (machineId) {\n    return (\n      <div className=\"Box p-3\">\n        <div className=\"d-flex flex-justify-between flex-items-center mb-2\">\n          <h2 className=\"h3 m-0\">Session</h2>\n          <span className=\"Label Label--primary\">{data?.status || 'running'}</span>\n        </div>\n        {isLoading ? (\n          <div className=\"color-fg-muted\">Loading history\u2026</div>\n        ) : (\n          <pre className=\"p-2 overflow-auto\" style={{ maxHeight: '60vh' }}>\n            {JSON.stringify(data?.context ?? data?.currentStateContext ?? {}, null, 2)}\n          </pre>\n        )}\n      </div>\n    );\n  }\n\n  // No session yet - show first message composer\n  return (\n    <div className=\"Box p-3 d-flex flex-column gap-2\">\n      <h2 className=\"h3 m-0\">New Session</h2>\n      <textarea\n        className=\"form-control\"\n        rows={6}\n        placeholder=\"Hello, how can I help you today?\"\n        value={firstMessage}\n        onInput={(e) => setFirstMessage((e.currentTarget as HTMLTextAreaElement).value)}\n      />\n      <div>\n        <button className=\"btn btn-primary\" disabled={!firstMessage.trim() || provisioning} onClick={startNewThread}>\n          {provisioning ? (\n            <>Thinking<AnimatedEllipsis /></>\n          ) : (\n            'Send'\n          )}\n        </button>\n      </div>\n    </div>\n  );\n}\n", "import { useQuery } from '@tanstack/react-query';\nimport { fetchMachine } from '../lib/http';\n\nexport function useMachineQuery(baseUrl: string, machineId?: string) {\n  return useQuery({\n    enabled: !!machineId,\n    queryKey: ['machine', { baseUrl, machineId }],\n    queryFn: () => fetchMachine(baseUrl, machineId!),\n  });\n}\n", "import { useEffect, useRef } from 'preact/hooks';\nimport { openSSE } from '../lib/sse';\nimport { queryClient } from '../lib/query';\nimport { sseBaseMain, sseBaseWorktree, isInWorktree } from '../signals/store';\nimport type {\n  MachineUpdatedEvent,\n  ThreadCreatedEvent,\n  ThreadsListResponse,\n} from '../lib/backend-types';\n\nexport function useGlobalSSE(params: {\n  baseUrl: string;\n  topics: string[];\n  clientRequestId: string;\n  onThreadCreated?: (evt: ThreadCreatedEvent) => void;\n  onMachineUpdated?: (evt: MachineUpdatedEvent) => void;\n}) {\n  const {\n    baseUrl,\n    topics,\n    clientRequestId,\n    onThreadCreated,\n    onMachineUpdated,\n  } = params;\n  const ctrlRef = useRef<{ close: () => void } | null>(null);\n\n  useEffect(() => {\n    // Prefer proxied SSE base if available\n    const sseBase = isInWorktree.value\n      ? sseBaseWorktree.value\n      : sseBaseMain.value;\n    const url =\n      (sseBase ?? `${baseUrl}/events`) +\n      `?topics=${encodeURIComponent(topics.join(','))}`;\n\n    ctrlRef.current = openSSE(url, {\n      'thread.created': (evt: ThreadCreatedEvent) => {\n        // push into threads list cache if present\n        queryClient.setQueryData(\n          ['threads', { baseUrl }],\n          (prev: ThreadsListResponse | undefined) => {\n            if (!prev) return prev;\n            return {\n              ...prev,\n              items: [\n                {\n                  id: evt.threadId,\n                  label: evt.label,\n                  worktreeName: evt.worktreeName,\n                  createdAt: new Date().toISOString(),\n                  updatedAt: new Date().toISOString(),\n                },\n                ...prev.items,\n              ],\n            };\n          }\n        );\n        onThreadCreated?.(evt);\n      },\n      'machine.updated': (evt: MachineUpdatedEvent) => {\n        // update machine cache\n        const m = evt.machine;\n        queryClient.setQueryData(['machine', { baseUrl, machineId: m.id }], m);\n        onMachineUpdated?.(evt);\n      },\n    });\n\n    return () => ctrlRef.current?.close();\n  }, [\n    baseUrl,\n    topics.join(','),\n    clientRequestId,\n    sseBaseMain.value,\n    sseBaseWorktree.value,\n    isInWorktree.value,\n  ]);\n}\n", "export type SSEHandlers = Record<string, (data: any) => void>;\n\nexport type SSEController = {\n  close: () => void;\n};\n\nexport function openSSE(\n  url: string,\n  handlers: SSEHandlers,\n  onStatus?: (s: 'open' | 'error' | 'closed') => void\n): SSEController {\n  let es: EventSource | null = null;\n  let closed = false;\n  let backoff = 1000; // start 1s\n\n  const connect = () => {\n    if (closed) return;\n    es = new EventSource(url);\n\n    es.addEventListener('open', () => {\n      backoff = 1000;\n      onStatus?.('open');\n    });\n\n    es.addEventListener('error', () => {\n      onStatus?.('error');\n      es?.close();\n      if (closed) return;\n      setTimeout(connect, backoff);\n      backoff = Math.min(backoff * 2, 30000); // cap at 30s\n    });\n\n    Object.keys(handlers).forEach((evt) => {\n      es!.addEventListener(evt, (e: MessageEvent) => {\n        try {\n          const data = JSON.parse((e as MessageEvent).data);\n          handlers[evt]?.(data);\n        } catch {\n          // ignore parse errors\n        }\n      });\n    });\n  };\n\n  connect();\n\n  return {\n    close: () => {\n      closed = true;\n      es?.close();\n      onStatus?.('closed');\n    },\n  };\n}\n", "import { QueryClient } from '@tanstack/react-query';\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: false,\n      retry: 2,\n    },\n  },\n});\n", "import { useEffect, useRef } from 'preact/hooks';\nimport { openSSE } from '../lib/sse';\nimport { queryClient } from '../lib/query';\nimport { sseBaseWorktree } from '../signals/store';\nimport type { MachineUpdatedEvent } from '../lib/backend-types';\n\nexport function useMachineSSE(baseUrl: string, machineId?: string) {\n  const ctrlRef = useRef<{ close: () => void } | null>(null);\n\n  useEffect(() => {\n    if (!machineId) return;\n\n    // If proxied /events base is set, strip the trailing /events and build the machine URL on it\n    const proxiedBase = sseBaseWorktree.value?.replace(/\\/events$/, '');\n    const baseForEvents = proxiedBase ?? baseUrl; // fallback to localhost\n    const url = `${baseForEvents}/machines/${encodeURIComponent(\n      machineId\n    )}/events`;\n\n    ctrlRef.current = openSSE(url, {\n      'machine.updated': (evt: MachineUpdatedEvent) => {\n        const m = evt.machine;\n        queryClient.setQueryData(['machine', { baseUrl, machineId: m.id }], m);\n      },\n    });\n\n    return () => ctrlRef.current?.close();\n  }, [baseUrl, machineId, sseBaseWorktree.value]);\n}\n", "import { AnimatedEllipsis } from './AnimatedEllipsis';\n\nexport function Loader({ message = 'Loading' }: { message?: string }) {\n  return (\n    <div className=\"flex items-center justify-center p-6\">\n      <div className=\"text-center\">\n        <div className=\"text-sm text-gray-500 mb-2\">\n          {message}\n          <AnimatedEllipsis />\n        </div>\n        <div className=\"animate-spin h-4 w-4 border-2 border-blue-500 border-t-transparent rounded-full mx-auto\"></div>\n      </div>\n    </div>\n  );\n}\n", "import { useEffect } from 'preact/hooks';\nimport { onMessage, postMessage } from '../lib/vscode';\nimport { isInWorktree, currentThreadId, setupPhase, worktreeName, isLoadingWorktreeInfo, sseBaseMain, sseBaseWorktree } from '../signals/store';\n\nexport function BootChannel() {\n  useEffect(() => {\n    const handleMessage = (msg: any) => {\n      if (!msg || typeof msg !== 'object') return;\n      \n      if (msg.type === 'worktree_detection') {\n        isInWorktree.value = !!msg.isInWorktree;\n        currentThreadId.value = msg.currentThreadId || undefined;\n        // If extension can pass worktreeName, capture it\n        if (msg.worktreeName) worktreeName.value = msg.worktreeName;\n        // Update signals for other components\n        isLoadingWorktreeInfo.value = false;\n        \n        // Update loading state for AppRoot\n        if (typeof window !== 'undefined' && (window as any).setAppLoading) {\n          (window as any).setAppLoading(false);\n        }\n      }\n      \n      if (msg.type === 'worktree_ready') {\n        setupPhase.value = 'ready';\n        if (msg.threadId) currentThreadId.value = msg.threadId;\n        if (msg.worktreeName) worktreeName.value = msg.worktreeName;\n      }\n      \n      if (msg.type === 'worktree_setup_error') {\n        setupPhase.value = 'error';\n      }\n\n      if (msg?.type === 'server_endpoints' && msg.sseBase) {\n        sseBaseMain.value = msg.sseBase.main;\n        sseBaseWorktree.value = msg.sseBase.worktree;\n      }\n    };\n\n    // Set up message listener\n    const cleanupListener = onMessage(handleMessage);\n\n    // Request initial worktree status from extension\n    postMessage({ type: 'getCurrentWorktree' });\n\n    // Cleanup function\n    return () => {\n      if (typeof cleanupListener === 'function') {\n        cleanupListener();\n      }\n    };\n  }, []);\n\n  return null;\n}\n"],
  "mappings": "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",
  "names": ["assign", "obj", "props", "i", "removeNode", "node", "parentNode", "removeChild", "createElement", "type", "children", "key", "ref", "normalizedProps", "arguments", "length", "slice", "call", "defaultProps", "createVNode", "original", "vnode", "__k", "__", "__b", "__e", "__c", "constructor", "__v", "vnodeId", "__i", "__u", "options", "createRef", "current", "Fragment", "BaseComponent", "context", "this", "getDomSibling", "childIndex", "sibling", "updateParentDomPointers", "child", "base", "enqueueRender", "c", "__d", "rerenderQueue", "push", "process", "__r", "prevDebounce", "debounceRendering", "defer", "component", "newVNode", "oldVNode", "oldDom", "commitQueue", "refQueue", "l", "sort", "depthSort", "shift", "__P", "diff", "__n", "namespaceURI", "commitRoot", "diffChildren", "parentDom", "renderResult", "newParentVNode", "oldParentVNode", "globalContext", "namespace", "excessDomChildren", "isHydrating", "childVNode", "newDom", "firstChildDom", "result", "shouldPlace", "oldChildren", "EMPTY_ARR", "newChildrenLength", "constructNewChildrenArray", "EMPTY_OBJ", "applyRef", "insert", "nextSibling", "skewedIndex", "matchingIndex", "oldChildrenLength", "remainingOldChildren", "skew", "Array", "String", "isArray", "undefined", "findMatchingIndex", "unmount", "parentVNode", "insertBefore", "nodeType", "toChildArray", "out", "some", "x", "y", "matched", "setStyle", "style", "value", "setProperty", "IS_NON_DIMENSIONAL", "test", "dom", "name", "oldValue", "useCapture", "lowerCaseName", "o", "cssText", "replace", "CAPTURE_REGEX", "toLowerCase", "_attached", "eventClock", "addEventListener", "eventProxyCapture", "eventProxy", "removeEventListener", "e", "removeAttribute", "setAttribute", "createEventProxy", "eventHandler", "_dispatched", "event", "tmp", "isNew", "oldProps", "oldState", "snapshot", "clearProcessingException", "newProps", "isClassComponent", "provider", "componentContext", "renderHook", "count", "newType", "outer", "prototype", "render", "contextType", "__E", "doRender", "sub", "state", "__h", "_sb", "__s", "getDerivedStateFromProps", "componentWillMount", "componentDidMount", "componentWillReceiveProps", "shouldComponentUpdate", "componentWillUpdate", "componentDidUpdate", "getChildContext", "getSnapshotBeforeUpdate", "cloneNode", "then", "MODE_HYDRATE", "indexOf", "markAsForce", "diffElementNodes", "diffed", "forEach", "root", "cb", "map", "newHtml", "oldHtml", "newChildren", "inputValue", "checked", "localName", "document", "createTextNode", "createElementNS", "is", "__m", "data", "childNodes", "attributes", "__html", "innerHTML", "content", "hasRefUnmount", "skipRemove", "r", "componentWillUnmount", "replaceNode", "documentElement", "firstChild", "hydrate", "cloneElement", "createContext", "defaultValue", "Context", "subs", "ctx", "Set", "_props", "add", "old", "delete", "Provider", "__l", "Consumer", "contextValue", "isValidElement", "error", "errorInfo", "ctor", "handled", "getDerivedStateFromError", "setState", "componentDidCatch", "update", "callback", "s", "forceUpdate", "Promise", "bind", "resolve", "setTimeout", "a", "b", "getHookState", "index", "type", "options", "__h", "currentComponent", "currentHook", "hooks", "__H", "__", "length", "push", "useState", "initialState", "useReducer", "invokeOrReturn", "reducer", "init", "hookState", "currentIndex", "_reducer", "__c", "action", "currentValue", "__N", "nextValue", "setState", "__f", "updateHookState", "p", "s", "c", "stateHooks", "filter", "x", "every", "prevScu", "call", "this", "shouldUpdate", "props", "forEach", "hookItem", "shouldComponentUpdate", "prevCWU", "componentWillUpdate", "__e", "tmp", "useEffect", "callback", "args", "state", "__s", "argsChanged", "_pendingArgs", "useLayoutEffect", "useRef", "initialValue", "useMemo", "current", "useImperativeHandle", "ref", "createHandle", "result", "concat", "factory", "useCallback", "useContext", "context", "provider", "sub", "value", "useDebugValue", "formatter", "n", "useErrorBoundary", "cb", "errState", "componentDidCatch", "err", "errorInfo", "undefined", "useId", "root", "__v", "__m", "mask", "flushAfterPaintEffects", "component", "afterPaintEffects", "shift", "__P", "invokeCleanup", "invokeEffect", "e", "afterNextFrame", "raf", "done", "clearTimeout", "timeout", "HAS_RAF", "cancelAnimationFrame", "setTimeout", "requestAnimationFrame", "hook", "comp", "cleanup", "oldArgs", "newArgs", "some", "arg", "f", "previousComponent", "prevRaf", "oldBeforeDiff", "oldBeforeRender", "oldAfterDiff", "oldCommit", "oldBeforeUnmount", "oldRoot", "_options", "__b", "__r", "diffed", "unmount", "vnode", "parentDom", "__k", "commitQueue", "hasErrored", "assign", "obj", "props", "i", "shallowDiffers", "a", "b", "useSyncExternalStore", "subscribe", "getSnapshot", "value", "_useState", "useState", "_instance", "__", "_getSnapshot", "forceUpdate", "useLayoutEffect", "didSnapshotChange", "useEffect", "inst", "x", "y", "latestGetSnapshot", "prevValue", "nextValue", "error", "startTransition", "cb", "useDeferredValue", "val", "useTransition", "useInsertionEffect", "PureComponent", "p", "c", "this", "context", "memo", "comparer", "shouldUpdate", "nextProps", "ref", "updateRef", "call", "current", "Memoed", "shouldComponentUpdate", "createElement", "displayName", "name", "prototype", "isReactComponent", "__f", "type", "Component", "isPureReactComponent", "state", "oldDiffHook", "options", "__b", "vnode", "REACT_FORWARD_SYMBOL", "Symbol", "for", "forwardRef", "fn", "Forwarded", "clone", "$$typeof", "render", "mapFn", "children", "toChildArray", "map", "Children", "forEach", "count", "length", "only", "normalized", "toArray", "oldCatchError", "__e", "newVNode", "oldVNode", "errorInfo", "then", "component", "__c", "__k", "oldUnmount", "unmount", "detachedClone", "detachedParent", "parentDom", "__H", "effect", "__P", "child", "removeOriginal", "originalParent", "__v", "appendChild", "Suspense", "__u", "_suspenders", "suspended", "__a", "lazy", "loader", "prom", "Lazy", "exports", "default", "e", "SuspenseList", "_next", "_map", "__R", "promise", "suspendingVNode", "suspendingComponent", "push", "resolve", "resolved", "onResolved", "onSuspensionComplete", "suspendedVNode", "__O", "setState", "pop", "componentWillUnmount", "document", "detachedComponent", "fallback", "Fragment", "list", "node", "delete", "revealOrder", "size", "ContextProvider", "getChildContext", "Portal", "_this", "container", "_container", "_temp", "root", "__m", "nodeType", "parentNode", "childNodes", "contains", "insertBefore", "before", "removeChild", "splice", "indexOf", "createPortal", "el", "containerInfo", "delegated", "get", "unsuspend", "wrappedUnsuspend", "Map", "reverse", "set", "componentDidUpdate", "componentDidMount", "REACT_ELEMENT_TYPE", "CAMEL_PROPS", "ON_ANI", "CAMEL_REPLACE", "IS_DOM", "onChangeInputType", "test", "parent", "callback", "textContent", "preactRender", "hydrate", "preactHydrate", "key", "Object", "defineProperty", "configurable", "v", "writable", "oldEventHook", "event", "empty", "isPropagationStopped", "cancelBubble", "isDefaultPrevented", "defaultPrevented", "persist", "nativeEvent", "currentComponent", "classNameDescriptorNonEnumberable", "enumerable", "class", "oldVNodeHook", "normalizedProps", "isNonDashedType", "lowerCased", "toLowerCase", "replace", "multiple", "Array", "isArray", "selected", "defaultValue", "className", "oldBeforeRender", "__r", "oldDiffed", "diffed", "dom", "__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED", "ReactCurrentDispatcher", "readContext", "__n", "useCallback", "useContext", "useDebugValue", "useId", "useImperativeHandle", "useMemo", "useReducer", "useRef", "createFactory", "bind", "isValidElement", "element", "isFragment", "isMemo", "String", "startsWith", "cloneElement", "preactCloneElement", "apply", "arguments", "unmountComponentAtNode", "findDOMNode", "base", "unstable_batchedUpdates", "arg", "flushSync", "StrictMode", "isElement", "index", "version", "createContext", "createRef", "t", "n", "ENCODED_ENTITIES", "encodeEntities", "str", "length", "test", "last", "i", "out", "ch", "charCodeAt", "slice", "IS_NON_DIMENSIONAL", "vnodeId", "isArray", "Array", "createVNode", "type", "props", "key", "isStaticChildren", "__source", "__self", "ref", "normalizedProps", "vnode", "__k", "__", "__b", "__e", "__c", "constructor", "__v", "__i", "__u", "defaultProps", "options", "JS_TO_CSS", "CSS_REGEX", "r", "u", "name", "value", "attr", "result", "valueOf", "prop", "val", "replace", "toLowerCase", "suffix", "startsWith", "jsxEscape", "templates", "Fragment", "tpl", "exprs", "call", "arguments", "_", "a", "b", "i", "v", "o", "_a", "_a", "_cleanup", "_setup", "_a", "_a", "x", "queryFnContext", "context", "_a", "_client", "queryFnContext", "_a", "_client", "_retryer", "getDefaultState", "x", "dispatch_fn", "_a", "m", "x", "_a", "_a", "_mutationCache", "_defaultOptions", "queryClient", "React", "React", "import_jsx_runtime", "React", "React", "queryClient", "queryClient", "slice", "options", "vnodeId", "isValidElement", "rerenderQueue", "prevDebounce", "defer", "depthSort", "CAPTURE_REGEX", "eventClock", "eventProxy", "eventProxyCapture", "i", "EMPTY_OBJ", "EMPTY_ARR", "IS_NON_DIMENSIONAL", "isArray", "Array", "assign", "obj", "props", "removeNode", "node", "parentNode", "removeChild", "createVNode", "type", "props", "key", "ref", "original", "vnode", "__k", "__", "__b", "__e", "__c", "constructor", "__v", "vnodeId", "__i", "__u", "options", "Fragment", "props", "children", "BaseComponent", "context", "this", "getDomSibling", "vnode", "childIndex", "__", "__i", "sibling", "__k", "length", "__e", "type", "updateParentDomPointers", "i", "child", "__c", "base", "enqueueRender", "c", "__d", "rerenderQueue", "push", "process", "__r", "prevDebounce", "options", "debounceRendering", "defer", "component", "newVNode", "oldVNode", "oldDom", "commitQueue", "refQueue", "l", "sort", "depthSort", "shift", "__v", "__P", "assign", "diff", "__n", "namespaceURI", "__u", "commitRoot", "diffChildren", "parentDom", "renderResult", "newParentVNode", "oldParentVNode", "globalContext", "namespace", "excessDomChildren", "isHydrating", "childVNode", "newDom", "firstChildDom", "result", "shouldPlace", "oldChildren", "EMPTY_ARR", "newChildrenLength", "constructNewChildrenArray", "EMPTY_OBJ", "ref", "applyRef", "insert", "nextSibling", "skewedIndex", "matchingIndex", "oldChildrenLength", "remainingOldChildren", "skew", "Array", "constructor", "String", "createVNode", "isArray", "undefined", "__b", "key", "findMatchingIndex", "unmount", "parentVNode", "parentNode", "insertBefore", "nodeType", "findMatchingIndex", "childVNode", "oldChildren", "skewedIndex", "remainingOldChildren", "x", "y", "childIndex", "key", "type", "oldVNode", "matched", "__u", "length", "setStyle", "style", "value", "setProperty", "IS_NON_DIMENSIONAL", "test", "dom", "name", "oldValue", "namespace", "useCapture", "lowerCaseName", "o", "cssText", "replace", "CAPTURE_REGEX", "toLowerCase", "slice", "l", "_attached", "eventClock", "addEventListener", "eventProxyCapture", "eventProxy", "removeEventListener", "e", "removeAttribute", "setAttribute", "createEventProxy", "this", "eventHandler", "_dispatched", "options", "event", "diff", "parentDom", "newVNode", "globalContext", "excessDomChildren", "commitQueue", "oldDom", "isHydrating", "refQueue", "tmp", "c", "isNew", "oldProps", "oldState", "snapshot", "clearProcessingException", "newProps", "isClassComponent", "provider", "componentContext", "i", "renderHook", "count", "renderResult", "newType", "undefined", "constructor", "__e", "__b", "outer", "props", "prototype", "render", "contextType", "__c", "__", "__E", "BaseComponent", "doRender", "sub", "state", "context", "__n", "__d", "__h", "_sb", "__s", "getDerivedStateFromProps", "assign", "__v", "componentWillMount", "componentDidMount", "push", "componentWillReceiveProps", "shouldComponentUpdate", "__k", "some", "vnode", "componentWillUpdate", "componentDidUpdate", "__P", "__r", "getChildContext", "getSnapshotBeforeUpdate", "Fragment", "cloneNode", "children", "diffChildren", "isArray", "base", "then", "MODE_HYDRATE", "nodeType", "nextSibling", "indexOf", "removeNode", "markAsForce", "diffElementNodes", "diffed", "forEach", "commitRoot", "root", "applyRef", "cb", "call", "node", "map", "newHtml", "oldHtml", "newChildren", "inputValue", "checked", "localName", "document", "createTextNode", "createElementNS", "is", "__m", "data", "childNodes", "EMPTY_OBJ", "attributes", "__html", "innerHTML", "content", "getDomSibling", "ref", "hasRefUnmount", "current", "unmount", "parentVNode", "skipRemove", "r", "componentWillUnmount", "slice", "EMPTY_ARR", "options", "__e", "error", "vnode", "oldVNode", "errorInfo", "component", "ctor", "handled", "__", "__c", "constructor", "getDerivedStateFromError", "setState", "__d", "componentDidCatch", "__E", "e", "vnodeId", "isValidElement", "undefined", "BaseComponent", "prototype", "update", "callback", "s", "this", "__s", "state", "assign", "props", "__v", "_sb", "push", "enqueueRender", "forceUpdate", "__h", "render", "Fragment", "rerenderQueue", "defer", "Promise", "then", "bind", "resolve", "setTimeout", "depthSort", "a", "b", "__b", "process", "__r", "CAPTURE_REGEX", "eventClock", "eventProxy", "createEventProxy", "eventProxyCapture", "i", "currentIndex", "currentComponent", "previousComponent", "prevRaf", "currentHook", "afterPaintEffects", "options", "_options", "oldBeforeDiff", "__b", "oldBeforeRender", "__r", "oldAfterDiff", "diffed", "oldCommit", "__c", "oldBeforeUnmount", "unmount", "oldRoot", "__", "getHookState", "index", "type", "__h", "hooks", "__H", "length", "push", "useState", "initialState", "useReducer", "invokeOrReturn", "reducer", "init", "hookState", "_reducer", "action", "currentValue", "__N", "nextValue", "setState", "__f", "updateHookState", "p", "s", "c", "stateHooks", "filter", "x", "every", "prevScu", "call", "this", "shouldUpdate", "props", "forEach", "hookItem", "shouldComponentUpdate", "prevCWU", "componentWillUpdate", "__e", "tmp", "useMemo", "factory", "args", "state", "getHookState", "currentIndex", "argsChanged", "__H", "__", "__h", "flushAfterPaintEffects", "component", "afterPaintEffects", "shift", "__P", "__H", "__h", "forEach", "invokeCleanup", "invokeEffect", "e", "options", "__e", "__v", "__b", "vnode", "currentComponent", "oldBeforeDiff", "__", "parentDom", "__k", "__m", "oldRoot", "__r", "oldBeforeRender", "currentIndex", "hooks", "__c", "previousComponent", "hookItem", "__N", "_pendingArgs", "diffed", "oldAfterDiff", "c", "length", "push", "prevRaf", "requestAnimationFrame", "afterNextFrame", "commitQueue", "some", "filter", "cb", "oldCommit", "unmount", "oldBeforeUnmount", "hasErrored", "s", "HAS_RAF", "callback", "raf", "done", "clearTimeout", "timeout", "cancelAnimationFrame", "setTimeout", "hook", "comp", "cleanup", "argsChanged", "oldArgs", "newArgs", "arg", "index", "invokeOrReturn", "f", "BRAND_SYMBOL", "Symbol", "endBatch", "batchDepth", "error", "hasError", "batchedEffect", "effect", "batchIteration", "next", "_nextBatchedEffect", "_flags", "needsToRecompute", "_callback", "err", "batch", "fn", "evalContext", "untracked", "prevContext", "globalVersion", "addDependency", "signal", "node", "_node", "_target", "_version", "_source", "_prevSource", "_sources", "_nextSource", "_prevTarget", "_nextTarget", "_rollbackNode", "_subscribe", "Signal", "value", "options", "this", "_value", "_targets", "_watched", "watched", "_unwatched", "unwatched", "name", "prototype", "brand", "_refresh", "_this", "targets", "_this$_watched", "call", "_unsubscribe", "_this2", "prev", "_this2$_unwatched", "subscribe", "_this3", "valueOf", "toString", "toJSON", "peek", "Object", "defineProperty", "get", "set", "Error", "_notify", "target", "prepareSources", "rollbackNode", "cleanupSources", "head", "Computed", "undefined", "_fn", "_globalVersion", "OUTDATED", "computed", "cleanupEffect", "cleanup", "_cleanup", "disposeEffect", "endEffect", "Effect", "finish", "_start", "bind", "_dispose", "dispose", "oldNotify", "currentComponent", "finishUpdate", "domQueue", "effect", "oldNotify", "this", "_notify", "hook", "hookName", "hookFn", "options", "bind", "setCurrentUpdater", "updater", "finishUpdate", "_start", "SignalValue", "_ref", "_this", "data", "currentSignal", "useSignal", "value", "_useMemo", "useMemo", "self", "v", "__v", "__", "__c", "_updateFlags", "wrappedSignal", "computed", "s", "isText", "Array", "isArray", "isValidElement", "dispose", "notifyDomUpdates", "__e", "nodeType", "oldDispose", "_updater", "_dispose", "call", "peek", "displayName", "Object", "defineProperties", "Signal", "prototype", "constructor", "configurable", "undefined", "type", "props", "get", "__b", "old", "vnode", "window", "__PREACT_SIGNALS_DEVTOOLS__", "exitComponent", "signalProps", "i", "__np", "enterComponent", "name", "Fragment", "component", "update", "_callback", "setState", "createUpdater", "currentComponent", "error", "oldVNode", "dom", "renderedProps", "updaters", "_updaters", "prop", "signal", "createPropUpdater", "_update", "propSignal", "setAsProperty", "ownerSVGElement", "changeSignal", "newSignal", "newProps", "setAttribute", "removeAttribute", "index", "Component", "shouldComponentUpdate", "state", "hasSignals", "_sources", "__f", "u", "hasHooksState", "HAS_PENDING_UPDATE", "useState", "deferDomUpdates", "cb", "queueMicrotask", "flushDomUpdates", "batch", "inst", "domQueue", "shift", "oldNotify", "call", "notifyDomUpdates", "push", "this", "options", "requestAnimationFrame", "deferDomUpdates", "d", "w", "k", "v", "baseUrl", "worktreeName", "clientRequestId", "baseUrl", "_", "e", "vnodeId", "isArray", "Array", "createVNode", "type", "props", "key", "isStaticChildren", "__source", "__self", "ref", "i", "normalizedProps", "vnode", "__k", "__", "__b", "__e", "__c", "constructor", "__v", "__i", "__u", "defaultProps", "options", "u", "t", "u", "d", "T", "q", "t", "u", "e", "baseUrl", "e", "baseUrl", "clientRequestId", "A", "y", "m", "baseUrl", "A", "y", "m", "d", "u", "e", "u", "d", "u", "y", "queryClient", "u"]
}
